{
  "swagger": "2.0",
  "basePath": "/ordermanagement/v4/orders",
  "host": "api.t-mobile.com",
  "x-servers": [
    {
      "url": "https://api.t-mobile.com/ordermanagement/v4/orders",
      "description": "Live Server"
    },
    {
      "url": "https://api.sandbox.t-mobile.com/ordermanagement/v4/orders",
      "description": "Sandbox Server"
    }
  ],
  "schemes": [
    "http"
  ],
  "info": {
    "title": "Order Management",
    "description": "Orders Resource for Order Management",
    "contact": {},
    "version": "4.0"
  },
  "paths": {
    "/{id}": {
      "get": {
        "tags": [
          "Order Lookup"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "no description",
            "schema": {
              "$ref": "#/definitions/order"
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "description": "The Access-Control-Allow-Headers header indicates, as part of a pre-flight request which headers can be used on the actual request.",
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "description": "The Access-Control-Allow-Methods header indicates, as part of a pre-flight request which methods can be used on the actual request.",
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "description": "The Access-Control-Allow-Origin header indicates whether a resource can be shared by returning the value of the Origin request header or “*” in the response.",
                "type": "string"
              },
              "Cache-Control": {
                "description": "no-cache",
                "type": "string"
              },
              "Content-Length": {
                "description": "The Content-Length header specifies the actual length of the returned payload.",
                "type": "string"
              },
              "Content-Type": {
                "description": "The Content-Length header specifies the actual length of the returned payload.",
                "type": "string"
              },
              "ETag": {
                "description": "The ETag header specifies the unique entity tag value for the returned resource.",
                "type": "string"
              },
              "Expires": {
                "description": "The Expires header gives the date-time after which the response is considered stale.",
                "type": "string"
              },
              "Location": {
                "description": "The Location header specifies the URI of a created resource, or redirects the API consumer to an alternate resource location.",
                "type": "string"
              },
              "servicetransactionid": {
                "description": "Internal identifier for transaction tracking an individual transaction/API request within API platform. Don’t receive/don’t send to downstream",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "503": {
            "description": "Service Unavailable",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          }
        },
        "operationId": "get-orders",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "type": "string"
          },
          {
            "$ref": "#/parameters/AuthorizationParam"
          },
          {
            "$ref": "#/parameters/Content-typeParam"
          },
          {
            "$ref": "#/parameters/AcceptParam"
          },
          {
            "$ref": "#/parameters/applicationuseridParam"
          },
          {
            "$ref": "#/parameters/sessionidParam"
          },
          {
            "$ref": "#/parameters/interactionidParam"
          },
          {
            "$ref": "#/parameters/activityidParam"
          },
          {
            "$ref": "#/parameters/workflowidParam"
          },
          {
            "$ref": "#/parameters/timestampParam"
          },
          {
            "$ref": "#/parameters/storeidParam"
          },
          {
            "$ref": "#/parameters/terminalidParam"
          },
          {
            "$ref": "#/parameters/tillidParam"
          },
          {
            "$ref": "#/parameters/dealercodeParam"
          },
          {
            "$ref": "#/parameters/segmentationidParam"
          },
          {
            "$ref": "#/parameters/authcustomeridParam"
          },
          {
            "$ref": "#/parameters/authfinancialaccountidParam"
          },
          {
            "$ref": "#/parameters/authlineofserviceidParam"
          },
          {
            "$ref": "#/parameters/Access-Control-Request-HeadersParam"
          },
          {
            "$ref": "#/parameters/Access-Control-Request-MethodParam"
          },
          {
            "$ref": "#/parameters/If-MatchParam"
          },
          {
            "$ref": "#/parameters/If-Modified-SinceParam"
          },
          {
            "$ref": "#/parameters/If-None-MatchParam"
          },
          {
            "$ref": "#/parameters/OriginParam"
          }
        ],
        "summary": "Retrieve order details by order ID"
      }
    },
    "/{id}/status": {
      "get": {
        "tags": [
          "Order Status"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "no description",
            "schema": {
              "$ref": "#/definitions/order"
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "description": "The Access-Control-Allow-Headers header indicates, as part of a pre-flight request which headers can be used on the actual request.",
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "description": "The Access-Control-Allow-Methods header indicates, as part of a pre-flight request which methods can be used on the actual request.",
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "description": "The Access-Control-Allow-Origin header indicates whether a resource can be shared by returning the value of the Origin request header or “*” in the response.",
                "type": "string"
              },
              "Cache-Control": {
                "description": "no-cache",
                "type": "string"
              },
              "Content-Length": {
                "description": "The Content-Length header specifies the actual length of the returned payload.",
                "type": "string"
              },
              "Content-Type": {
                "description": "The Content-Length header specifies the actual length of the returned payload.",
                "type": "string"
              },
              "ETag": {
                "description": "The ETag header specifies the unique entity tag value for the returned resource.",
                "type": "string"
              },
              "Expires": {
                "description": "The Expires header gives the date-time after which the response is considered stale.",
                "type": "string"
              },
              "Location": {
                "description": "The Location header specifies the URI of a created resource, or redirects the API consumer to an alternate resource location.",
                "type": "string"
              },
              "servicetransactionid": {
                "description": "Internal identifier for transaction tracking an individual transaction/API request within API platform. Don’t receive/don’t send to downstream",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "503": {
            "description": "Service Unavailable",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          }
        },
        "operationId": "get-orders-byId-status",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "type": "string"
          },
          {
            "$ref": "#/parameters/AuthorizationParam"
          },
          {
            "$ref": "#/parameters/Content-typeParam"
          },
          {
            "$ref": "#/parameters/AcceptParam"
          },
          {
            "$ref": "#/parameters/applicationuseridParam"
          },
          {
            "$ref": "#/parameters/sessionidParam"
          },
          {
            "$ref": "#/parameters/interactionidParam"
          },
          {
            "$ref": "#/parameters/activityidParam"
          },
          {
            "$ref": "#/parameters/workflowidParam"
          },
          {
            "$ref": "#/parameters/timestampParam"
          },
          {
            "$ref": "#/parameters/storeidParam"
          },
          {
            "$ref": "#/parameters/terminalidParam"
          },
          {
            "$ref": "#/parameters/tillidParam"
          },
          {
            "$ref": "#/parameters/dealercodeParam"
          },
          {
            "$ref": "#/parameters/segmentationidParam"
          },
          {
            "$ref": "#/parameters/authcustomeridParam"
          },
          {
            "$ref": "#/parameters/authfinancialaccountidParam"
          },
          {
            "$ref": "#/parameters/authlineofserviceidParam"
          },
          {
            "$ref": "#/parameters/Access-Control-Request-HeadersParam"
          },
          {
            "$ref": "#/parameters/Access-Control-Request-MethodParam"
          },
          {
            "$ref": "#/parameters/If-MatchParam"
          },
          {
            "$ref": "#/parameters/If-Modified-SinceParam"
          },
          {
            "$ref": "#/parameters/If-None-MatchParam"
          },
          {
            "$ref": "#/parameters/OriginParam"
          }
        ],
        "summary": "Get order status/summary."
      }
    },
    "/search": {
      "post": {
        "tags": [
          "Search Orders"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "no description",
            "schema": {
              "maxItems": 1,
              "$ref": "#/definitions/orderCollection"
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "description": "The Access-Control-Allow-Headers header indicates, as part of a pre-flight request which headers can be used on the actual request.",
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "description": "The Access-Control-Allow-Methods header indicates, as part of a pre-flight request which methods can be used on the actual request.",
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "description": "The Access-Control-Allow-Origin header indicates whether a resource can be shared by returning the value of the Origin request header or “*” in the response.",
                "type": "string"
              },
              "Cache-Control": {
                "description": "no-cache",
                "type": "string"
              },
              "Content-Length": {
                "description": "The Content-Length header specifies the actual length of the returned payload.",
                "type": "string"
              },
              "Content-Type": {
                "description": "The Content-Length header specifies the actual length of the returned payload.",
                "type": "string"
              },
              "ETag": {
                "description": "The ETag header specifies the unique entity tag value for the returned resource.",
                "type": "string"
              },
              "Expires": {
                "description": "The Expires header gives the date-time after which the response is considered stale.",
                "type": "string"
              },
              "Location": {
                "description": "The Location header specifies the URI of a created resource, or redirects the API consumer to an alternate resource location.",
                "type": "string"
              },
              "servicetransactionid": {
                "description": "Internal identifier for transaction tracking an individual transaction/API request within API platform. Don’t receive/don’t send to downstream",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "503": {
            "description": "Service Unavailable",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          }
        },
        "operationId": "post-orders-search",
        "parameters": [
          {
            "name": "searchCriteria",
            "in": "body",
            "schema": {
              "maxItems": 1,
              "$ref": "#/definitions/searchCriteria"
            },
            "description": ""
          },
          {
            "name": "pagenumber",
            "in": "query",
            "required": false,
            "description": "",
            "type": "string"
          },
          {
            "name": "pagesize",
            "in": "query",
            "required": false,
            "description": "",
            "type": "string"
          },
          {
            "$ref": "#/parameters/AuthorizationParam"
          },
          {
            "$ref": "#/parameters/Content-typeParam"
          },
          {
            "$ref": "#/parameters/AcceptParam"
          },
          {
            "$ref": "#/parameters/applicationuseridParam"
          },
          {
            "$ref": "#/parameters/sessionidParam"
          },
          {
            "$ref": "#/parameters/interactionidParam"
          },
          {
            "$ref": "#/parameters/activityidParam"
          },
          {
            "$ref": "#/parameters/workflowidParam"
          },
          {
            "$ref": "#/parameters/timestampParam"
          },
          {
            "$ref": "#/parameters/storeidParam"
          },
          {
            "$ref": "#/parameters/terminalidParam"
          },
          {
            "$ref": "#/parameters/tillidParam"
          },
          {
            "$ref": "#/parameters/dealercodeParam"
          },
          {
            "$ref": "#/parameters/segmentationidParam"
          },
          {
            "$ref": "#/parameters/authcustomeridParam"
          },
          {
            "$ref": "#/parameters/authfinancialaccountidParam"
          },
          {
            "$ref": "#/parameters/authlineofserviceidParam"
          },
          {
            "$ref": "#/parameters/Access-Control-Request-HeadersParam"
          },
          {
            "$ref": "#/parameters/Access-Control-Request-MethodParam"
          },
          {
            "$ref": "#/parameters/If-MatchParam"
          },
          {
            "$ref": "#/parameters/If-Modified-SinceParam"
          },
          {
            "$ref": "#/parameters/If-None-MatchParam"
          },
          {
            "$ref": "#/parameters/OriginParam"
          }
        ],
        "summary": "Search Order"
      }
    },
    "/": {
      "post": {
        "tags": [
          "Create Order"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "no description",
            "schema": {
              "$ref": "#/definitions/order"
            },
            "headers": {
              "Access-Control-Allow-Headers": {
                "description": "The Access-Control-Allow-Headers header indicates, as part of a pre-flight request which headers can be used on the actual request.",
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "description": "The Access-Control-Allow-Methods header indicates, as part of a pre-flight request which methods can be used on the actual request.",
                "type": "string"
              },
              "Access-Control-Allow-Origin": {
                "description": "The Access-Control-Allow-Origin header indicates whether a resource can be shared by returning the value of the Origin request header or “*” in the response.",
                "type": "string"
              },
              "Cache-Control": {
                "description": "no-cache",
                "type": "string"
              },
              "Content-Length": {
                "description": "The Content-Length header specifies the actual length of the returned payload.",
                "type": "string"
              },
              "Content-Type": {
                "description": "The Content-Length header specifies the actual length of the returned payload.",
                "type": "string"
              },
              "ETag": {
                "description": "The ETag header specifies the unique entity tag value for the returned resource.",
                "type": "string"
              },
              "Expires": {
                "description": "The Expires header gives the date-time after which the response is considered stale.",
                "type": "string"
              },
              "Location": {
                "description": "The Location header specifies the URI of a created resource, or redirects the API consumer to an alternate resource location.",
                "type": "string"
              },
              "servicetransactionid": {
                "description": "Internal identifier for transaction tracking an individual transaction/API request within API platform. Don’t receive/don’t send to downstream",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          },
          "500": {
            "description": "System Error",
            "schema": {
              "$ref": "#/definitions/errors"
            }
          }
        },
        "operationId": "post-orders",
        "parameters": [
          {
            "name": "order",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/order"
            },
            "description": ""
          },
          {
            "$ref": "#/parameters/AuthorizationParam"
          },
          {
            "$ref": "#/parameters/Content-typeParam"
          },
          {
            "$ref": "#/parameters/AcceptParam"
          },
          {
            "$ref": "#/parameters/applicationuseridParam"
          },
          {
            "$ref": "#/parameters/sessionidParam"
          },
          {
            "$ref": "#/parameters/interactionidParam"
          },
          {
            "$ref": "#/parameters/activityidParam"
          },
          {
            "$ref": "#/parameters/workflowidParam"
          },
          {
            "$ref": "#/parameters/timestampParam"
          },
          {
            "$ref": "#/parameters/storeidParam"
          },
          {
            "$ref": "#/parameters/terminalidParam"
          },
          {
            "$ref": "#/parameters/tillidParam"
          },
          {
            "$ref": "#/parameters/dealercodeParam"
          },
          {
            "$ref": "#/parameters/segmentationidParam"
          },
          {
            "$ref": "#/parameters/authcustomeridParam"
          },
          {
            "$ref": "#/parameters/authfinancialaccountidParam"
          },
          {
            "$ref": "#/parameters/authlineofserviceidParam"
          },
          {
            "$ref": "#/parameters/Access-Control-Request-HeadersParam"
          },
          {
            "$ref": "#/parameters/Access-Control-Request-MethodParam"
          },
          {
            "$ref": "#/parameters/If-MatchParam"
          },
          {
            "$ref": "#/parameters/If-Modified-SinceParam"
          },
          {
            "$ref": "#/parameters/If-None-MatchParam"
          },
          {
            "$ref": "#/parameters/OriginParam"
          }
        ],
        "summary": "Create/Submit Order"
      }
    }
  },
  "tags": [
    {
      "name": "Create Order"
    },
    {
      "name": "Search Orders"
    },
    {
      "name": "Order Status"
    },
    {
      "name": "Order Lookup"
    }
  ],
  "definitions": {
    "Account": {
      "type": "object",
      "properties": {
        "accountNumber": {
          "description": "The financial account number that identifies the account.",
          "type": "string"
        },
        "status": {
          "description": "The current status of the account.",
          "type": "string"
        },
        "statusChangeDate": {
          "description": "Account status change date",
          "type": "string",
          "format": "date"
        },
        "billingType": {
          "description": "A shorthand identifying name for the type of billing settlement: Prepaid, Postpaid.",
          "type": "string"
        },
        "lastUpdateTime": {
          "description": "Last date and time when the account was modified.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "AccountDetailBillingAddress": {
      "type": "object",
      "properties": {
        "addressId": {
          "description": "Identifier of address.",
          "type": "string"
        },
        "purposes": {
          "description": "The purpose or usage context for which the address should be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addressLine1": {
          "description": "The first line of the address, required.",
          "type": "string"
        },
        "addressLine2": {
          "description": "The second line of the address, optional.",
          "type": "string"
        },
        "addressLine3": {
          "description": "The third line of the address, optional.",
          "type": "string"
        },
        "cityName": {
          "description": "The name of the city in the mailing address. For military or diplomatic addresses should contain FPO, APO, or DPO.",
          "type": "string"
        },
        "stateCode": {
          "description": "The two letter state code.",
          "type": "string"
        },
        "zip": {
          "description": "The 5 digit zip or postal delivery code.",
          "type": "string"
        },
        "zipExt": {
          "description": "The zip or postal delivery extension.",
          "type": "string"
        },
        "countryCode": {
          "description": "Country code",
          "type": "string"
        },
        "geoCode": {
          "description": "A unique code that represents a geospatial coordinate measurement of an exact geographic location and time at, below, or above the surface of the earth",
          "type": "string"
        },
        "addressFormatType": {
          "type": "string"
        },
        "default": {
          "description": "Flags the address to be used for default communications.",
          "type": "string"
        },
        "validationStatus": {
          "description": "Specifies whether the address is VALIDATED, NONVALIDATED, or UNDELIVERABLE.",
          "type": "string"
        },
        "overwritten": {
          "description": "Flags whether the provided address has been overwritten by the system.",
          "type": "boolean"
        }
      }
    },
    "AccountDetailContactAddress": {
      "type": "object",
      "properties": {
        "addressId": {
          "description": "Identifier of address.",
          "type": "string"
        },
        "purposes": {
          "description": "The purpose or usage context for which the address should be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addressLine1": {
          "description": "The first line of the address, required.",
          "type": "string"
        },
        "addressLine2": {
          "description": "The second line of the address, optional.",
          "type": "string"
        },
        "addressLine3": {
          "description": "The third line of the address, optional.",
          "type": "string"
        },
        "cityName": {
          "description": "The name of the city in the mailing address. For military or diplomatic addresses should contain FPO, APO, or DPO.",
          "type": "string"
        },
        "stateCode": {
          "description": "The two letter state code.",
          "type": "string"
        },
        "zip": {
          "description": "The 5 digit zip or postal delivery code.",
          "type": "string"
        },
        "zipExt": {
          "description": "The zip or postal delivery extension.",
          "type": "string"
        },
        "countryCode": {
          "description": "Country code",
          "type": "string"
        },
        "geoCode": {
          "description": "A unique code that represents a geospatial coordinate measurement of an exact geographic location and time at, below, or above the surface of the earth",
          "type": "string"
        },
        "addressFormatType": {
          "type": "string"
        },
        "default": {
          "description": "Flags the address to be used for default communications.",
          "type": "string"
        },
        "validationStatus": {
          "description": "Specifies whether the address is VALIDATED, NONVALIDATED, or UNDELIVERABLE.",
          "type": "string"
        },
        "overwritten": {
          "description": "Flags whether the provided address has been overwritten by the system.",
          "type": "boolean"
        },
        "classification": {
          "description": "Classification of the address",
          "type": "string"
        },
        "label": {
          "description": "Address label",
          "type": "string"
        },
        "addressLine4": {
          "description": "The fourth free form line, expressed as text, of an address",
          "type": "string"
        },
        "stateName": {
          "description": "Name of the state",
          "type": "string"
        },
        "provinceName": {
          "description": "Name of the province",
          "type": "string"
        },
        "provinceCode": {
          "description": "Province code",
          "type": "string"
        },
        "countyName": {
          "description": "Name of the county",
          "type": "string"
        },
        "countyCode": {
          "description": "County code",
          "type": "string"
        },
        "attention": {
          "description": "Attention of the address",
          "type": "string"
        },
        "careOf": {
          "description": "The name, expressed as text, of a person or organization at this address to whom incoming mail is marked with words such as care of or C/O",
          "type": "string"
        },
        "postalCode": {
          "description": "A code specifying the postal code of the address",
          "type": "string"
        },
        "uncertaintyIndicator": {
          "description": "To indicate if the address is uncertain or not",
          "type": "boolean"
        },
        "geographicCoordinate": {
          "description": "The latitude and longitude of the geographic location that corresponds to the address.",
          "type": "object",
          "$ref": "#/definitions/GeographicCoordinate"
        },
        "urbanization": {
          "description": "Urbanization name or code",
          "type": "string"
        }
      }
    },
    "AccountDetailEligiblePaymentArrangements": {
      "type": "object",
      "properties": {
        "eligibilityStatus": {
          "description": "Status of account eligibility for payment arrangement. S = Success,N = Failure – the customer may not enter a new payment arrangement,D = Customer has not waited the minimum number of days since the last payment arrangement,E = The customer has exceeded the maximum number of allowed payment arrangements,F = Payment arrangement failed within the last XX (30) days,L = Letter was not sent,P = Schedule Payment exists.",
          "type": "string"
        },
        "category": {
          "description": "The payment arrangement category",
          "type": "string"
        },
        "maximumDaysFirstInstallment": {
          "description": "Maximum number of days before the first payment is due on the payment arrangement",
          "type": "integer",
          "format": "int32"
        },
        "maximumInstallment": {
          "description": "The maximum number of installments allowed for the payment arrangement.",
          "type": "integer",
          "format": "int32"
        },
        "maximumInstallmentInterval": {
          "description": "The maximum number of days interval between two installments",
          "type": "integer",
          "format": "int32"
        },
        "futureDatedIndicator": {
          "description": "Future dated payment indicator tells whether the payment arrangement is eligible for future dated payment / future dated collection or not.",
          "type": "boolean"
        },
        "minimumPercent": {
          "description": "The minimum percentage of actual payment that is allowed.",
          "type": "number",
          "format": "double"
        },
        "autoRestoreIndicator": {
          "description": "If true then involuntary suspended account (BAN) will be automatically restored after payment arrangement setup.",
          "type": "boolean"
        },
        "paymentArrangementType": {
          "description": "The payment arrangement type (Regular, Recurring, Proof of Payment, Late Billed)",
          "type": "string"
        }
      }
    },
    "AccountDetailPaymentArrangementCollection": {
      "type": "object",
      "properties": {
        "paymentArrangements": {
          "description": "Payment arrangement",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountDetailPaymentArrangements"
          }
        },
        "termsAgreementIndicator": {
          "description": "To indicate if the customer accept the agreement or not.",
          "type": "boolean"
        },
        "termsAndConditions": {
          "description": "Terms & Conditions",
          "type": "string"
        }
      }
    },
    "AccountDetailPaymentArrangements": {
      "type": "object",
      "properties": {
        "paymentArrangementId": {
          "description": "Identifier of payment arrangement.",
          "type": "string"
        },
        "paymentArrangementType": {
          "description": "The payment arrangement type (Regular, Recurring, Proof of Payment, Late Billed)",
          "type": "string"
        },
        "status": {
          "description": "The status of payment arrangements.(O = Open,C = Closed,D = Deleted,F = Failed Payment,M = Missed Payment)",
          "type": "string"
        },
        "totalAmount": {
          "description": "Total amount for payment arrangement set up.",
          "type": "number",
          "format": "double"
        },
        "currentDueAmount": {
          "description": "The payment arrangement amount that is currently due or billed.",
          "type": "number",
          "format": "double"
        },
        "dueDate": {
          "description": "When the payment arranangement amount is due",
          "type": "string",
          "format": "date"
        },
        "pastDueExpectedAmount": {
          "description": "Expected past due amount",
          "type": "number",
          "format": "double"
        },
        "pastDueActualAmount": {
          "description": "Actual past due amount",
          "type": "number",
          "format": "double"
        },
        "paymentArrangementFee": {
          "description": "The fee charged for payment arrangement setup.",
          "type": "number",
          "format": "double"
        },
        "futureDatedPaymentIndicator": {
          "description": "To indicate if the future dated payment is on file",
          "type": "boolean"
        },
        "actionCode": {
          "description": "Action code",
          "type": "string"
        },
        "paymentArrangementCategory": {
          "description": "Further classifies the payment arrangement.",
          "type": "string"
        },
        "specificationGroups": {
          "description": "named value pairs",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentArrangementSpecificationGroups"
          }
        },
        "paymentInstrument": {
          "description": "How the payment is made",
          "type": "object",
          "$ref": "#/definitions/PaymentArrangementPaymentInstrument"
        },
        "plannedPayments": {
          "description": "Planned payment",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentArrangementPlannedPayments"
          }
        },
        "channelId": {
          "description": "Identifier for the channel, such as WEB, CARE, RETAIL etc.",
          "type": "string"
        },
        "authorizationTime": {
          "description": "The time when the customer authorizes the payment arrangement",
          "type": "string",
          "format": "date-time"
        },
        "creationTime": {
          "description": "The time when the customer set up the payment arrangement",
          "type": "string",
          "format": "date-time"
        },
        "autoRestoreIndicator": {
          "description": "If TRUE, then involuntary suspended Account will automatically be restored by billing system after Payment Arrangement is set up, else billing system will not restore the Account automatically.",
          "type": "boolean"
        }
      }
    },
    "AccountHolderAddress": {
      "type": "object",
      "properties": {
        "addressId": {
          "description": "Identifier of address.",
          "type": "string"
        },
        "purposes": {
          "description": "The purpose or usage context for which the address should be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addressLine1": {
          "description": "The first line of the address, required.",
          "type": "string"
        },
        "addressLine2": {
          "description": "The second line of the address, optional.",
          "type": "string"
        },
        "addressLine3": {
          "description": "The third line of the address, optional.",
          "type": "string"
        },
        "cityName": {
          "description": "The name of the city in the mailing address. For military or diplomatic addresses should contain FPO, APO, or DPO.",
          "type": "string"
        },
        "stateCode": {
          "description": "The two letter state code.",
          "type": "string"
        },
        "zip": {
          "description": "The 5 digit zip or postal delivery code.",
          "type": "string"
        },
        "zipExt": {
          "description": "The zip or postal delivery extension.",
          "type": "string"
        },
        "countryCode": {
          "description": "Country code",
          "type": "string"
        },
        "geoCode": {
          "description": "A unique code that represents a geospatial coordinate measurement of an exact geographic location and time at, below, or above the surface of the earth",
          "type": "string"
        },
        "addressFormatType": {
          "type": "string"
        },
        "default": {
          "description": "Flags the address to be used for default communications.",
          "type": "string"
        },
        "validationStatus": {
          "description": "Specifies whether the address is VALIDATED, NONVALIDATED, or UNDELIVERABLE.",
          "type": "string"
        },
        "overwritten": {
          "description": "Flags whether the provided address has been overwritten by the system.",
          "type": "boolean"
        }
      }
    },
    "accountNumber": {
      "type": "string"
    },
    "AccountResourcesBills": {
      "type": "object",
      "properties": {
        "billCycleStartDate": {
          "description": "Start date of the bill cycle.",
          "type": "string",
          "format": "date"
        },
        "billCycleEndDate": {
          "description": "End date of the bill cycle.",
          "type": "string",
          "format": "date"
        },
        "amountDue": {
          "description": "Amount due in the given bill cycle.",
          "type": "number",
          "format": "double"
        },
        "dueDate": {
          "description": "Due date",
          "type": "string",
          "format": "date"
        },
        "nextCycleDate": {
          "description": "Next bill cycle date",
          "type": "string",
          "format": "date"
        },
        "language": {
          "description": "Language used",
          "type": "string"
        },
        "billCycleDay": {
          "description": "Day of the month when bill cycle normally runs.",
          "type": "integer",
          "format": "int32"
        },
        "paymentDueDay": {
          "description": "Day of month on which the payment is due.",
          "type": "integer",
          "format": "int32"
        },
        "monthlyRecurringCharge": {
          "description": "Monthly recurring charge, sometimes refer to MCR",
          "type": "number",
          "format": "double"
        },
        "autopayEnabled": {
          "description": "To indicate if the automatica payment is enabled",
          "type": "string"
        },
        "nextScheduledAutopay": {
          "description": "Next automatic payment date as scheduled",
          "type": "string",
          "format": "date"
        },
        "billCycleMonth": {
          "description": "Month of bill cycle.",
          "type": "integer",
          "format": "int32"
        },
        "billCycleYear": {
          "description": "Year of bill cycle.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AccountResourcesCustomerRoles": {
      "type": "object",
      "properties": {
        "accountNumber": {
          "description": "Customer account number",
          "type": "string"
        },
        "phoneNumber": {
          "description": "The phone number that identifies the line of service for which the customer plays a role",
          "type": "string"
        },
        "lineId": {
          "description": "Line Identification",
          "type": "string"
        },
        "roleType": {
          "description": "Type of role",
          "type": "string"
        }
      }
    },
    "AccountResourcesEligibility": {
      "type": "object",
      "properties": {
        "eligibilityIndicator": {
          "description": "Flag indicating whether the determination is eligible or ineligible.",
          "type": "boolean"
        },
        "eligibilityStatus": {
          "description": "Code identifying the status of eligibility that was determined.",
          "type": "string"
        },
        "eligibilityType": {
          "description": "The type of eligibility being established.",
          "type": "string"
        },
        "ineligibleReasons": {
          "description": "The reason for ineligibility.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IneligibleReasons"
          }
        }
      }
    },
    "AccountResourcesNotes": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Uniquely identifies a note.",
          "type": "string"
        },
        "entryTime": {
          "description": "Date and time when the note was entered.",
          "type": "string",
          "format": "date-time"
        },
        "expirationTime": {
          "description": "Date and time when the note expires, and should no longer be used.",
          "type": "string",
          "format": "date-time"
        },
        "type": {
          "description": "Type of the note.",
          "type": "string"
        },
        "content": {
          "description": "Text content of the note.",
          "type": "string"
        },
        "author": {
          "description": "Identifies the author of the note.",
          "type": "string"
        },
        "updatedBy": {
          "description": "Identifies the user who updated the note.",
          "type": "string"
        },
        "updateTime": {
          "description": "Date and time when the note was updated.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "AccountResourcesPrimaryHolder": {
      "type": "object",
      "properties": {
        "fullName": {
          "description": "The full name of the person, including first, middle, and family names.",
          "type": "string"
        },
        "firstName": {
          "description": "The given name or first name of the person",
          "type": "string"
        },
        "middleName": {
          "description": "The middle name or middle initial of the person.",
          "type": "string"
        },
        "familyName": {
          "description": "The family name or surname or last name of the person.",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        },
        "suffix": {
          "type": "string"
        },
        "phoneNumber": {
          "description": "The phone number that identifies the primary line of service on the account.",
          "type": "string"
        }
      }
    },
    "Accounts": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "$ref": "#/definitions/MetaDataFragment"
        },
        "commonCustomerId": {
          "description": "Common customer identifier (CCID)",
          "type": "string"
        },
        "customerId": {
          "description": "Uniquely identifies the customer party.",
          "type": "string"
        },
        "primaryHolder": {
          "description": "Primary account holder",
          "type": "object",
          "$ref": "#/definitions/AccountResourcesPrimaryHolder"
        },
        "accountNumber": {
          "description": "The financial account number that identifies the account.",
          "type": "string"
        },
        "status": {
          "description": "The current status of the account.",
          "type": "string"
        },
        "statusChangeDate": {
          "description": "Account status change date",
          "type": "string",
          "format": "date"
        },
        "billingType": {
          "description": "A shorthand identifying name for the type of billing settlement: Prepaid, Postpaid.",
          "type": "string"
        },
        "lastUpdateTime": {
          "description": "Last date and time when the account was modified.",
          "type": "string",
          "format": "date-time"
        },
        "accountType": {
          "description": "Type or classification of the account.",
          "type": "string"
        },
        "accountSubType": {
          "description": "account sub type",
          "type": "string"
        },
        "oldBillingType": {
          "description": "The previous billingType of the account.  Populated to show when the account has been converted from prepaid to postpaid or vice versa.",
          "type": "string"
        },
        "contactFirstName": {
          "description": "First name of the account contact",
          "type": "string"
        },
        "contactMiddleName": {
          "description": "Middle name of the account contact",
          "type": "string"
        },
        "contactFamilyName": {
          "description": "Family or last name of the account contact",
          "type": "string"
        },
        "contactNickName": {
          "description": "Nick name of the account contact",
          "type": "string"
        },
        "contactAddress": {
          "description": "Contact address",
          "type": "object",
          "$ref": "#/definitions/AccountDetailContactAddress"
        },
        "contactCreditClass": {
          "description": "Historical credit class from legacy systems, not current credit class of customer.",
          "type": "string"
        },
        "businessName": {
          "description": "Name of the business organization",
          "type": "string"
        },
        "birthDate": {
          "description": "Date of birth of the customer based on historical data. This value may not reflect current information on the customer.",
          "type": "string",
          "format": "date"
        },
        "taxId": {
          "description": "Federal tax identification number based on historical data. This value may not reflect current information on the customer.",
          "type": "string"
        },
        "ssn": {
          "description": "Social Security Number of the account owner based on historical data. This value may not reflect current information on the customer.",
          "type": "string"
        },
        "prepaidRefillableIndicator": {
          "description": "To indicate whether the prepaid account can be refilled",
          "type": "boolean"
        },
        "billingAddress": {
          "description": "Billing address",
          "type": "object",
          "$ref": "#/definitions/AccountDetailBillingAddress"
        },
        "timeZoneDescription": {
          "description": "Description of time zone of PPU (Pay Per Use) for primary line of service.",
          "type": "string"
        },
        "marketCode": {
          "description": "A three-letter code that identifies an eligible market.",
          "type": "string"
        },
        "marketName": {
          "description": "Market name segmentation",
          "type": "string"
        },
        "billingSystem": {
          "description": "The billing system that hosts the customer account. Used to identify legacy customers for service message routing.",
          "type": "string"
        },
        "serviceStartDate": {
          "type": "string",
          "format": "date"
        },
        "availableBalance": {
          "description": "Total dollar balance available for the account as a whole.",
          "type": "number",
          "format": "double"
        },
        "pastDueAmount": {
          "description": "Past due amount",
          "type": "number",
          "format": "double"
        },
        "pastDueAmountDescription": {
          "description": "Text describing the past due amount, to be presented with the past due amount on documents, screens, and forms.",
          "type": "string"
        },
        "pastDueDate": {
          "description": "Due date for pastDueAmount",
          "type": "string",
          "format": "date"
        },
        "currentDueAmount": {
          "description": "Current due amount",
          "type": "number",
          "format": "double"
        },
        "currentDueAmountDescription": {
          "description": "Text describing the current due amount, to be presented with the current due amount on documents, screens, and forms.",
          "type": "string"
        },
        "paymentMadeIndicator": {
          "description": "To indicate if payment was made successfully in the account or not",
          "type": "boolean"
        },
        "unbilledUsageAmount": {
          "description": "Total unbilled usage amount",
          "type": "number",
          "format": "double"
        },
        "maximumDaysBeforeDueDate": {
          "description": "The maximum number of days before the payment due date that a payment arrangement can be setup for the account",
          "type": "integer",
          "format": "int32"
        },
        "ezpayIndicator": {
          "description": "To indicate if EasyPay is setup for recurring payments or not",
          "type": "boolean"
        },
        "eligiblePaymentArrangements": {
          "description": "Payment arrangements the customer is eligible for.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountDetailEligiblePaymentArrangements"
          }
        },
        "lastPaidViaHotline": {
          "description": "To indicate if the last payment is paid via hot line.",
          "type": "boolean"
        },
        "isPuertoRicoIndicator": {
          "description": "To indicate if the account is for PuertoRico customer.",
          "type": "boolean"
        },
        "taxTreatmentIndicator": {
          "description": "To indicate if there is conflicting tax treatment subscribers in the account.",
          "type": "boolean"
        },
        "paymentArrangementCollection": {
          "description": "List of payment arrangement",
          "type": "object",
          "$ref": "#/definitions/AccountDetailPaymentArrangementCollection"
        },
        "billFormat": {
          "description": "Format of the bill",
          "type": "string"
        },
        "tenure": {
          "description": "The duration of the account of this customer with T-Mobile. How long have they been our customer?",
          "type": "string"
        },
        "linesCount": {
          "description": "Total number of lines.",
          "type": "integer",
          "format": "int32"
        },
        "activeLinesCount": {
          "description": "Total number of active lines.",
          "type": "integer",
          "format": "int32"
        },
        "eligibleLinesCount": {
          "description": "Total number of eligible lines.",
          "type": "integer",
          "format": "int32"
        },
        "suspendedLinesCount": {
          "description": "Number of lines that are suspended",
          "type": "integer",
          "format": "int32"
        },
        "taxTreatmentConflictPhoneNumbers": {
          "description": "List of tax treatment conflict phone numbers.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "quoteCount": {
          "description": "Number of quote made since the account was setup",
          "type": "integer",
          "format": "int32"
        },
        "eligibility": {
          "description": "Eligibility evaluation",
          "type": "object",
          "$ref": "#/definitions/AccountResourcesEligibility"
        },
        "notes": {
          "description": "Notes about the account",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountResourcesNotes"
          }
        },
        "bills": {
          "description": "Billing arrangements",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountResourcesBills"
          }
        },
        "customerRoles": {
          "description": "Customers role in this account",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountResourcesCustomerRoles"
          }
        },
        "equipmentCreditUsed": {
          "description": "The amount of equipment financing for the account with all active loan/lease current balance amounts, plus any reserved loan/lease amounts. Also known as the ECLB",
          "type": "number",
          "format": "double"
        },
        "equipmentCreditLimit": {
          "description": "Equipment Credit Limit when the account is active",
          "type": "number",
          "format": "double"
        },
        "equipmentCreditAvailableAmount": {
          "description": "The available equipment credit amount. It is the credit limit minus the credit used.",
          "type": "number",
          "format": "double"
        },
        "creditReservations": {
          "description": "List of credit reservations. It will have balance or credit reservation for loan, lease, poips",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FinancingProfileCreditReservations"
          }
        },
        "totalResidualAmount": {
          "description": "Sum of all lease residual amount in the account",
          "type": "number",
          "format": "double"
        },
        "lines": {
          "description": "List of line of service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CartAccountLines"
          }
        }
      }
    },
    "AdditionalRequiredOffers": {
      "type": "object",
      "properties": {
        "productOfferingId": {
          "description": "The id of the required offer.",
          "type": "string"
        },
        "variantIds": {
          "description": "Variants of the required offer.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "link": {
          "type": "string"
        }
      }
    },
    "AddressCommunications": {
      "type": "object",
      "properties": {
        "addressId": {
          "description": "Identifier of address.",
          "type": "string"
        },
        "purposes": {
          "description": "The purpose or usage context for which the address should be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addressLine1": {
          "description": "The first line of the address, required.",
          "type": "string"
        },
        "addressLine2": {
          "description": "The second line of the address, optional.",
          "type": "string"
        },
        "addressLine3": {
          "description": "The third line of the address, optional.",
          "type": "string"
        },
        "cityName": {
          "description": "The name of the city in the mailing address. For military or diplomatic addresses should contain FPO, APO, or DPO.",
          "type": "string"
        },
        "stateCode": {
          "description": "The two letter state code.",
          "type": "string"
        },
        "zip": {
          "description": "The 5 digit zip or postal delivery code.",
          "type": "string"
        },
        "zipExt": {
          "description": "The zip or postal delivery extension.",
          "type": "string"
        },
        "countryCode": {
          "description": "Country code",
          "type": "string"
        },
        "geoCode": {
          "description": "A unique code that represents a geospatial coordinate measurement of an exact geographic location and time at, below, or above the surface of the earth",
          "type": "string"
        },
        "addressFormatType": {
          "type": "string"
        },
        "default": {
          "description": "Flags the address to be used for default communications.",
          "type": "string"
        },
        "validationStatus": {
          "description": "Specifies whether the address is VALIDATED, NONVALIDATED, or UNDELIVERABLE.",
          "type": "string"
        },
        "overwritten": {
          "description": "Flags whether the provided address has been overwritten by the system.",
          "type": "boolean"
        },
        "classification": {
          "description": "Classification of the address",
          "type": "string"
        },
        "label": {
          "description": "Address label",
          "type": "string"
        },
        "addressLine4": {
          "description": "The fourth free form line, expressed as text, of an address",
          "type": "string"
        },
        "stateName": {
          "description": "Name of the state",
          "type": "string"
        },
        "provinceName": {
          "description": "Name of the province",
          "type": "string"
        },
        "provinceCode": {
          "description": "Province code",
          "type": "string"
        },
        "countyName": {
          "description": "Name of the county",
          "type": "string"
        },
        "countyCode": {
          "description": "County code",
          "type": "string"
        },
        "attention": {
          "description": "Attention of the address",
          "type": "string"
        },
        "careOf": {
          "description": "The name, expressed as text, of a person or organization at this address to whom incoming mail is marked with words such as care of or C/O",
          "type": "string"
        },
        "postalCode": {
          "description": "A code specifying the postal code of the address",
          "type": "string"
        },
        "uncertaintyIndicator": {
          "description": "To indicate if the address is uncertain or not",
          "type": "boolean"
        },
        "geographicCoordinate": {
          "description": "The latitude and longitude of the geographic location that corresponds to the address.",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersGeographicCoordinate_4"
        },
        "urbanization": {
          "description": "Urbanization name or code",
          "type": "string"
        },
        "optOut": {
          "description": "Indicates the privacy option for this communication channel. If opted out, this communication cannot be used for telemarketing calls, mails, emails...etc.",
          "type": "string"
        },
        "optOutReason": {
          "type": "string"
        },
        "optOutType": {
          "description": "Indicates the type of marketing activity that the customer has opted in/out from. If no value is provided, it is assumed that the customer has opted in/out from all activity through this communication channel.",
          "type": "string"
        }
      }
    },
    "Addresses": {
      "type": "object",
      "properties": {
        "addressId": {
          "description": "Identifier of address.",
          "type": "string"
        },
        "purposes": {
          "description": "The purpose or usage context for which the address should be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addressLine1": {
          "description": "The first line of the address, required.",
          "type": "string"
        },
        "addressLine2": {
          "description": "The second line of the address, optional.",
          "type": "string"
        },
        "addressLine3": {
          "description": "The third line of the address, optional.",
          "type": "string"
        },
        "cityName": {
          "description": "The name of the city in the mailing address. For military or diplomatic addresses should contain FPO, APO, or DPO.",
          "type": "string"
        },
        "stateCode": {
          "description": "The two letter state code.",
          "type": "string"
        },
        "zip": {
          "description": "The 5 digit zip or postal delivery code.",
          "type": "string"
        },
        "zipExt": {
          "description": "The zip or postal delivery extension.",
          "type": "string"
        },
        "countryCode": {
          "description": "Country code",
          "type": "string"
        },
        "geoCode": {
          "description": "A unique code that represents a geospatial coordinate measurement of an exact geographic location and time at, below, or above the surface of the earth",
          "type": "string"
        },
        "addressFormatType": {
          "type": "string"
        },
        "default": {
          "description": "Flags the address to be used for default communications.",
          "type": "string"
        },
        "validationStatus": {
          "description": "Specifies whether the address is VALIDATED, NONVALIDATED, or UNDELIVERABLE.",
          "type": "string"
        },
        "overwritten": {
          "description": "Flags whether the provided address has been overwritten by the system.",
          "type": "boolean"
        }
      }
    },
    "AssessmentQuestion": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "text": {
          "type": "string"
        }
      }
    },
    "assessmentQuestions": {
      "type": "object",
      "properties": {
        "assessmentQuestion": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssessmentQuestion"
          }
        }
      }
    },
    "BankPayment": {
      "type": "object",
      "properties": {
        "transferTypeCode": {
          "description": "Bank account payment transfer type",
          "type": "string"
        },
        "referenceCode": {
          "description": "Payment system-provided reference code for this payment.",
          "type": "string"
        },
        "bankName": {
          "description": "Name of the bank",
          "type": "string"
        },
        "accountHolderNames": {
          "description": "Name of the account holder.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "accountType": {
          "description": "Type of account, Saving or Checking.",
          "type": "string"
        },
        "accountNumber": {
          "description": "Account number in the bank",
          "type": "string"
        },
        "routingNumber": {
          "description": "Routing Number of the bank on whom the payment instrument is drawn",
          "type": "string"
        },
        "accountHolderAddress": {
          "description": "Address of the account holder",
          "type": "object",
          "$ref": "#/definitions/AccountHolderAddress"
        },
        "checkNumber": {
          "description": "The number uniquely identifying the check within the the set of checks written against the customers bank account.",
          "type": "string"
        },
        "bankAccountAlias": {
          "description": "Bank account alias used by the customer.",
          "type": "string"
        }
      }
    },
    "BankPaymentAccountHolderAddress": {
      "type": "object",
      "properties": {
        "addressId": {
          "description": "Identifier of address.",
          "type": "string"
        },
        "purposes": {
          "description": "The purpose or usage context for which the address should be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addressLine1": {
          "description": "The first line of the address, required.",
          "type": "string"
        },
        "addressLine2": {
          "description": "The second line of the address, optional.",
          "type": "string"
        },
        "addressLine3": {
          "description": "The third line of the address, optional.",
          "type": "string"
        },
        "cityName": {
          "description": "The name of the city in the mailing address. For military or diplomatic addresses should contain FPO, APO, or DPO.",
          "type": "string"
        },
        "stateCode": {
          "description": "The two letter state code.",
          "type": "string"
        },
        "zip": {
          "description": "The 5 digit zip or postal delivery code.",
          "type": "string"
        },
        "zipExt": {
          "description": "The zip or postal delivery extension.",
          "type": "string"
        },
        "countryCode": {
          "description": "Country code",
          "type": "string"
        },
        "geoCode": {
          "description": "A unique code that represents a geospatial coordinate measurement of an exact geographic location and time at, below, or above the surface of the earth",
          "type": "string"
        },
        "addressFormatType": {
          "type": "string"
        },
        "default": {
          "description": "Flags the address to be used for default communications.",
          "type": "string"
        },
        "validationStatus": {
          "description": "Specifies whether the address is VALIDATED, NONVALIDATED, or UNDELIVERABLE.",
          "type": "string"
        },
        "overwritten": {
          "description": "Flags whether the provided address has been overwritten by the system.",
          "type": "boolean"
        }
      }
    },
    "batchOrders": {
      "type": "object",
      "properties": {
        "order": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Order"
          }
        }
      }
    },
    "BatchOrdersAccount": {
      "type": "object",
      "properties": {
        "accountNumber": {
          "description": "The financial account number that identifies the account.",
          "type": "string"
        },
        "status": {
          "description": "The current status of the account.",
          "type": "string"
        },
        "statusChangeDate": {
          "description": "Account status change date",
          "type": "string",
          "format": "date"
        },
        "billingType": {
          "description": "A shorthand identifying name for the type of billing settlement: Prepaid, Postpaid.",
          "type": "string"
        },
        "lastUpdateTime": {
          "description": "Last date and time when the account was modified.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "BatchOrdersAccountHolderAddress": {
      "type": "object",
      "properties": {
        "addressId": {
          "description": "Identifier of address.",
          "type": "string"
        },
        "purposes": {
          "description": "The purpose or usage context for which the address should be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addressLine1": {
          "description": "The first line of the address, required.",
          "type": "string"
        },
        "addressLine2": {
          "description": "The second line of the address, optional.",
          "type": "string"
        },
        "addressLine3": {
          "description": "The third line of the address, optional.",
          "type": "string"
        },
        "cityName": {
          "description": "The name of the city in the mailing address. For military or diplomatic addresses should contain FPO, APO, or DPO.",
          "type": "string"
        },
        "stateCode": {
          "description": "The two letter state code.",
          "type": "string"
        },
        "zip": {
          "description": "The 5 digit zip or postal delivery code.",
          "type": "string"
        },
        "zipExt": {
          "description": "The zip or postal delivery extension.",
          "type": "string"
        },
        "countryCode": {
          "description": "Country code",
          "type": "string"
        },
        "geoCode": {
          "description": "A unique code that represents a geospatial coordinate measurement of an exact geographic location and time at, below, or above the surface of the earth",
          "type": "string"
        },
        "addressFormatType": {
          "type": "string"
        },
        "default": {
          "description": "Flags the address to be used for default communications.",
          "type": "string"
        },
        "validationStatus": {
          "description": "Specifies whether the address is VALIDATED, NONVALIDATED, or UNDELIVERABLE.",
          "type": "string"
        },
        "overwritten": {
          "description": "Flags whether the provided address has been overwritten by the system.",
          "type": "boolean"
        }
      }
    },
    "BatchOrdersAccounts": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "$ref": "#/definitions/BatchOrdersMetadata_4"
        },
        "commonCustomerId": {
          "description": "Common customer identifier (CCID)",
          "type": "string"
        },
        "customerId": {
          "description": "Uniquely identifies the customer party.",
          "type": "string"
        },
        "primaryHolder": {
          "description": "Primary account holder",
          "type": "object",
          "$ref": "#/definitions/PrimaryHolder"
        },
        "accountNumber": {
          "description": "The financial account number that identifies the account.",
          "type": "string"
        },
        "status": {
          "description": "The current status of the account.",
          "type": "string"
        },
        "statusChangeDate": {
          "description": "Account status change date",
          "type": "string",
          "format": "date"
        },
        "billingType": {
          "description": "A shorthand identifying name for the type of billing settlement: Prepaid, Postpaid.",
          "type": "string"
        },
        "lastUpdateTime": {
          "description": "Last date and time when the account was modified.",
          "type": "string",
          "format": "date-time"
        },
        "accountType": {
          "description": "Type or classification of the account.",
          "type": "string"
        },
        "accountSubType": {
          "description": "account sub type",
          "type": "string"
        },
        "oldBillingType": {
          "description": "The previous billingType of the account.  Populated to show when the account has been converted from prepaid to postpaid or vice versa.",
          "type": "string"
        },
        "contactFirstName": {
          "description": "First name of the account contact",
          "type": "string"
        },
        "contactMiddleName": {
          "description": "Middle name of the account contact",
          "type": "string"
        },
        "contactFamilyName": {
          "description": "Family or last name of the account contact",
          "type": "string"
        },
        "contactNickName": {
          "description": "Nick name of the account contact",
          "type": "string"
        },
        "contactAddress": {
          "description": "Contact address",
          "type": "object",
          "$ref": "#/definitions/ContactAddress"
        },
        "contactCreditClass": {
          "description": "Historical credit class from legacy systems, not current credit class of customer.",
          "type": "string"
        },
        "businessName": {
          "description": "Name of the business organization",
          "type": "string"
        },
        "birthDate": {
          "description": "Date of birth of the customer based on historical data. This value may not reflect current information on the customer.",
          "type": "string",
          "format": "date"
        },
        "taxId": {
          "description": "Federal tax identification number based on historical data. This value may not reflect current information on the customer.",
          "type": "string"
        },
        "ssn": {
          "description": "Social Security Number of the account owner based on historical data. This value may not reflect current information on the customer.",
          "type": "string"
        },
        "prepaidRefillableIndicator": {
          "description": "To indicate whether the prepaid account can be refilled",
          "type": "boolean"
        },
        "billingAddress": {
          "description": "Billing address",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersBillingAddress_1"
        },
        "timeZoneDescription": {
          "description": "Description of time zone of PPU (Pay Per Use) for primary line of service.",
          "type": "string"
        },
        "marketCode": {
          "description": "A three-letter code that identifies an eligible market.",
          "type": "string"
        },
        "marketName": {
          "description": "Market name segmentation",
          "type": "string"
        },
        "billingSystem": {
          "description": "The billing system that hosts the customer account. Used to identify legacy customers for service message routing.",
          "type": "string"
        },
        "serviceStartDate": {
          "type": "string",
          "format": "date"
        },
        "availableBalance": {
          "description": "Total dollar balance available for the account as a whole.",
          "type": "number",
          "format": "double"
        },
        "pastDueAmount": {
          "description": "Past due amount",
          "type": "number",
          "format": "double"
        },
        "pastDueAmountDescription": {
          "description": "Text describing the past due amount, to be presented with the past due amount on documents, screens, and forms.",
          "type": "string"
        },
        "pastDueDate": {
          "description": "Due date for pastDueAmount",
          "type": "string",
          "format": "date"
        },
        "currentDueAmount": {
          "description": "Current due amount",
          "type": "number",
          "format": "double"
        },
        "currentDueAmountDescription": {
          "description": "Text describing the current due amount, to be presented with the current due amount on documents, screens, and forms.",
          "type": "string"
        },
        "paymentMadeIndicator": {
          "description": "To indicate if payment was made successfully in the account or not",
          "type": "boolean"
        },
        "unbilledUsageAmount": {
          "description": "Total unbilled usage amount",
          "type": "number",
          "format": "double"
        },
        "maximumDaysBeforeDueDate": {
          "description": "The maximum number of days before the payment due date that a payment arrangement can be setup for the account",
          "type": "integer",
          "format": "int32"
        },
        "ezpayIndicator": {
          "description": "To indicate if EasyPay is setup for recurring payments or not",
          "type": "boolean"
        },
        "eligiblePaymentArrangements": {
          "description": "Payment arrangements the customer is eligible for.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EligiblePaymentArrangements"
          }
        },
        "lastPaidViaHotline": {
          "description": "To indicate if the last payment is paid via hot line.",
          "type": "boolean"
        },
        "isPuertoRicoIndicator": {
          "description": "To indicate if the account is for PuertoRico customer.",
          "type": "boolean"
        },
        "taxTreatmentIndicator": {
          "description": "To indicate if there is conflicting tax treatment subscribers in the account.",
          "type": "boolean"
        },
        "paymentArrangementCollection": {
          "description": "List of payment arrangement",
          "type": "object",
          "$ref": "#/definitions/PaymentArrangementCollection"
        },
        "billFormat": {
          "description": "Format of the bill",
          "type": "string"
        },
        "tenure": {
          "description": "The duration of the account of this customer with T-Mobile. How long have they been our customer?",
          "type": "string"
        },
        "linesCount": {
          "description": "Total number of lines.",
          "type": "integer",
          "format": "int32"
        },
        "activeLinesCount": {
          "description": "Total number of active lines.",
          "type": "integer",
          "format": "int32"
        },
        "eligibleLinesCount": {
          "description": "Total number of eligible lines.",
          "type": "integer",
          "format": "int32"
        },
        "suspendedLinesCount": {
          "description": "Number of lines that are suspended",
          "type": "integer",
          "format": "int32"
        },
        "taxTreatmentConflictPhoneNumbers": {
          "description": "List of tax treatment conflict phone numbers.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "quoteCount": {
          "description": "Number of quote made since the account was setup",
          "type": "integer",
          "format": "int32"
        },
        "eligibility": {
          "description": "Eligibility evaluation",
          "type": "object",
          "$ref": "#/definitions/Eligibility"
        },
        "notes": {
          "description": "Notes about the account",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersNotes_1"
          }
        },
        "bills": {
          "description": "Billing arrangements",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Bills"
          }
        },
        "customerRoles": {
          "description": "Customers role in this account",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerRoles"
          }
        },
        "equipmentCreditUsed": {
          "description": "The amount of equipment financing for the account with all active loan/lease current balance amounts, plus any reserved loan/lease amounts. Also known as the ECLB",
          "type": "number",
          "format": "double"
        },
        "equipmentCreditLimit": {
          "description": "Equipment Credit Limit when the account is active",
          "type": "number",
          "format": "double"
        },
        "equipmentCreditAvailableAmount": {
          "description": "The available equipment credit amount. It is the credit limit minus the credit used.",
          "type": "number",
          "format": "double"
        },
        "creditReservations": {
          "description": "List of credit reservations. It will have balance or credit reservation for loan, lease, poips",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreditReservations"
          }
        },
        "totalResidualAmount": {
          "description": "Sum of all lease residual amount in the account",
          "type": "number",
          "format": "double"
        },
        "lines": {
          "description": "List of line of service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersLines"
          }
        }
      }
    },
    "BatchOrdersAccounts_1": {
      "type": "object",
      "properties": {
        "accountNumber": {
          "description": "The financial account number that identifies the account.",
          "type": "string"
        },
        "status": {
          "description": "The current status of the account.",
          "type": "string"
        },
        "statusChangeDate": {
          "description": "Account status change date",
          "type": "string",
          "format": "date"
        },
        "billingType": {
          "description": "A shorthand identifying name for the type of billing settlement: Prepaid, Postpaid.",
          "type": "string"
        },
        "lastUpdateTime": {
          "description": "Last date and time when the account was modified.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "BatchOrdersAccounts_2": {
      "type": "object",
      "properties": {
        "accountNumber": {
          "description": "Account Number",
          "type": "string"
        },
        "oneTimeCharges": {
          "description": "List of one time charge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersOneTimeCharges_4"
          }
        },
        "recurringCharges": {
          "description": "List of recurring charge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersRecurringCharges_4"
          }
        },
        "oneTimeCredits": {
          "description": "One time credits",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersOneTimeCredits_2"
          }
        },
        "taxCollection": {
          "type": "object",
          "$ref": "#/definitions/BatchOrdersTaxCollection_2"
        },
        "totalDue": {
          "description": "Total due",
          "type": "number",
          "format": "double"
        },
        "totalDueDescription": {
          "description": "Description for totalDue",
          "type": "string"
        },
        "totalDueWithoutTax": {
          "description": "totalDue without tax",
          "type": "number",
          "format": "double"
        },
        "totalDueWithoutTaxDescription": {
          "description": "Description for totalDueWithoutTax",
          "type": "string"
        }
      }
    },
    "BatchOrdersAdditionalRequiredOffers": {
      "type": "object",
      "properties": {
        "productOfferingId": {
          "description": "The id of the required offer.",
          "type": "string"
        },
        "variantIds": {
          "description": "Variants of the required offer.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "link": {
          "type": "string"
        }
      }
    },
    "BatchOrdersAdditionalRequiredOffers_1": {
      "type": "object",
      "properties": {
        "productOfferingId": {
          "description": "The id of the required offer.",
          "type": "string"
        },
        "variantIds": {
          "description": "Variants of the required offer.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "link": {
          "type": "string"
        }
      }
    },
    "BatchOrdersAdditionalRequiredOffers_2": {
      "type": "object",
      "properties": {
        "productOfferingId": {
          "description": "The id of the required offer.",
          "type": "string"
        },
        "variantIds": {
          "description": "Variants of the required offer.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "link": {
          "type": "string"
        }
      }
    },
    "BatchOrdersAddressCommunications": {
      "type": "object",
      "properties": {
        "addressId": {
          "description": "Identifier of address.",
          "type": "string"
        },
        "purposes": {
          "description": "The purpose or usage context for which the address should be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addressLine1": {
          "description": "The first line of the address, required.",
          "type": "string"
        },
        "addressLine2": {
          "description": "The second line of the address, optional.",
          "type": "string"
        },
        "addressLine3": {
          "description": "The third line of the address, optional.",
          "type": "string"
        },
        "cityName": {
          "description": "The name of the city in the mailing address. For military or diplomatic addresses should contain FPO, APO, or DPO.",
          "type": "string"
        },
        "stateCode": {
          "description": "The two letter state code.",
          "type": "string"
        },
        "zip": {
          "description": "The 5 digit zip or postal delivery code.",
          "type": "string"
        },
        "zipExt": {
          "description": "The zip or postal delivery extension.",
          "type": "string"
        },
        "countryCode": {
          "description": "Country code",
          "type": "string"
        },
        "geoCode": {
          "description": "A unique code that represents a geospatial coordinate measurement of an exact geographic location and time at, below, or above the surface of the earth",
          "type": "string"
        },
        "addressFormatType": {
          "type": "string"
        },
        "default": {
          "description": "Flags the address to be used for default communications.",
          "type": "string"
        },
        "validationStatus": {
          "description": "Specifies whether the address is VALIDATED, NONVALIDATED, or UNDELIVERABLE.",
          "type": "string"
        },
        "overwritten": {
          "description": "Flags whether the provided address has been overwritten by the system.",
          "type": "boolean"
        },
        "classification": {
          "description": "Classification of the address",
          "type": "string"
        },
        "label": {
          "description": "Address label",
          "type": "string"
        },
        "addressLine4": {
          "description": "The fourth free form line, expressed as text, of an address",
          "type": "string"
        },
        "stateName": {
          "description": "Name of the state",
          "type": "string"
        },
        "provinceName": {
          "description": "Name of the province",
          "type": "string"
        },
        "provinceCode": {
          "description": "Province code",
          "type": "string"
        },
        "countyName": {
          "description": "Name of the county",
          "type": "string"
        },
        "countyCode": {
          "description": "County code",
          "type": "string"
        },
        "attention": {
          "description": "Attention of the address",
          "type": "string"
        },
        "careOf": {
          "description": "The name, expressed as text, of a person or organization at this address to whom incoming mail is marked with words such as care of or C/O",
          "type": "string"
        },
        "postalCode": {
          "description": "A code specifying the postal code of the address",
          "type": "string"
        },
        "uncertaintyIndicator": {
          "description": "To indicate if the address is uncertain or not",
          "type": "boolean"
        },
        "geographicCoordinate": {
          "description": "The latitude and longitude of the geographic location that corresponds to the address.",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersGeographicCoordinate_5"
        },
        "urbanization": {
          "description": "Urbanization name or code",
          "type": "string"
        },
        "optOut": {
          "description": "Indicates the privacy option for this communication channel. If opted out, this communication cannot be used for telemarketing calls, mails, emails...etc.",
          "type": "string"
        },
        "optOutReason": {
          "type": "string"
        },
        "optOutType": {
          "description": "Indicates the type of marketing activity that the customer has opted in/out from. If no value is provided, it is assumed that the customer has opted in/out from all activity through this communication channel.",
          "type": "string"
        }
      }
    },
    "BatchOrdersAddresses": {
      "type": "object",
      "properties": {
        "addressId": {
          "description": "Identifier of address.",
          "type": "string"
        },
        "purposes": {
          "description": "The purpose or usage context for which the address should be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addressLine1": {
          "description": "The first line of the address, required.",
          "type": "string"
        },
        "addressLine2": {
          "description": "The second line of the address, optional.",
          "type": "string"
        },
        "addressLine3": {
          "description": "The third line of the address, optional.",
          "type": "string"
        },
        "cityName": {
          "description": "The name of the city in the mailing address. For military or diplomatic addresses should contain FPO, APO, or DPO.",
          "type": "string"
        },
        "stateCode": {
          "description": "The two letter state code.",
          "type": "string"
        },
        "zip": {
          "description": "The 5 digit zip or postal delivery code.",
          "type": "string"
        },
        "zipExt": {
          "description": "The zip or postal delivery extension.",
          "type": "string"
        },
        "countryCode": {
          "description": "Country code",
          "type": "string"
        },
        "geoCode": {
          "description": "A unique code that represents a geospatial coordinate measurement of an exact geographic location and time at, below, or above the surface of the earth",
          "type": "string"
        },
        "addressFormatType": {
          "type": "string"
        },
        "default": {
          "description": "Flags the address to be used for default communications.",
          "type": "string"
        },
        "validationStatus": {
          "description": "Specifies whether the address is VALIDATED, NONVALIDATED, or UNDELIVERABLE.",
          "type": "string"
        },
        "overwritten": {
          "description": "Flags whether the provided address has been overwritten by the system.",
          "type": "boolean"
        }
      }
    },
    "BatchOrdersBankPayment": {
      "type": "object",
      "properties": {
        "transferTypeCode": {
          "description": "Bank account payment transfer type",
          "type": "string"
        },
        "referenceCode": {
          "description": "Payment system-provided reference code for this payment.",
          "type": "string"
        },
        "bankName": {
          "description": "Name of the bank",
          "type": "string"
        },
        "accountHolderNames": {
          "description": "Name of the account holder.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "accountType": {
          "description": "Type of account, Saving or Checking.",
          "type": "string"
        },
        "accountNumber": {
          "description": "Account number in the bank",
          "type": "string"
        },
        "routingNumber": {
          "description": "Routing Number of the bank on whom the payment instrument is drawn",
          "type": "string"
        },
        "accountHolderAddress": {
          "description": "Address of the account holder",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersAccountHolderAddress"
        },
        "checkNumber": {
          "description": "The number uniquely identifying the check within the the set of checks written against the customers bank account.",
          "type": "string"
        },
        "bankAccountAlias": {
          "description": "Bank account alias used by the customer.",
          "type": "string"
        }
      }
    },
    "BatchOrdersBillingAddress": {
      "type": "object",
      "properties": {
        "addressId": {
          "description": "Identifier of address.",
          "type": "string"
        },
        "purposes": {
          "description": "The purpose or usage context for which the address should be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addressLine1": {
          "description": "The first line of the address, required.",
          "type": "string"
        },
        "addressLine2": {
          "description": "The second line of the address, optional.",
          "type": "string"
        },
        "addressLine3": {
          "description": "The third line of the address, optional.",
          "type": "string"
        },
        "cityName": {
          "description": "The name of the city in the mailing address. For military or diplomatic addresses should contain FPO, APO, or DPO.",
          "type": "string"
        },
        "stateCode": {
          "description": "The two letter state code.",
          "type": "string"
        },
        "zip": {
          "description": "The 5 digit zip or postal delivery code.",
          "type": "string"
        },
        "zipExt": {
          "description": "The zip or postal delivery extension.",
          "type": "string"
        },
        "countryCode": {
          "description": "Country code",
          "type": "string"
        },
        "geoCode": {
          "description": "A unique code that represents a geospatial coordinate measurement of an exact geographic location and time at, below, or above the surface of the earth",
          "type": "string"
        },
        "addressFormatType": {
          "type": "string"
        },
        "default": {
          "description": "Flags the address to be used for default communications.",
          "type": "string"
        },
        "validationStatus": {
          "description": "Specifies whether the address is VALIDATED, NONVALIDATED, or UNDELIVERABLE.",
          "type": "string"
        },
        "overwritten": {
          "description": "Flags whether the provided address has been overwritten by the system.",
          "type": "boolean"
        },
        "classification": {
          "description": "Classification of the address",
          "type": "string"
        },
        "label": {
          "description": "Address label",
          "type": "string"
        },
        "addressLine4": {
          "description": "The fourth free form line, expressed as text, of an address",
          "type": "string"
        },
        "stateName": {
          "description": "Name of the state",
          "type": "string"
        },
        "provinceName": {
          "description": "Name of the province",
          "type": "string"
        },
        "provinceCode": {
          "description": "Province code",
          "type": "string"
        },
        "countyName": {
          "description": "Name of the county",
          "type": "string"
        },
        "countyCode": {
          "description": "County code",
          "type": "string"
        },
        "attention": {
          "description": "Attention of the address",
          "type": "string"
        },
        "careOf": {
          "description": "The name, expressed as text, of a person or organization at this address to whom incoming mail is marked with words such as care of or C/O",
          "type": "string"
        },
        "postalCode": {
          "description": "A code specifying the postal code of the address",
          "type": "string"
        },
        "uncertaintyIndicator": {
          "description": "To indicate if the address is uncertain or not",
          "type": "boolean"
        },
        "geographicCoordinate": {
          "description": "The latitude and longitude of the geographic location that corresponds to the address.",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersGeographicCoordinate"
        },
        "urbanization": {
          "description": "Urbanization name or code",
          "type": "string"
        }
      }
    },
    "BatchOrdersBillingAddress_1": {
      "type": "object",
      "properties": {
        "addressId": {
          "description": "Identifier of address.",
          "type": "string"
        },
        "purposes": {
          "description": "The purpose or usage context for which the address should be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addressLine1": {
          "description": "The first line of the address, required.",
          "type": "string"
        },
        "addressLine2": {
          "description": "The second line of the address, optional.",
          "type": "string"
        },
        "addressLine3": {
          "description": "The third line of the address, optional.",
          "type": "string"
        },
        "cityName": {
          "description": "The name of the city in the mailing address. For military or diplomatic addresses should contain FPO, APO, or DPO.",
          "type": "string"
        },
        "stateCode": {
          "description": "The two letter state code.",
          "type": "string"
        },
        "zip": {
          "description": "The 5 digit zip or postal delivery code.",
          "type": "string"
        },
        "zipExt": {
          "description": "The zip or postal delivery extension.",
          "type": "string"
        },
        "countryCode": {
          "description": "Country code",
          "type": "string"
        },
        "geoCode": {
          "description": "A unique code that represents a geospatial coordinate measurement of an exact geographic location and time at, below, or above the surface of the earth",
          "type": "string"
        },
        "addressFormatType": {
          "type": "string"
        },
        "default": {
          "description": "Flags the address to be used for default communications.",
          "type": "string"
        },
        "validationStatus": {
          "description": "Specifies whether the address is VALIDATED, NONVALIDATED, or UNDELIVERABLE.",
          "type": "string"
        },
        "overwritten": {
          "description": "Flags whether the provided address has been overwritten by the system.",
          "type": "boolean"
        }
      }
    },
    "BatchOrdersBlacklist": {
      "type": "object",
      "properties": {
        "statusCode": {
          "description": "Status code",
          "type": "string"
        },
        "subStatusCode": {
          "description": "Sub Status Code",
          "type": "string"
        },
        "reasonCode": {
          "description": "Status reason code",
          "type": "string"
        },
        "reasonDescription": {
          "description": "Status reason description",
          "type": "string"
        }
      }
    },
    "BatchOrdersBlacklist_1": {
      "type": "object",
      "properties": {
        "statusCode": {
          "description": "Status code",
          "type": "string"
        },
        "subStatusCode": {
          "description": "Sub Status Code",
          "type": "string"
        },
        "reasonCode": {
          "description": "Status reason code",
          "type": "string"
        },
        "reasonDescription": {
          "description": "Status reason description",
          "type": "string"
        }
      }
    },
    "BatchOrdersBlacklist_2": {
      "type": "object",
      "properties": {
        "statusCode": {
          "description": "Status code",
          "type": "string"
        },
        "subStatusCode": {
          "description": "Sub Status Code",
          "type": "string"
        },
        "reasonCode": {
          "description": "Status reason code",
          "type": "string"
        },
        "reasonDescription": {
          "description": "Status reason description",
          "type": "string"
        }
      }
    },
    "BatchOrdersBlacklist_3": {
      "type": "object",
      "properties": {
        "statusCode": {
          "description": "Status code",
          "type": "string"
        },
        "subStatusCode": {
          "description": "Sub Status Code",
          "type": "string"
        },
        "reasonCode": {
          "description": "Status reason code",
          "type": "string"
        },
        "reasonDescription": {
          "description": "Status reason description",
          "type": "string"
        }
      }
    },
    "BatchOrdersCardHolderAddress": {
      "type": "object",
      "properties": {
        "addressId": {
          "description": "Identifier of address.",
          "type": "string"
        },
        "purposes": {
          "description": "The purpose or usage context for which the address should be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addressLine1": {
          "description": "The first line of the address, required.",
          "type": "string"
        },
        "addressLine2": {
          "description": "The second line of the address, optional.",
          "type": "string"
        },
        "addressLine3": {
          "description": "The third line of the address, optional.",
          "type": "string"
        },
        "cityName": {
          "description": "The name of the city in the mailing address. For military or diplomatic addresses should contain FPO, APO, or DPO.",
          "type": "string"
        },
        "stateCode": {
          "description": "The two letter state code.",
          "type": "string"
        },
        "zip": {
          "description": "The 5 digit zip or postal delivery code.",
          "type": "string"
        },
        "zipExt": {
          "description": "The zip or postal delivery extension.",
          "type": "string"
        },
        "countryCode": {
          "description": "Country code",
          "type": "string"
        },
        "geoCode": {
          "description": "A unique code that represents a geospatial coordinate measurement of an exact geographic location and time at, below, or above the surface of the earth",
          "type": "string"
        },
        "addressFormatType": {
          "type": "string"
        },
        "default": {
          "description": "Flags the address to be used for default communications.",
          "type": "string"
        },
        "validationStatus": {
          "description": "Specifies whether the address is VALIDATED, NONVALIDATED, or UNDELIVERABLE.",
          "type": "string"
        },
        "overwritten": {
          "description": "Flags whether the provided address has been overwritten by the system.",
          "type": "boolean"
        }
      }
    },
    "BatchOrdersCardHolderAddress_1": {
      "type": "object",
      "properties": {
        "addressId": {
          "description": "Identifier of address.",
          "type": "string"
        },
        "purposes": {
          "description": "The purpose or usage context for which the address should be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addressLine1": {
          "description": "The first line of the address, required.",
          "type": "string"
        },
        "addressLine2": {
          "description": "The second line of the address, optional.",
          "type": "string"
        },
        "addressLine3": {
          "description": "The third line of the address, optional.",
          "type": "string"
        },
        "cityName": {
          "description": "The name of the city in the mailing address. For military or diplomatic addresses should contain FPO, APO, or DPO.",
          "type": "string"
        },
        "stateCode": {
          "description": "The two letter state code.",
          "type": "string"
        },
        "zip": {
          "description": "The 5 digit zip or postal delivery code.",
          "type": "string"
        },
        "zipExt": {
          "description": "The zip or postal delivery extension.",
          "type": "string"
        },
        "countryCode": {
          "description": "Country code",
          "type": "string"
        },
        "geoCode": {
          "description": "A unique code that represents a geospatial coordinate measurement of an exact geographic location and time at, below, or above the surface of the earth",
          "type": "string"
        },
        "addressFormatType": {
          "type": "string"
        },
        "default": {
          "description": "Flags the address to be used for default communications.",
          "type": "string"
        },
        "validationStatus": {
          "description": "Specifies whether the address is VALIDATED, NONVALIDATED, or UNDELIVERABLE.",
          "type": "string"
        },
        "overwritten": {
          "description": "Flags whether the provided address has been overwritten by the system.",
          "type": "boolean"
        }
      }
    },
    "BatchOrdersCardHolderAddress_2": {
      "type": "object",
      "properties": {
        "addressId": {
          "description": "Identifier of address.",
          "type": "string"
        },
        "purposes": {
          "description": "The purpose or usage context for which the address should be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addressLine1": {
          "description": "The first line of the address, required.",
          "type": "string"
        },
        "addressLine2": {
          "description": "The second line of the address, optional.",
          "type": "string"
        },
        "addressLine3": {
          "description": "The third line of the address, optional.",
          "type": "string"
        },
        "cityName": {
          "description": "The name of the city in the mailing address. For military or diplomatic addresses should contain FPO, APO, or DPO.",
          "type": "string"
        },
        "stateCode": {
          "description": "The two letter state code.",
          "type": "string"
        },
        "zip": {
          "description": "The 5 digit zip or postal delivery code.",
          "type": "string"
        },
        "zipExt": {
          "description": "The zip or postal delivery extension.",
          "type": "string"
        },
        "countryCode": {
          "description": "Country code",
          "type": "string"
        },
        "geoCode": {
          "description": "A unique code that represents a geospatial coordinate measurement of an exact geographic location and time at, below, or above the surface of the earth",
          "type": "string"
        },
        "addressFormatType": {
          "type": "string"
        },
        "default": {
          "description": "Flags the address to be used for default communications.",
          "type": "string"
        },
        "validationStatus": {
          "description": "Specifies whether the address is VALIDATED, NONVALIDATED, or UNDELIVERABLE.",
          "type": "string"
        },
        "overwritten": {
          "description": "Flags whether the provided address has been overwritten by the system.",
          "type": "boolean"
        }
      }
    },
    "BatchOrdersCardHolderAddress_3": {
      "type": "object",
      "properties": {
        "addressId": {
          "description": "Identifier of address.",
          "type": "string"
        },
        "purposes": {
          "description": "The purpose or usage context for which the address should be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addressLine1": {
          "description": "The first line of the address, required.",
          "type": "string"
        },
        "addressLine2": {
          "description": "The second line of the address, optional.",
          "type": "string"
        },
        "addressLine3": {
          "description": "The third line of the address, optional.",
          "type": "string"
        },
        "cityName": {
          "description": "The name of the city in the mailing address. For military or diplomatic addresses should contain FPO, APO, or DPO.",
          "type": "string"
        },
        "stateCode": {
          "description": "The two letter state code.",
          "type": "string"
        },
        "zip": {
          "description": "The 5 digit zip or postal delivery code.",
          "type": "string"
        },
        "zipExt": {
          "description": "The zip or postal delivery extension.",
          "type": "string"
        },
        "countryCode": {
          "description": "Country code",
          "type": "string"
        },
        "geoCode": {
          "description": "A unique code that represents a geospatial coordinate measurement of an exact geographic location and time at, below, or above the surface of the earth",
          "type": "string"
        },
        "addressFormatType": {
          "type": "string"
        },
        "default": {
          "description": "Flags the address to be used for default communications.",
          "type": "string"
        },
        "validationStatus": {
          "description": "Specifies whether the address is VALIDATED, NONVALIDATED, or UNDELIVERABLE.",
          "type": "string"
        },
        "overwritten": {
          "description": "Flags whether the provided address has been overwritten by the system.",
          "type": "boolean"
        }
      }
    },
    "BatchOrdersCardImage": {
      "type": "object",
      "properties": {
        "attachmentReferenceId": {
          "description": "Uniquely identifies the attachment record in the context of the cart or other parent object.",
          "type": "string"
        },
        "mimeType": {
          "description": "Mime type of the encoded document.  Mime type construction will conform to RFC 2045, and will use accepted mime types per the IANA mime type  listings.  Specific supported document types at the time of this writing are: application/pdf, image/png, text/plain, text/x-url, text/html, text/xml, image/jpeg.",
          "type": "string"
        },
        "description": {
          "description": "Description of the attachment",
          "type": "string"
        },
        "embeddedData": {
          "description": "Element holding data embedded directly in the BOD instance.",
          "type": "string"
        }
      }
    },
    "BatchOrdersCardImage_1": {
      "type": "object",
      "properties": {
        "attachmentReferenceId": {
          "description": "Uniquely identifies the attachment record in the context of the cart or other parent object.",
          "type": "string"
        },
        "mimeType": {
          "description": "Mime type of the encoded document.  Mime type construction will conform to RFC 2045, and will use accepted mime types per the IANA mime type  listings.  Specific supported document types at the time of this writing are: application/pdf, image/png, text/plain, text/x-url, text/html, text/xml, image/jpeg.",
          "type": "string"
        },
        "description": {
          "description": "Description of the attachment",
          "type": "string"
        },
        "embeddedData": {
          "description": "Element holding data embedded directly in the BOD instance.",
          "type": "string"
        }
      }
    },
    "BatchOrdersCardImage_2": {
      "type": "object",
      "properties": {
        "attachmentReferenceId": {
          "description": "Uniquely identifies the attachment record in the context of the cart or other parent object.",
          "type": "string"
        },
        "mimeType": {
          "description": "Mime type of the encoded document.  Mime type construction will conform to RFC 2045, and will use accepted mime types per the IANA mime type  listings.  Specific supported document types at the time of this writing are: application/pdf, image/png, text/plain, text/x-url, text/html, text/xml, image/jpeg.",
          "type": "string"
        },
        "description": {
          "description": "Description of the attachment",
          "type": "string"
        },
        "embeddedData": {
          "description": "Element holding data embedded directly in the BOD instance.",
          "type": "string"
        }
      }
    },
    "BatchOrdersCardImage_3": {
      "type": "object",
      "properties": {
        "attachmentReferenceId": {
          "description": "Uniquely identifies the attachment record in the context of the cart or other parent object.",
          "type": "string"
        },
        "mimeType": {
          "description": "Mime type of the encoded document.  Mime type construction will conform to RFC 2045, and will use accepted mime types per the IANA mime type  listings.  Specific supported document types at the time of this writing are: application/pdf, image/png, text/plain, text/x-url, text/html, text/xml, image/jpeg.",
          "type": "string"
        },
        "description": {
          "description": "Description of the attachment",
          "type": "string"
        },
        "embeddedData": {
          "description": "Element holding data embedded directly in the BOD instance.",
          "type": "string"
        }
      }
    },
    "BatchOrdersCompatibleOffers": {
      "type": "object",
      "properties": {
        "relationshipType": {
          "description": "The type of relationship between the two offers.",
          "type": "string"
        },
        "link": {
          "description": "A link to the offer that is related to this one.",
          "type": "string"
        },
        "relatedOfferId": {
          "description": "The id of the offer that is related to this one.",
          "type": "string"
        },
        "relatedOfferName": {
          "description": "The name of the offer that is related to this one.",
          "type": "string"
        },
        "displayPriority": {
          "description": "Display priority or sequence",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "BatchOrdersConflictingPromotions": {
      "type": "object",
      "properties": {
        "promotionId": {
          "description": "The unique id of the promotion.",
          "type": "string"
        },
        "shortDescription": {
          "description": "Short description",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "promotionEffectivePeriod": {
          "description": "The time period where the Promotion is effective.",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersPromotionEffectivePeriod_2"
        }
      }
    },
    "BatchOrdersConflictOffers": {
      "type": "object",
      "properties": {
        "relationshipType": {
          "description": "The type of relationship between the two offers.",
          "type": "string"
        },
        "link": {
          "description": "A link to the offer that is related to this one.",
          "type": "string"
        },
        "relatedOfferId": {
          "description": "The id of the offer that is related to this one.",
          "type": "string"
        },
        "relatedOfferName": {
          "description": "The name of the offer that is related to this one.",
          "type": "string"
        },
        "displayPriority": {
          "description": "Display priority or sequence",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "BatchOrdersCreditCard": {
      "type": "object",
      "properties": {
        "last4CardNumber": {
          "description": "Last four digits of the card used for payment",
          "type": "string"
        },
        "cardNumber": {
          "description": "Payment card number",
          "type": "string"
        },
        "typeCode": {
          "description": "Type of payment Card. Examples are Visa, MasterCard, Debit etc",
          "type": "string"
        },
        "cardHolderName": {
          "description": "Name of the Card Holder",
          "type": "string"
        },
        "cardHolderFirstName": {
          "description": "First name of the card holder",
          "type": "string"
        },
        "cardHolderLastName": {
          "description": "Last name of the card holder",
          "type": "string"
        },
        "companyName": {
          "description": "Business Name identified for the card if applicable",
          "type": "string"
        },
        "expirationMonthYear": {
          "description": "Expiration month and year of the card",
          "type": "string"
        },
        "cardHolderAddress": {
          "type": "object",
          "$ref": "#/definitions/BatchOrdersCardHolderAddress_1"
        },
        "cardImage": {
          "description": "Image of the card",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersCardImage_1"
        },
        "cvv": {
          "description": "Card Verification Value",
          "type": "string"
        },
        "maskingType": {
          "description": "The type of masking to be applied to the credit card number for security and privacy.",
          "type": "string"
        },
        "paymentCardAlias": {
          "description": "A nickname assigned by the customer as an alternative way to identify a stored payment card.",
          "type": "string"
        },
        "expirationTime": {
          "description": "The time when the card is expired to use.",
          "type": "string",
          "format": "date-time"
        },
        "securityCode": {
          "description": "Security code of the credit card",
          "type": "string"
        }
      }
    },
    "BatchOrdersCustomerProfile": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "$ref": "#/definitions/BatchOrdersMetadata_9"
        },
        "customerId": {
          "description": "Uniquely identifies a customer.",
          "type": "string"
        },
        "preferredLanguage": {
          "description": "Customers preferred language",
          "type": "string"
        },
        "shoppingProfileId": {
          "description": "Uniquely identifies a shopping profile.",
          "type": "string"
        },
        "securityProfileId": {
          "description": "Unique identifier of the security profile.",
          "type": "string"
        },
        "primaryPhoneNumber": {
          "description": "Primary mobile phone number used by the customer and used to identify the customer.",
          "type": "string"
        },
        "primaryEmailAddress": {
          "type": "string"
        },
        "fullName": {
          "description": "The full name of the person, including first, middle, and family names.",
          "type": "string"
        },
        "firstName": {
          "description": "The given name or first name of the person",
          "type": "string"
        },
        "middleName": {
          "description": "The middle name or middle initial of the person.",
          "type": "string"
        },
        "familyName": {
          "description": "The family name or surname or last name of the person.",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        },
        "suffix": {
          "type": "string"
        },
        "ssn": {
          "description": "Social Security Number of the person. When used in a request, it must only be sent by secure transport.",
          "type": "string"
        },
        "ssnMasking": {
          "description": "Specifies what portion of the SSN has been provided.",
          "type": "string"
        },
        "birthDate": {
          "description": "Date of birth of the person.",
          "type": "string",
          "format": "date"
        },
        "pin": {
          "description": "Personal Identification Number",
          "type": "string"
        },
        "password": {
          "description": "Password for logging into a software system.",
          "type": "string"
        },
        "taxId": {
          "description": "Tax identification or FEIN (Federal Employer Identification Number).",
          "type": "string"
        },
        "optOut": {
          "description": "Indicates the privacy option for this communication channel. If opted out, this communication cannot be used for telemarketing calls, mails, emails...etc.",
          "type": "string"
        },
        "optOutReason": {
          "type": "string"
        },
        "optOutType": {
          "description": "Indicates the type of marketing activity that the customer has opted in/out from. If no value is provided, it is assumed that the customer has opted in/out from all activity through this communication channel.",
          "type": "string"
        },
        "addressCommunications": {
          "description": "Addresses for residence or business, to be used for deliveries or postal mail.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersAddressCommunications"
          }
        },
        "phoneNumbers": {
          "description": "Phone numbers for voice, fax or text communication with the person.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersPhoneNumbers"
          }
        },
        "emailCommunications": {
          "description": "Email addresses of the person.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersEmailCommunications"
          }
        },
        "e911AcknowledgementIndicator": {
          "description": "To indicate if customer accepts the E911 service consent.",
          "type": "boolean"
        },
        "customerGroup": {
          "description": "The following customer groups are being considered for customer segmentation: Consumer, Business, Special/Other, Government.",
          "type": "string"
        },
        "corporateAffiliationProgram": {
          "description": "Name of the corporate affiliation program",
          "type": "string"
        },
        "corporateDiscountProgram": {
          "description": "Name of corporate discount program",
          "type": "string"
        },
        "businessGovernmentAgreement": {
          "description": "Name of business government agreement",
          "type": "string"
        },
        "specialTreatment": {
          "description": "Special treatment",
          "type": "string"
        },
        "negotiatedPaymentTerm": {
          "description": "Negotiated payment term",
          "type": "string"
        },
        "isStrategic": {
          "description": "To indicate if the customer is a strategic target",
          "type": "boolean"
        },
        "isTest": {
          "type": "boolean"
        },
        "idVerification": {
          "description": "Identification verification",
          "type": "string"
        },
        "sizeOfCompany": {
          "description": "Size of the company",
          "type": "string"
        },
        "industryType": {
          "description": "Industry type of the customer",
          "type": "string"
        },
        "assistanceProgram": {
          "description": "Name of the assistance program",
          "type": "string"
        },
        "employeeDealerProgram": {
          "description": "Name of employee dealer program",
          "type": "string"
        },
        "reseller": {
          "description": "Reseller of the customer",
          "type": "string"
        },
        "uniqueProgram": {
          "description": "Name of the unique program",
          "type": "string"
        },
        "contractType": {
          "description": "Contract type",
          "type": "string"
        },
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersAccounts_1"
          }
        },
        "creditLimitAmount": {
          "description": "The total amount that the customer is allowed to spend on purchases.",
          "type": "number",
          "format": "double"
        },
        "creditScore": {
          "description": "Indicates the credit score of the customer. Primary credit score used in credit decision for population in regulatory notices.",
          "type": "integer",
          "format": "int32"
        },
        "creditStatus": {
          "description": "Status of the customers credit application",
          "type": "string"
        },
        "creditApplicationReference": {
          "description": "Reference number for cross reference to credit decisioning system.",
          "type": "string"
        },
        "creditCheckConsentIndicator": {
          "description": "Indicates that the Customer actively consented to having a credit check performed.",
          "type": "string"
        },
        "classificationCode": {
          "description": "Credit class.",
          "type": "string"
        },
        "creditRiskProfileId": {
          "description": "Unique identifier generated from risk system which is derived from multple business inputs -creditscore, tenure and payment history etc.",
          "type": "string"
        },
        "decisionCriteria": {
          "description": "Decision criteria on determining customers credit",
          "type": "string"
        },
        "identificationDocuments": {
          "description": "List of identification document",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersIdentificationDocuments"
          }
        }
      }
    },
    "BatchOrdersCustomerSpecificDetails": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "BatchOrdersCustomerSpecificDetails_1": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "BatchOrdersDebitCard": {
      "type": "object",
      "properties": {
        "last4CardNumber": {
          "description": "Last four digits of the card used for payment",
          "type": "string"
        },
        "cardNumber": {
          "description": "Payment card number",
          "type": "string"
        },
        "typeCode": {
          "description": "Type of payment Card. Examples are Visa, MasterCard, Debit etc",
          "type": "string"
        },
        "cardHolderName": {
          "description": "Name of the Card Holder",
          "type": "string"
        },
        "cardHolderFirstName": {
          "description": "First name of the card holder",
          "type": "string"
        },
        "cardHolderLastName": {
          "description": "Last name of the card holder",
          "type": "string"
        },
        "companyName": {
          "description": "Business Name identified for the card if applicable",
          "type": "string"
        },
        "expirationMonthYear": {
          "description": "Expiration month and year of the card",
          "type": "string"
        },
        "cardHolderAddress": {
          "type": "object",
          "$ref": "#/definitions/BatchOrdersCardHolderAddress_2"
        },
        "cardImage": {
          "description": "Image of the card",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersCardImage_2"
        },
        "cvv": {
          "description": "Card Verification Value",
          "type": "string"
        },
        "maskingType": {
          "description": "The type of masking to be applied to the credit card number for security and privacy.",
          "type": "string"
        },
        "paymentCardAlias": {
          "description": "A nickname assigned by the customer as an alternative way to identify a stored payment card.",
          "type": "string"
        },
        "expirationTime": {
          "description": "The time when the card is expired to use.",
          "type": "string",
          "format": "date-time"
        },
        "PIN": {
          "description": "PIN code of the card",
          "type": "string"
        }
      }
    },
    "BatchOrdersDeviceCollection": {
      "type": "object",
      "properties": {
        "devices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Devices"
          }
        }
      }
    },
    "BatchOrdersDiscount": {
      "type": "object",
      "properties": {
        "type": {
          "description": "Type of amount, actual or percentage",
          "type": "string"
        },
        "amount": {
          "description": "Value of amount.",
          "type": "number",
          "format": "double"
        }
      }
    },
    "BatchOrdersDocuments": {
      "type": "object",
      "properties": {
        "attachmentReferenceId": {
          "description": "Uniquely identifies the attachment record in the context of the cart or other parent object.",
          "type": "string"
        },
        "mimeType": {
          "description": "Mime type of the encoded document.  Mime type construction will conform to RFC 2045, and will use accepted mime types per the IANA mime type  listings.  Specific supported document types at the time of this writing are: application/pdf, image/png, text/plain, text/x-url, text/html, text/xml, image/jpeg.",
          "type": "string"
        },
        "description": {
          "description": "Description of the attachment",
          "type": "string"
        },
        "embeddedData": {
          "description": "Element holding data embedded directly in the BOD instance.",
          "type": "string"
        },
        "documentId": {
          "description": "Identifies the document in the document storage system.",
          "type": "string"
        },
        "paymentScheduleId": {
          "description": "Uniquely identifies a Payment Schedule for an Equipment Installment Plan or loan or lease.",
          "type": "string"
        },
        "signatureRequired": {
          "description": "Indicates whether a signature is required for this document.",
          "type": "boolean"
        },
        "printRequired": {
          "description": "Indicates whether the document must be printed.",
          "type": "boolean"
        },
        "documentType": {
          "description": "Type of document",
          "type": "string"
        },
        "documentSubType": {
          "description": "Document sub type",
          "type": "string"
        }
      }
    },
    "BatchOrdersDocumentSet": {
      "type": "object",
      "properties": {
        "cartId": {
          "description": "Uniquely identifies a cart that the documents are associated with.",
          "type": "string"
        },
        "machineId": {
          "type": "string"
        },
        "machineAddress": {
          "type": "string"
        },
        "storeId": {
          "description": "Uniquely identifies a store where the documents are generated.",
          "type": "string"
        },
        "consentTime": {
          "description": "Date and time when consent was received from the customer.",
          "type": "string",
          "format": "date-time"
        },
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersDocuments"
          }
        },
        "saveIndicator": {
          "description": "To indicate if the generated documents need to be stored.",
          "type": "boolean"
        },
        "attachDocumentMethod": {
          "description": "To indicate how the document content will be returned, such as link or embedded data.",
          "type": "string"
        },
        "contentRequired": {
          "description": "To indicate if the content (or URL) of the document is required.",
          "type": "boolean"
        }
      }
    },
    "BatchOrdersEligibleAccessories": {
      "type": "object",
      "properties": {
        "sku": {
          "description": "Stock keeping unit (SKU).  Uniquely identifies the product in the inventory system.",
          "type": "string"
        },
        "productCondition": {
          "description": "Describes the general condition of the variant.  For example new or refurbished.",
          "type": "string"
        },
        "memory": {
          "description": "Memory size of the sku.",
          "type": "string"
        },
        "color": {
          "description": "Official name of the variant color as marketed by the manufacturer.",
          "type": "string"
        },
        "searchableColor": {
          "description": "Common color names of the variant, for searching.",
          "type": "string"
        },
        "msrp": {
          "description": "Manufacturer suggested retail price.   Provided by the device manufacturer.",
          "type": "number",
          "format": "double"
        },
        "name": {
          "description": "Name of the offer variant.",
          "type": "string"
        },
        "preOrderAvailableTime": {
          "description": "The time when the offer variant is available for pre orders.",
          "type": "string",
          "format": "date-time"
        },
        "comingSoonDate": {
          "description": "The date when T-Mobile will begin accepting requests to notify customers of the availability of the offer variant.",
          "type": "string",
          "format": "date"
        },
        "variantOfferStatus": {
          "description": "Status of the variant in the sales catalog.  Example ForSale, Grandfathered, Retired.",
          "type": "string"
        },
        "inventoryStatus": {
          "description": "Status of the variant in inventory.  Example, in stock, backordered.",
          "type": "string"
        },
        "variantDisplayOrder": {
          "description": "The order that the variant is displayed, relative to other variants of the same offer.",
          "type": "integer",
          "format": "int32"
        },
        "saleStartTime": {
          "description": "The time when the offer variant goes on sale.",
          "type": "string",
          "format": "date-time"
        },
        "saleEndTime": {
          "description": "The time when the offer variant is no longer for sale.",
          "type": "string",
          "format": "date-time"
        },
        "offerVariantId": {
          "description": "Uniquely identifies a offer variant in the sales catalog.",
          "type": "string"
        },
        "defaultDownPayment": {
          "description": "Default down payment amount",
          "type": "number",
          "format": "double"
        }
      }
    },
    "BatchOrdersEligibleDevices": {
      "type": "object",
      "properties": {
        "sku": {
          "description": "Stock keeping unit (SKU).  Uniquely identifies the product in the inventory system.",
          "type": "string"
        },
        "productCondition": {
          "description": "Describes the general condition of the variant.  For example new or refurbished.",
          "type": "string"
        },
        "memory": {
          "description": "Memory size of the sku.",
          "type": "string"
        },
        "color": {
          "description": "Official name of the variant color as marketed by the manufacturer.",
          "type": "string"
        },
        "searchableColor": {
          "description": "Common color names of the variant, for searching.",
          "type": "string"
        },
        "msrp": {
          "description": "Manufacturer suggested retail price.   Provided by the device manufacturer.",
          "type": "number",
          "format": "double"
        },
        "name": {
          "description": "Name of the offer variant.",
          "type": "string"
        },
        "preOrderAvailableTime": {
          "description": "The time when the offer variant is available for pre orders.",
          "type": "string",
          "format": "date-time"
        },
        "comingSoonDate": {
          "description": "The date when T-Mobile will begin accepting requests to notify customers of the availability of the offer variant.",
          "type": "string",
          "format": "date"
        },
        "variantOfferStatus": {
          "description": "Status of the variant in the sales catalog.  Example ForSale, Grandfathered, Retired.",
          "type": "string"
        },
        "inventoryStatus": {
          "description": "Status of the variant in inventory.  Example, in stock, backordered.",
          "type": "string"
        },
        "variantDisplayOrder": {
          "description": "The order that the variant is displayed, relative to other variants of the same offer.",
          "type": "integer",
          "format": "int32"
        },
        "saleStartTime": {
          "description": "The time when the offer variant goes on sale.",
          "type": "string",
          "format": "date-time"
        },
        "saleEndTime": {
          "description": "The time when the offer variant is no longer for sale.",
          "type": "string",
          "format": "date-time"
        },
        "offerVariantId": {
          "description": "Uniquely identifies a offer variant in the sales catalog.",
          "type": "string"
        },
        "defaultDownPayment": {
          "description": "Default down payment amount",
          "type": "number",
          "format": "double"
        }
      }
    },
    "BatchOrdersEmailCommunications": {
      "type": "object",
      "properties": {
        "purposes": {
          "description": "The purpose for which this email address should be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "emailAddress": {
          "description": "The email address used for the given purpose.",
          "type": "string"
        },
        "validationStatus": {
          "description": "Specifies the validation status of the email address: VALIDATED, NONVALIDATED, DELIVERED, or UNDELIVERABLE.",
          "type": "string"
        }
      }
    },
    "BatchOrdersEquipmentSpecifications": {
      "type": "object",
      "properties": {
        "groupName": {
          "type": "string"
        },
        "groupRanking": {
          "type": "integer",
          "format": "int32"
        },
        "specifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersSpecifications_3"
          }
        }
      }
    },
    "BatchOrdersEstimatedDelivery": {
      "type": "object",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "BatchOrdersEstimatedDelivery_1": {
      "type": "object",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "BatchOrdersEstimatedDelivery_2": {
      "type": "object",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "BatchOrdersEstimatedShipment": {
      "type": "object",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "BatchOrdersEstimatedShipment_1": {
      "type": "object",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "BatchOrdersEstimatedShipment_2": {
      "type": "object",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "BatchOrdersExpectedDelivery": {
      "type": "object",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "BatchOrdersExpectedDelivery_1": {
      "type": "object",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "BatchOrdersExpectedDelivery_2": {
      "type": "object",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "BatchOrdersFeatureDetails": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "rank": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "description": "The description of the feature.",
          "type": "string"
        }
      }
    },
    "BatchOrdersGeographicCoordinate": {
      "type": "object",
      "properties": {
        "latitude": {
          "description": "Latitude",
          "type": "string"
        },
        "longitude": {
          "description": "Longitude",
          "type": "string"
        }
      }
    },
    "BatchOrdersGeographicCoordinate_1": {
      "type": "object",
      "properties": {
        "latitude": {
          "description": "Latitude",
          "type": "string"
        },
        "longitude": {
          "description": "Longitude",
          "type": "string"
        }
      }
    },
    "BatchOrdersGeographicCoordinate_2": {
      "type": "object",
      "properties": {
        "latitude": {
          "description": "Latitude",
          "type": "string"
        },
        "longitude": {
          "description": "Longitude",
          "type": "string"
        }
      }
    },
    "BatchOrdersGeographicCoordinate_3": {
      "type": "object",
      "properties": {
        "latitude": {
          "description": "Latitude",
          "type": "string"
        },
        "longitude": {
          "description": "Longitude",
          "type": "string"
        }
      }
    },
    "BatchOrdersGeographicCoordinate_4": {
      "type": "object",
      "properties": {
        "latitude": {
          "description": "Latitude",
          "type": "string"
        },
        "longitude": {
          "description": "Longitude",
          "type": "string"
        }
      }
    },
    "BatchOrdersGeographicCoordinate_5": {
      "type": "object",
      "properties": {
        "latitude": {
          "description": "Latitude",
          "type": "string"
        },
        "longitude": {
          "description": "Longitude",
          "type": "string"
        }
      }
    },
    "BatchOrdersIdentificationDocuments": {
      "type": "object",
      "properties": {
        "nationaIdentityDocumentId": {
          "description": "Uniquely identifies the national identity document.",
          "type": "string"
        },
        "issuingCountryCode": {
          "description": "ISO standard code identifying the country that issued the document.",
          "type": "string"
        },
        "typeCode": {
          "description": "Code for the type of the persons national identity document.",
          "type": "string"
        },
        "issueDate": {
          "description": "Date when the national identity document was issued.",
          "type": "string",
          "format": "date"
        },
        "expirationDate": {
          "description": "Date when the national identity document will expire.",
          "type": "string",
          "format": "date"
        },
        "issuingAuthority": {
          "description": "Authority that issued the identification document as stated on the document, i.e. tribal council, county for voter registration, or state for state identification.",
          "type": "string"
        }
      }
    },
    "BatchOrdersImages": {
      "type": "object",
      "properties": {
        "imageId": {
          "description": "Unique identifier for the image PATH.  This name should be changed.",
          "type": "string"
        },
        "uri": {
          "description": "Universal resource identifier pointing to the image.",
          "type": "string"
        },
        "dimensions": {
          "description": "Dimensions of the image.",
          "type": "string"
        },
        "color": {
          "description": "Official name of the color of the equipment displayed in the image.",
          "type": "string"
        },
        "searchableColors": {
          "description": "Common color name for searching.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "displayPurposes": {
          "description": "Purpose for which the image should be used in displays.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "BatchOrdersImages_1": {
      "type": "object",
      "properties": {
        "imageId": {
          "description": "Unique identifier for the image PATH.  This name should be changed.",
          "type": "string"
        },
        "uri": {
          "description": "Universal resource identifier pointing to the image.",
          "type": "string"
        },
        "dimensions": {
          "description": "Dimensions of the image.",
          "type": "string"
        },
        "color": {
          "description": "Official name of the color of the equipment displayed in the image.",
          "type": "string"
        },
        "searchableColors": {
          "description": "Common color name for searching.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "displayPurposes": {
          "description": "Purpose for which the image should be used in displays.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "BatchOrdersIncludedServiceCapacities": {
      "type": "object",
      "properties": {
        "capacityType": {
          "description": "Type of service",
          "type": "string"
        },
        "size": {
          "description": "Quantity of the service.",
          "type": "number",
          "format": "double"
        },
        "measurementUnit": {
          "description": "Unit of measurement of the service.",
          "type": "string"
        },
        "duration": {
          "description": "The amount of time the customer has to use the includedServiceCapacity before it expires.",
          "type": "integer",
          "format": "int32"
        },
        "durationMeasurementUnit": {
          "description": "Unit of measurement of duration service.",
          "type": "string"
        },
        "unlimitedIndicator": {
          "description": "Indicate the capacity is unlimited",
          "type": "boolean"
        }
      }
    },
    "BatchOrdersIneligibleReasons": {
      "type": "object",
      "properties": {
        "reasonCode": {
          "description": "Reason Code",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "helpText": {
          "description": "Additional description",
          "type": "string"
        },
        "language": {
          "description": "language used",
          "type": "string",
          "minLength": 2,
          "maxLength": 2,
          "pattern": "[a-z][a-z]"
        }
      }
    },
    "BatchOrdersIneligibleReasons_1": {
      "type": "object",
      "properties": {
        "reasonCode": {
          "description": "Reason Code",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "helpText": {
          "description": "Additional description",
          "type": "string"
        },
        "language": {
          "description": "language used",
          "type": "string",
          "minLength": 2,
          "maxLength": 2,
          "pattern": "[a-z][a-z]"
        }
      }
    },
    "BatchOrdersIneligibleReasons_2": {
      "type": "object",
      "properties": {
        "reasonCode": {
          "description": "Reason Code",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "helpText": {
          "description": "Additional description",
          "type": "string"
        },
        "language": {
          "description": "language used",
          "type": "string",
          "minLength": 2,
          "maxLength": 2,
          "pattern": "[a-z][a-z]"
        }
      }
    },
    "BatchOrdersKeys": {
      "type": "object",
      "properties": {
        "domainName": {
          "description": "Domain name",
          "type": "string"
        },
        "keyName": {
          "description": "Key name",
          "type": "string"
        },
        "keyValue": {
          "description": "Key value",
          "type": "string"
        }
      }
    },
    "BatchOrdersLines": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "$ref": "#/definitions/BatchOrdersMetadata_5"
        },
        "universalLineId": {
          "description": "ULID - Universal identifier of the LineofService, as defined in Customer Hub.",
          "type": "string"
        },
        "lineId": {
          "description": "Uniquely identifies a  line of service.",
          "type": "string"
        },
        "phoneNumber": {
          "description": "The phone number (MSISDN) associated with the line of service.",
          "type": "string"
        }
      }
    },
    "BatchOrdersLines_1": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "$ref": "#/definitions/BatchOrdersMetadata_6"
        },
        "universalLineId": {
          "description": "ULID - Universal identifier of the LineofService, as defined in Customer Hub.",
          "type": "string"
        },
        "lineId": {
          "description": "Uniquely identifies a  line of service.",
          "type": "string"
        },
        "phoneNumber": {
          "description": "The phone number (MSISDN) associated with the line of service.",
          "type": "string"
        },
        "lineStatus": {
          "description": "Code giving the status of the line of service.",
          "type": "string"
        },
        "lineSubStatus": {
          "description": "Code giving the substatus of the line of service.",
          "type": "string"
        },
        "simNumber": {
          "description": "SIM number",
          "type": "string"
        },
        "nickname": {
          "description": "Alias for the line of service, as supplied by the customer.",
          "type": "string"
        },
        "firstName": {
          "description": "First name of the user of the line of service.",
          "type": "string"
        },
        "familyName": {
          "description": "Family name (last name) of the user of the line of service.",
          "type": "string"
        },
        "lineType": {
          "description": "Type of line of service: shared or individual.",
          "type": "string"
        },
        "activationDate": {
          "description": "Date when the line of service was orignially activated.",
          "type": "string",
          "format": "date"
        },
        "primaryLineIndicator": {
          "description": "Indicates if the line is the primary, secondary or additional line of service (contract).",
          "type": "string"
        },
        "dependentDesignation": {
          "description": "Indicates the line designation for employee accounts. Dependent or non-dependent",
          "type": "string"
        },
        "lineSequence": {
          "description": "Sequence or order of the line in the account.",
          "type": "integer",
          "format": "int32"
        },
        "accountAssociationDate": {
          "description": "Date when the line of service became associated with the current account. If the line has never been moved between accounts, this will have the same value as the activation date.",
          "type": "string",
          "format": "date"
        },
        "spendingLimit": {
          "description": "Dollar limit on charges for this line of service in a given month.",
          "type": "number",
          "format": "double"
        },
        "serviceCollection": {
          "type": "object",
          "$ref": "#/definitions/BatchOrdersServiceCollection"
        },
        "deviceCollection": {
          "type": "object",
          "$ref": "#/definitions/BatchOrdersDeviceCollection"
        },
        "usageCollection": {
          "type": "object",
          "$ref": "#/definitions/BatchOrdersUsageCollection"
        },
        "daysSinceActivated": {
          "description": "Number of days since the line is activated",
          "type": "integer",
          "format": "int32"
        },
        "hasData": {
          "description": "To indicate if the line provides data capability.",
          "type": "boolean"
        },
        "hasTelematics": {
          "description": "To indicate if the line provides telematics capability.",
          "type": "boolean"
        },
        "lineBalance": {
          "description": "Line balance",
          "type": "object",
          "$ref": "#/definitions/LineBalance"
        },
        "primaryPlaceOfUseAddress": {
          "description": "PPU (Primary Place Of Use) Address",
          "type": "object",
          "$ref": "#/definitions/PrimaryPlaceOfUseAddress"
        },
        "promotions": {
          "description": "Promotions fot the line",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersPromotions_3"
          }
        },
        "voiceMailLanguage": {
          "description": "The name of the language for voicemails about the account.  For example English or Spanish.",
          "type": "string"
        },
        "eipIndicator": {
          "description": "To indicate if the line of service has EIP (Equipment Installment Plan).",
          "type": "boolean"
        },
        "daysInCurrentAccount": {
          "description": "Number of days that the line has been associated with the current account. If still associated with the original account, this will have the same value as the daysSinceActivation.",
          "type": "integer",
          "format": "int32"
        },
        "accountNumber": {
          "description": "Financial account number associated with the line of service",
          "type": "string"
        },
        "contact": {
          "type": "object",
          "$ref": "#/definitions/Contact"
        },
        "specificationGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersSpecificationGroups"
          }
        },
        "actionCode": {
          "description": "Action code",
          "type": "string"
        }
      }
    },
    "BatchOrdersLines_2": {
      "type": "object",
      "properties": {
        "universalLineId": {
          "description": "ULID - Universal identifier of the LineofService, as defined in Customer Hub.",
          "type": "string"
        },
        "lineId": {
          "description": "Uniquely identifies a  line of service.",
          "type": "string"
        },
        "phoneNumber": {
          "description": "The phone number (MSISDN) associated with the line of service.",
          "type": "string"
        },
        "oneTimeCharges": {
          "description": "List of one time charge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersOneTimeCharges_5"
          }
        },
        "recurringCharges": {
          "description": "List of recurring charge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersRecurringCharges_5"
          }
        },
        "oneTimeCredits": {
          "description": "One time credits",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersOneTimeCredits_3"
          }
        },
        "totalAmount": {
          "description": "Total amount for the item/line",
          "type": "number",
          "format": "double"
        },
        "taxCollection": {
          "type": "object",
          "$ref": "#/definitions/BatchOrdersTaxCollection_3"
        },
        "totalDue": {
          "description": "Total due",
          "type": "number",
          "format": "double"
        },
        "totalDueDescription": {
          "description": "Description for totalDue",
          "type": "string"
        },
        "totalDueWithoutTax": {
          "description": "totalDue without tax",
          "type": "number",
          "format": "double"
        },
        "totalDueWithoutTaxDescription": {
          "description": "Description for totalDueWithoutTax",
          "type": "string"
        }
      }
    },
    "BatchOrdersLoans": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "$ref": "#/definitions/BatchOrdersMetadata_10"
        },
        "loanId": {
          "description": "Loan identifier",
          "type": "string"
        },
        "oldLoanId": {
          "description": "The loan id of a related loan, such as for a change of responsibility or exercising a JUMP option on an existing loan.  For example in change of responsibilityfor an existing loan, a new loan is created and the existing loan balance moved to the new loan.  The existing loan is then closed.  The new loans oldLoanId is populated with the closed loanId.",
          "type": "string"
        },
        "lockedForMigration": {
          "description": "Indicates that the loan cannot be updated, due to migration.",
          "type": "boolean"
        },
        "account": {
          "description": "The financial account that the financing plan belongs to",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersAccount"
        },
        "currentLoanSystem": {
          "description": "System of record where loan currently resides - EIP/OFSLL",
          "type": "string"
        },
        "commonCustomerId": {
          "description": "Common customer identifier (CCID)",
          "type": "string"
        },
        "balance": {
          "description": "Loan amount that is owed",
          "type": "number",
          "format": "double"
        },
        "lineId": {
          "description": "The line of service that is associated with the loan",
          "type": "string"
        },
        "financingProgramType": {
          "description": "Financing program type, such as loan or lease.  Same as the productSubType in offer.",
          "type": "string"
        },
        "phoneNumber": {
          "description": "Phone number or MSISDN",
          "type": "string"
        },
        "orderItemId": {
          "description": "External system identifier of the order item.  Used to reference an order item in an external order system.",
          "type": "string"
        },
        "fulfillmentType": {
          "description": "Describes whether the equipment was purchased in a retail store or shipped to the customer.",
          "type": "string"
        },
        "transactionType": {
          "description": "Type of transaction,  e.g. Activation, Add A Line, Upgrade etc.",
          "type": "string"
        },
        "returnAuthorizationType": {
          "description": "Return authorization type, such as JUMP, JOD, COR",
          "type": "string"
        },
        "promotions": {
          "description": "Summary of the promotions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersPromotions_4"
          }
        },
        "totalAmountFinanced": {
          "description": "Total amount financed",
          "type": "number",
          "format": "double"
        },
        "totalNumberOfInstallments": {
          "description": "Total number of installment payments",
          "type": "integer",
          "format": "int32"
        },
        "nominalInterestRate": {
          "description": "Nominal interest rate",
          "type": "number",
          "format": "double"
        },
        "annualPercentageRate": {
          "description": "Annual percentage interest rate",
          "type": "number",
          "format": "double"
        },
        "downPaymentAmount": {
          "description": "Amount of down payment",
          "type": "number",
          "format": "double"
        },
        "additionalDownPaymentAmount": {
          "description": "Additional down payment amount paid along with base down payment amount.",
          "type": "number",
          "format": "double"
        },
        "downPaymentDiscountAmount": {
          "description": "An amount of discount that is to be subtracted from the base down payment",
          "type": "number",
          "format": "double"
        },
        "totalDownPaymentAmount": {
          "description": "Down payment plus additional down payments minus discount",
          "type": "number",
          "format": "double"
        },
        "recurringInstallmentAmount": {
          "description": "Recurring installment payment amount",
          "type": "number",
          "format": "double"
        },
        "recurringChargeAmount": {
          "description": "Recurring charge or bill amount after deducting any applicable promotion amount.",
          "type": "number",
          "format": "double"
        },
        "lastInstallmentAmount": {
          "description": "Last installment amount",
          "type": "number",
          "format": "double"
        },
        "lastInstallmentDueDate": {
          "description": "Due date of last installment",
          "type": "string",
          "format": "date"
        },
        "recurringTaxAmount": {
          "description": "Recurring tax amount",
          "type": "number",
          "format": "double"
        },
        "recurringTaxPercent": {
          "description": "Recurring tax percentage rate",
          "type": "number",
          "format": "double"
        },
        "remainingNumberOfInstallments": {
          "description": "Remaining number of installments",
          "type": "integer",
          "format": "int32"
        },
        "residualAmount": {
          "description": "Residual amount, applicable for lease only",
          "type": "number",
          "format": "double"
        },
        "residualPercentage": {
          "description": "Residual percentage, applicable for lease only",
          "type": "number",
          "format": "double"
        },
        "purchasedEquipment": {
          "description": "Purchased equipment",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersPurchasedEquipment"
        },
        "paymentSchedule": {
          "description": "Schedule of payments for the loan/lease.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersPaymentSchedule"
          }
        },
        "returnedEquipment": {
          "description": "Returned equipment",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersReturnedEquipment"
        },
        "effectiveStartDate": {
          "description": "Effective start date",
          "type": "string",
          "format": "date"
        },
        "effectiveEndDate": {
          "description": "Effective end date",
          "type": "string",
          "format": "date"
        },
        "financingProgramDocumentId": {
          "description": "Document identifier for financing program",
          "type": "string"
        },
        "financingModelType": {
          "description": "The type of financing model used for loan origination.  Agency or Webbank.",
          "type": "string"
        },
        "statusCode": {
          "description": "Status code",
          "type": "string"
        },
        "subStatusCode": {
          "description": "Sub Status Code",
          "type": "string"
        },
        "reasonCode": {
          "description": "Status reason code",
          "type": "string"
        },
        "reasonDescription": {
          "description": "Status reason description",
          "type": "string"
        },
        "remorseReturnNumberOfDays": {
          "description": "Remorse return period in days",
          "type": "integer",
          "format": "int32"
        },
        "costCenterProfitCenter": {
          "description": "Cost Center / Profit Center",
          "type": "string"
        },
        "remorseReturnEligibile": {
          "description": "To indicate whether the device on the financing plan is eligible for remorse return.",
          "type": "boolean"
        },
        "originatingMasterDealerCode": {
          "description": "Master Dealer Code for the dealer who originally created the financing program..",
          "type": "string"
        },
        "originatingSalesChannel": {
          "description": "Sales channel that originally created the financing program.",
          "type": "string"
        },
        "submissionStatus": {
          "description": "Status of the loan order such as Submitted,Completed,Error",
          "type": "string"
        },
        "pendingFinancialTransactionStatus": {
          "description": "Status of all pending financial transactions. It can be INPROCESS, COMPLETE, ERROR.",
          "type": "string"
        },
        "workFlowConditions": {
          "description": "Describes workflow steps that have been completed or awaiting completion such as BalanceTransferComplete,shipmentPending.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "agreementNumber": {
          "description": "Unique Identifier for the transaction where customer agrees to the Loan/Lease.",
          "type": "string"
        },
        "clientWorkFlowType": {
          "description": "Used only by TOM/CCO. Indicates which workflow to be followed for the loan.",
          "type": "string"
        },
        "tradeInEligibility": {
          "description": "To indicate if device/accessory on the loan can be used for tradeIn credit.",
          "type": "boolean"
        },
        "recurringPromotionCreditAmount": {
          "description": "Total recurring credit amount applied from promotions.",
          "type": "number",
          "format": "double"
        },
        "acceleratedAmount": {
          "description": "Unbilled amount and any additional charges on the financing program during customer account cancellation. Once customer pays the accelerated amount, financing program can be closed.",
          "type": "number",
          "format": "double"
        },
        "acceleratedDate": {
          "description": "The date when financing program was accelerated in financing system.",
          "type": "string",
          "format": "date"
        },
        "paymentOverdueDays": {
          "description": "Number of days payment is over due on the financing program.",
          "type": "integer",
          "format": "int32"
        },
        "activityType": {
          "description": "Type of the activity, such as EQUIPMENT_UPDATE, MSISDN_UPDATE",
          "type": "string"
        },
        "activityDescription": {
          "description": "Details about the activity.",
          "type": "string"
        },
        "activityTime": {
          "description": "Date and time when the activity occurred",
          "type": "string",
          "format": "date-time"
        },
        "salesChannelId": {
          "description": "Uniquely identifies the Sales Channel.",
          "type": "string"
        },
        "userId": {
          "description": "User identification used in the system",
          "type": "string"
        },
        "orderId": {
          "type": "string"
        },
        "documentSet": {
          "type": "object",
          "$ref": "#/definitions/BatchOrdersDocumentSet"
        },
        "delayPayIndicator": {
          "description": "Indicates if the pay can be delayed, applies to financing plan",
          "type": "boolean"
        },
        "orderLocationState": {
          "description": "State where store is located and where purchase of this loan/lease is carried out - in case of Retail Channel",
          "type": "string"
        },
        "orderLocationCity": {
          "description": "City where store is located and where purchase of this loan/lease is carried out - in case of Retail Channel",
          "type": "string"
        },
        "shipToState": {
          "description": "Ship to state",
          "type": "string"
        },
        "programType": {
          "description": "program type associated with the order, such as JUMP, JUMP2, JOD",
          "type": "string"
        },
        "programStatus": {
          "description": "Status of the program",
          "type": "string"
        },
        "sourceTransactionId": {
          "description": "Unique Transaction Id from frontend applications",
          "type": "string"
        },
        "sourceSubTransactionId": {
          "description": "Internal line Id created by ordering system NOT displayed to frontends for scenarios such as SHIP-TO",
          "type": "string"
        },
        "sourceTransactionTime": {
          "description": "Timestamp of the source transaction.",
          "type": "string",
          "format": "date-time"
        },
        "shippingId": {
          "description": "Uniquely identifies a shipping details record.",
          "type": "string"
        },
        "trackingNumber": {
          "description": "Tracking number provided by the freight carrier.",
          "type": "string"
        },
        "shippingDate": {
          "description": "Date of the shipment.",
          "type": "string",
          "format": "date"
        },
        "trackingUrl": {
          "description": "URL provided by the freight carrier to track the progress of the shipment.",
          "type": "string"
        },
        "freightCarrier": {
          "description": "Name of the freight carrier.",
          "type": "string"
        },
        "description": {
          "description": "Brief description of the shipping option, eg: UPS Ground (5-7 business days)",
          "type": "string"
        },
        "serviceLevelCode": {
          "description": "Shipping carrier priority code such as 2nd day, next day, priority, etc.",
          "type": "string"
        },
        "shippingCharge": {
          "description": "Charge for the shipping option.",
          "type": "number",
          "format": "double"
        },
        "waiverIndicator": {
          "description": "To indicate if shipping charges can be waived by client, or if shaiiping charge is waived in actual order.",
          "type": "boolean"
        },
        "taxExemptionIndicator": {
          "description": "To indicate if tax can be exempted for the shipping charges when overall tax is calculated, or to indicate if shipping tax is exempted in actual order.",
          "type": "boolean"
        },
        "shippingDiscountAmount": {
          "description": "Discount amount for shipping.",
          "type": "number",
          "format": "double"
        },
        "shippingDiscountPercent": {
          "description": "Discount by percentage for shipping",
          "type": "number",
          "format": "double"
        },
        "shipTo": {
          "description": "Shipping to contact information",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersShipTo_2"
        },
        "shipFrom": {
          "description": "Shipping from contact information",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersShipFrom_2"
        },
        "estimatedDelivery": {
          "description": "Estimated delivery date.",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersEstimatedDelivery_2"
        },
        "expectedDelivery": {
          "description": "The date when the customer expect for delivery, updated from the shipper.",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersExpectedDelivery_2"
        },
        "requestedDelivery": {
          "description": "Requested delivery date from customer",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersRequestedDelivery_2"
        },
        "shippingLabelUrl": {
          "description": "URL that directs to the actual shipping lable.",
          "type": "string"
        },
        "estimatedShipment": {
          "description": "Estimated shipment date",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersEstimatedShipment_2"
        }
      }
    },
    "BatchOrdersMarketingFeatures": {
      "type": "object",
      "properties": {
        "featureCategory": {
          "description": "The category of feature.",
          "type": "string"
        },
        "featureCategoryRank": {
          "description": "The order the category of features is displayed, relative to other feature categories.",
          "type": "integer",
          "format": "int32"
        },
        "featureDetails": {
          "description": "List of the feature details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersFeatureDetails"
          }
        }
      }
    },
    "BatchOrdersMetadata": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "self": {
          "type": "string"
        },
        "generated": {
          "type": "string",
          "format": "date-time"
        },
        "lastModified": {
          "type": "string",
          "format": "date-time"
        },
        "etag": {
          "type": "string"
        }
      }
    },
    "BatchOrdersMetadata_1": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "self": {
          "type": "string"
        },
        "generated": {
          "type": "string",
          "format": "date-time"
        },
        "lastModified": {
          "type": "string",
          "format": "date-time"
        },
        "etag": {
          "type": "string"
        }
      }
    },
    "BatchOrdersMetadata_10": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "self": {
          "type": "string"
        },
        "generated": {
          "type": "string",
          "format": "date-time"
        },
        "lastModified": {
          "type": "string",
          "format": "date-time"
        },
        "etag": {
          "type": "string"
        }
      }
    },
    "BatchOrdersMetadata_11": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "self": {
          "type": "string"
        },
        "generated": {
          "type": "string",
          "format": "date-time"
        },
        "lastModified": {
          "type": "string",
          "format": "date-time"
        },
        "etag": {
          "type": "string"
        }
      }
    },
    "BatchOrdersMetadata_12": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "self": {
          "type": "string"
        },
        "generated": {
          "type": "string",
          "format": "date-time"
        },
        "lastModified": {
          "type": "string",
          "format": "date-time"
        },
        "etag": {
          "type": "string"
        }
      }
    },
    "BatchOrdersMetadata_2": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "self": {
          "type": "string"
        },
        "generated": {
          "type": "string",
          "format": "date-time"
        },
        "lastModified": {
          "type": "string",
          "format": "date-time"
        },
        "etag": {
          "type": "string"
        }
      }
    },
    "BatchOrdersMetadata_3": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "self": {
          "type": "string"
        },
        "generated": {
          "type": "string",
          "format": "date-time"
        },
        "lastModified": {
          "type": "string",
          "format": "date-time"
        },
        "etag": {
          "type": "string"
        }
      }
    },
    "BatchOrdersMetadata_4": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "self": {
          "type": "string"
        },
        "generated": {
          "type": "string",
          "format": "date-time"
        },
        "lastModified": {
          "type": "string",
          "format": "date-time"
        },
        "etag": {
          "type": "string"
        }
      }
    },
    "BatchOrdersMetadata_5": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "self": {
          "type": "string"
        },
        "generated": {
          "type": "string",
          "format": "date-time"
        },
        "lastModified": {
          "type": "string",
          "format": "date-time"
        },
        "etag": {
          "type": "string"
        }
      }
    },
    "BatchOrdersMetadata_6": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "self": {
          "type": "string"
        },
        "generated": {
          "type": "string",
          "format": "date-time"
        },
        "lastModified": {
          "type": "string",
          "format": "date-time"
        },
        "etag": {
          "type": "string"
        }
      }
    },
    "BatchOrdersMetadata_7": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "self": {
          "type": "string"
        },
        "generated": {
          "type": "string",
          "format": "date-time"
        },
        "lastModified": {
          "type": "string",
          "format": "date-time"
        },
        "etag": {
          "type": "string"
        }
      }
    },
    "BatchOrdersMetadata_8": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "self": {
          "type": "string"
        },
        "generated": {
          "type": "string",
          "format": "date-time"
        },
        "lastModified": {
          "type": "string",
          "format": "date-time"
        },
        "etag": {
          "type": "string"
        }
      }
    },
    "BatchOrdersMetadata_9": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "self": {
          "type": "string"
        },
        "generated": {
          "type": "string",
          "format": "date-time"
        },
        "lastModified": {
          "type": "string",
          "format": "date-time"
        },
        "etag": {
          "type": "string"
        }
      }
    },
    "BatchOrdersNotes": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Uniquely identifies a note.",
          "type": "string"
        },
        "entryTime": {
          "description": "Date and time when the note was entered.",
          "type": "string",
          "format": "date-time"
        },
        "expirationTime": {
          "description": "Date and time when the note expires, and should no longer be used.",
          "type": "string",
          "format": "date-time"
        },
        "type": {
          "description": "Type of the note.",
          "type": "string"
        },
        "content": {
          "description": "Text content of the note.",
          "type": "string"
        },
        "author": {
          "description": "Identifies the author of the note.",
          "type": "string"
        },
        "updatedBy": {
          "description": "Identifies the user who updated the note.",
          "type": "string"
        },
        "updateTime": {
          "description": "Date and time when the note was updated.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "BatchOrdersNotes_1": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Uniquely identifies a note.",
          "type": "string"
        },
        "entryTime": {
          "description": "Date and time when the note was entered.",
          "type": "string",
          "format": "date-time"
        },
        "expirationTime": {
          "description": "Date and time when the note expires, and should no longer be used.",
          "type": "string",
          "format": "date-time"
        },
        "type": {
          "description": "Type of the note.",
          "type": "string"
        },
        "content": {
          "description": "Text content of the note.",
          "type": "string"
        },
        "author": {
          "description": "Identifies the author of the note.",
          "type": "string"
        },
        "updatedBy": {
          "description": "Identifies the user who updated the note.",
          "type": "string"
        },
        "updateTime": {
          "description": "Date and time when the note was updated.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "BatchOrdersOffer": {
      "type": "object",
      "properties": {
        "offerId": {
          "description": "Uniquely identifies a product offering in the sales catalog.",
          "type": "string"
        },
        "offerType": {
          "description": "Primary categorization of Product Offering.",
          "type": "string"
        },
        "offerSubType": {
          "description": "Secondary categorization of Product Offering.",
          "type": "string"
        },
        "productType": {
          "description": "The category of product included in the offer: Plan, Service, Device, Accessory, or Financial.",
          "type": "string"
        },
        "productSubTypes": {
          "description": "Secondary categorizations of the type of product included in the offer.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "offeringStatus": {
          "description": "Status of the product offering in the sales catalog.",
          "type": "string"
        },
        "offeringStatusPeriod": {
          "description": "The time period where the offeringStatus is valid.",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersOfferingStatusPeriod"
        },
        "businessUnit": {
          "description": "The different T-Mobile business units require complete separation of assets. Separate companies that comprise TMUS corporation.  The system restricts a Customer to one Business Unit.  In other words, a Customer in one Business Unit is not visible in any of the other  Business Units of the corporation. For example, a Metro PCS customers billing address cannot be looked up by a Magenta representative.  There is no capability to override this in the system.",
          "type": "string"
        },
        "billingMethod": {
          "description": "The Billing Method specifies the billing experience that the customer has qualified for and requested. A change of the billing method implies the need to create a new billing arrangement.",
          "type": "string"
        },
        "brand": {
          "description": "The business name under which a TMUS product is sold.  A Customer can have accounts in any Brand, within the same Business Unit. For example, a T-Mobile customer may also have a branded account with a national retailer.",
          "type": "string"
        },
        "unitPrice": {
          "description": "Full list price per unit as set by T-Mobile",
          "type": "number",
          "format": "double"
        },
        "offerCategory": {
          "description": "Top-level display categorization for product offers.",
          "type": "string"
        },
        "offerSubCategory1": {
          "description": "Second-level display categorization for product offers.",
          "type": "string"
        },
        "offerSubCategory2": {
          "description": "Third-level display categorization for product offers.",
          "type": "string"
        },
        "offerName": {
          "description": "The commonly used name of the Offer, as defined in the Product Catalog.",
          "type": "string"
        },
        "offerDescription": {
          "description": "The description of the offer, as defined in the product catalog.",
          "type": "string"
        },
        "offerShortDescription": {
          "description": "The brief description of the offer, as defined in the product catalog.",
          "type": "string"
        },
        "offerLongDescription": {
          "description": "The verbose description of the offer, as defined in the product catalog.",
          "type": "string"
        },
        "displayOrder": {
          "description": "The sequence in which the offer is displayed.",
          "type": "integer",
          "format": "int32"
        },
        "billingTypes": {
          "description": "The type of billing account this offer is available to.  Could be prepaid and/or postpaid.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "legalDisclosure": {
          "description": "Disclaimers or any other textual information that must be displayed to customers for legal reasons.",
          "type": "string"
        },
        "specifications": {
          "description": "Named value pairs",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersSpecifications"
          }
        },
        "prices": {
          "description": "Prices that are applicable to the offer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersPrices"
          }
        },
        "keywords": {
          "description": "Words used in searches for the offer.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "promotions": {
          "description": "Reference to the promotions that are available with the offer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersPromotions_1"
          }
        },
        "conflictOffers": {
          "description": "Conflicting offers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersConflictOffers"
          }
        },
        "compatibleOffers": {
          "description": "Compatible offers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersCompatibleOffers"
          }
        },
        "requiredOffers": {
          "description": "Required offers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersRequiredOffers"
          }
        },
        "backDateAllowedIndicator": {
          "description": "Indicates whether the service can be back dated when added.",
          "type": "boolean"
        },
        "futureDateAllowedIndicator": {
          "description": "Indicates whether the service can be future dated when added.",
          "type": "boolean"
        },
        "backDateVisibleIndicator": {
          "description": "Indicates whether the services back date should be visible.",
          "type": "boolean"
        },
        "futureDateVisibleIndicator": {
          "description": "Indicates whether the services future date should be visible.",
          "type": "boolean"
        },
        "billEffectiveCode": {
          "description": "To indicate when the bill will be effective",
          "type": "string"
        },
        "billableThirdPartyServiceIndicator": {
          "description": "To indicate if T-Mobile bills the customer for third-party service.",
          "type": "boolean"
        },
        "prorateAllowedIndicator": {
          "description": "To indicate if prorate is allowed",
          "type": "boolean"
        },
        "prorateVisibleIndicator": {
          "description": "To indicate if prorate is visible",
          "type": "boolean"
        },
        "maximumOrderDelay": {
          "description": "Maximum allowed future dating for a particular offer.",
          "type": "string"
        },
        "requireAutoRenew": {
          "description": "To indicate if auto renew is required",
          "type": "boolean"
        },
        "supportAutoRenew": {
          "description": "To indicate if auto renew is available",
          "type": "boolean"
        },
        "deviceValidationRequired": {
          "description": "When true, the Client System is expected to validate the Subscribers Device against the IMEI range defined by the Business, before presenting this Data Pass as eligible for purchase.",
          "type": "boolean"
        },
        "maxOnDemandPasses": {
          "description": "Maximum number of OnDemand data passes that can be purchased with this plan.",
          "type": "integer",
          "format": "int32"
        },
        "upgradeableIndicator": {
          "description": "To indicate if the plan can be upgraded mid bill cycle",
          "type": "boolean"
        },
        "products": {
          "description": "List of product",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersProducts"
          }
        },
        "minimumNumberOfLines": {
          "description": "Minimum number of lines needed for eligibility.",
          "type": "integer",
          "format": "int32"
        },
        "maximumNumberOfLines": {
          "description": "Maximum number of lines allowed to be eligible.",
          "type": "integer",
          "format": "int32"
        },
        "offerLevel": {
          "description": "Level in the customer hierarchy to which the offer should be applied.Model Note:  this is a duplicate of the element already in the ServiceOfferSummaryDelta",
          "type": "string"
        },
        "actionCode": {
          "description": "Action code such as ADD,REMOVE,CANCEL",
          "type": "string"
        }
      }
    },
    "BatchOrdersOfferingStatusPeriod": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "BatchOrdersOfferingStatusPeriod_1": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "BatchOrdersOfferingStatusPeriod_2": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "BatchOrdersOneTimeCharges": {
      "type": "object",
      "properties": {
        "type": {
          "description": "Charge or tax type",
          "type": "string"
        },
        "amount": {
          "description": "Amount charged.",
          "type": "number",
          "format": "double"
        },
        "description": {
          "description": "Description of the charge",
          "type": "string"
        },
        "code": {
          "description": "Charge code",
          "type": "string"
        }
      }
    },
    "BatchOrdersOneTimeCharges_1": {
      "type": "object",
      "properties": {
        "chargeType": {
          "description": "Charge type, such as activationFee, applicationFee, firstMonthCharge,controlChargeFee",
          "type": "string"
        },
        "amount": {
          "description": "The total price to be charged in dollars, inclusive of all discount(s).  amount = basisAmount minus discountAmount minus adjustmentAmount.",
          "type": "number",
          "format": "double"
        },
        "basisAmount": {
          "description": "The price to be charged in dollars, not including any discount(s).",
          "type": "number",
          "format": "double"
        },
        "adjustmentAmount": {
          "description": "Total amount of adjustments, in dollars, that is included in the amount.",
          "type": "number",
          "format": "double"
        },
        "discountAmount": {
          "description": "Total amount of discounts, in dollars, that is included in the amount.",
          "type": "number",
          "format": "double"
        },
        "priceComponents": {
          "description": "The details of charges and deductions that comprise the one time charge.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersPriceComponents"
          }
        },
        "productChargeIncurredType": {
          "description": "Specifies the timing for when the first charge is incurred for the product: immediate, on usage, or on demand.",
          "type": "string"
        },
        "proratedAmount": {
          "description": "This is the cost that the customer would need to pay in order to add this feature to their current account effective immediately. it is prorated from the current date until the end of the current cycle.",
          "type": "number",
          "format": "double"
        },
        "adjustmentReason": {
          "description": "Reason for adjustment.",
          "type": "string"
        },
        "percentageDiscount": {
          "description": "Discount by percentage",
          "type": "number",
          "format": "double"
        }
      }
    },
    "BatchOrdersOneTimeCharges_2": {
      "type": "object",
      "properties": {
        "chargeType": {
          "description": "Charge type, such as activationFee, applicationFee, firstMonthCharge,controlChargeFee",
          "type": "string"
        },
        "amount": {
          "description": "The total price to be charged in dollars, inclusive of all discount(s).  amount = basisAmount minus discountAmount minus adjustmentAmount.",
          "type": "number",
          "format": "double"
        },
        "basisAmount": {
          "description": "The price to be charged in dollars, not including any discount(s).",
          "type": "number",
          "format": "double"
        },
        "adjustmentAmount": {
          "description": "Total amount of adjustments, in dollars, that is included in the amount.",
          "type": "number",
          "format": "double"
        },
        "discountAmount": {
          "description": "Total amount of discounts, in dollars, that is included in the amount.",
          "type": "number",
          "format": "double"
        },
        "priceComponents": {
          "description": "The details of charges and deductions that comprise the one time charge.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersPriceComponents_2"
          }
        },
        "productChargeIncurredType": {
          "description": "Specifies the timing for when the first charge is incurred for the product: immediate, on usage, or on demand.",
          "type": "string"
        },
        "proratedAmount": {
          "description": "This is the cost that the customer would need to pay in order to add this feature to their current account effective immediately. it is prorated from the current date until the end of the current cycle.",
          "type": "number",
          "format": "double"
        },
        "adjustmentReason": {
          "description": "Reason for adjustment.",
          "type": "string"
        },
        "percentageDiscount": {
          "description": "Discount by percentage",
          "type": "number",
          "format": "double"
        }
      }
    },
    "BatchOrdersOneTimeCharges_3": {
      "type": "object",
      "properties": {
        "chargeType": {
          "description": "Charge type, such as activationFee, applicationFee, firstMonthCharge,controlChargeFee",
          "type": "string"
        },
        "amount": {
          "description": "The total price to be charged in dollars, inclusive of all discount(s).  amount = basisAmount minus discountAmount minus adjustmentAmount.",
          "type": "number",
          "format": "double"
        },
        "basisAmount": {
          "description": "The price to be charged in dollars, not including any discount(s).",
          "type": "number",
          "format": "double"
        },
        "adjustmentAmount": {
          "description": "Total amount of adjustments, in dollars, that is included in the amount.",
          "type": "number",
          "format": "double"
        },
        "discountAmount": {
          "description": "Total amount of discounts, in dollars, that is included in the amount.",
          "type": "number",
          "format": "double"
        },
        "priceComponents": {
          "description": "The details of charges and deductions that comprise the one time charge.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersPriceComponents_4"
          }
        },
        "productChargeIncurredType": {
          "description": "Specifies the timing for when the first charge is incurred for the product: immediate, on usage, or on demand.",
          "type": "string"
        },
        "proratedAmount": {
          "description": "This is the cost that the customer would need to pay in order to add this feature to their current account effective immediately. it is prorated from the current date until the end of the current cycle.",
          "type": "number",
          "format": "double"
        },
        "adjustmentReason": {
          "description": "Reason for adjustment.",
          "type": "string"
        },
        "percentageDiscount": {
          "description": "Discount by percentage",
          "type": "number",
          "format": "double"
        }
      }
    },
    "BatchOrdersOneTimeCharges_4": {
      "type": "object",
      "properties": {
        "type": {
          "description": "Charge or tax type",
          "type": "string"
        },
        "amount": {
          "description": "Amount charged.",
          "type": "number",
          "format": "double"
        },
        "description": {
          "description": "Description of the charge",
          "type": "string"
        },
        "code": {
          "description": "Charge code",
          "type": "string"
        }
      }
    },
    "BatchOrdersOneTimeCharges_5": {
      "type": "object",
      "properties": {
        "type": {
          "description": "Charge or tax type",
          "type": "string"
        },
        "amount": {
          "description": "Amount charged.",
          "type": "number",
          "format": "double"
        },
        "description": {
          "description": "Description of the charge",
          "type": "string"
        },
        "code": {
          "description": "Charge code",
          "type": "string"
        }
      }
    },
    "BatchOrdersOneTimeCredits": {
      "type": "object",
      "properties": {
        "creditId": {
          "description": "Identifier of the credit",
          "type": "string"
        },
        "type": {
          "description": "Charge or tax type",
          "type": "string"
        },
        "amount": {
          "description": "Amount charged.",
          "type": "number",
          "format": "double"
        },
        "description": {
          "description": "Description of the charge",
          "type": "string"
        },
        "code": {
          "description": "Charge code",
          "type": "string"
        },
        "adjustmentReason": {
          "description": "Reason for adjustment",
          "type": "string"
        }
      }
    },
    "BatchOrdersOneTimeCredits_1": {
      "type": "object",
      "properties": {
        "creditId": {
          "description": "Identifier of the credit",
          "type": "string"
        },
        "type": {
          "description": "Charge or tax type",
          "type": "string"
        },
        "amount": {
          "description": "Amount charged.",
          "type": "number",
          "format": "double"
        },
        "description": {
          "description": "Description of the charge",
          "type": "string"
        },
        "code": {
          "description": "Charge code",
          "type": "string"
        },
        "adjustmentReason": {
          "description": "Reason for adjustment",
          "type": "string"
        }
      }
    },
    "BatchOrdersOneTimeCredits_2": {
      "type": "object",
      "properties": {
        "creditId": {
          "description": "Identifier of the credit",
          "type": "string"
        },
        "type": {
          "description": "Charge or tax type",
          "type": "string"
        },
        "amount": {
          "description": "Amount charged.",
          "type": "number",
          "format": "double"
        },
        "description": {
          "description": "Description of the charge",
          "type": "string"
        },
        "code": {
          "description": "Charge code",
          "type": "string"
        },
        "adjustmentReason": {
          "description": "Reason for adjustment",
          "type": "string"
        }
      }
    },
    "BatchOrdersOneTimeCredits_3": {
      "type": "object",
      "properties": {
        "creditId": {
          "description": "Identifier of the credit",
          "type": "string"
        },
        "type": {
          "description": "Charge or tax type",
          "type": "string"
        },
        "amount": {
          "description": "Amount charged.",
          "type": "number",
          "format": "double"
        },
        "description": {
          "description": "Description of the charge",
          "type": "string"
        },
        "code": {
          "description": "Charge code",
          "type": "string"
        },
        "adjustmentReason": {
          "description": "Reason for adjustment",
          "type": "string"
        }
      }
    },
    "BatchOrdersOrderLineCollection": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "$ref": "#/definitions/BatchOrdersMetadata_2"
        },
        "pagination": {
          "type": "object",
          "$ref": "#/definitions/BatchOrdersPagination_1"
        },
        "orderLines": {
          "description": "Order lines",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderLines"
          }
        }
      }
    },
    "BatchOrdersPagination": {
      "type": "object",
      "properties": {
        "pageNumber": {
          "description": "Page number",
          "type": "integer",
          "format": "int32"
        },
        "totalRecordCount": {
          "description": "Total number of records",
          "type": "integer",
          "format": "int32"
        },
        "totalPage": {
          "description": "Total number of pages",
          "type": "integer",
          "format": "int32"
        },
        "currentPageItem": {
          "description": "Number of items in this page",
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "description": "Page size",
          "type": "integer",
          "format": "int32"
        },
        "current": {
          "description": "Link to current page",
          "type": "string"
        },
        "next": {
          "description": "Link to next page",
          "type": "string"
        },
        "previous": {
          "description": "Link to previous page",
          "type": "string"
        }
      }
    },
    "BatchOrdersPagination_1": {
      "type": "object",
      "properties": {
        "pageNumber": {
          "description": "Page number",
          "type": "integer",
          "format": "int32"
        },
        "totalRecordCount": {
          "description": "Total number of records",
          "type": "integer",
          "format": "int32"
        },
        "totalPage": {
          "description": "Total number of pages",
          "type": "integer",
          "format": "int32"
        },
        "currentPageItem": {
          "description": "Number of items in this page",
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "description": "Page size",
          "type": "integer",
          "format": "int32"
        },
        "current": {
          "description": "Link to current page",
          "type": "string"
        },
        "next": {
          "description": "Link to next page",
          "type": "string"
        },
        "previous": {
          "description": "Link to previous page",
          "type": "string"
        }
      }
    },
    "BatchOrdersPagination_2": {
      "type": "object",
      "properties": {
        "pageNumber": {
          "description": "Page number",
          "type": "integer",
          "format": "int32"
        },
        "totalRecordCount": {
          "description": "Total number of records",
          "type": "integer",
          "format": "int32"
        },
        "totalPage": {
          "description": "Total number of pages",
          "type": "integer",
          "format": "int32"
        },
        "currentPageItem": {
          "description": "Number of items in this page",
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "description": "Page size",
          "type": "integer",
          "format": "int32"
        },
        "current": {
          "description": "Link to current page",
          "type": "string"
        },
        "next": {
          "description": "Link to next page",
          "type": "string"
        },
        "previous": {
          "description": "Link to previous page",
          "type": "string"
        }
      }
    },
    "BatchOrdersPagination_3": {
      "type": "object",
      "properties": {
        "pageNumber": {
          "description": "Page number",
          "type": "integer",
          "format": "int32"
        },
        "totalRecordCount": {
          "description": "Total number of records",
          "type": "integer",
          "format": "int32"
        },
        "totalPage": {
          "description": "Total number of pages",
          "type": "integer",
          "format": "int32"
        },
        "currentPageItem": {
          "description": "Number of items in this page",
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "description": "Page size",
          "type": "integer",
          "format": "int32"
        },
        "current": {
          "description": "Link to current page",
          "type": "string"
        },
        "next": {
          "description": "Link to next page",
          "type": "string"
        },
        "previous": {
          "description": "Link to previous page",
          "type": "string"
        }
      }
    },
    "BatchOrdersPagination_4": {
      "type": "object",
      "properties": {
        "pageNumber": {
          "description": "Page number",
          "type": "integer",
          "format": "int32"
        },
        "totalRecordCount": {
          "description": "Total number of records",
          "type": "integer",
          "format": "int32"
        },
        "totalPage": {
          "description": "Total number of pages",
          "type": "integer",
          "format": "int32"
        },
        "currentPageItem": {
          "description": "Number of items in this page",
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "description": "Page size",
          "type": "integer",
          "format": "int32"
        },
        "current": {
          "description": "Link to current page",
          "type": "string"
        },
        "next": {
          "description": "Link to next page",
          "type": "string"
        },
        "previous": {
          "description": "Link to previous page",
          "type": "string"
        }
      }
    },
    "BatchOrdersPagination_5": {
      "type": "object",
      "properties": {
        "pageNumber": {
          "description": "Page number",
          "type": "integer",
          "format": "int32"
        },
        "totalRecordCount": {
          "description": "Total number of records",
          "type": "integer",
          "format": "int32"
        },
        "totalPage": {
          "description": "Total number of pages",
          "type": "integer",
          "format": "int32"
        },
        "currentPageItem": {
          "description": "Number of items in this page",
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "description": "Page size",
          "type": "integer",
          "format": "int32"
        },
        "current": {
          "description": "Link to current page",
          "type": "string"
        },
        "next": {
          "description": "Link to next page",
          "type": "string"
        },
        "previous": {
          "description": "Link to previous page",
          "type": "string"
        }
      }
    },
    "BatchOrdersPagination_6": {
      "type": "object",
      "properties": {
        "pageNumber": {
          "description": "Page number",
          "type": "integer",
          "format": "int32"
        },
        "totalRecordCount": {
          "description": "Total number of records",
          "type": "integer",
          "format": "int32"
        },
        "totalPage": {
          "description": "Total number of pages",
          "type": "integer",
          "format": "int32"
        },
        "currentPageItem": {
          "description": "Number of items in this page",
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "description": "Page size",
          "type": "integer",
          "format": "int32"
        },
        "current": {
          "description": "Link to current page",
          "type": "string"
        },
        "next": {
          "description": "Link to next page",
          "type": "string"
        },
        "previous": {
          "description": "Link to previous page",
          "type": "string"
        }
      }
    },
    "BatchOrdersPaymentInstrument": {
      "type": "object",
      "properties": {
        "bankPayment": {
          "description": "Payment from bank, such as check, ETF, draft",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersBankPayment"
        },
        "creditCard": {
          "description": "Credit card",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersCreditCard"
        },
        "debitCard": {
          "description": "Debit card",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersDebitCard"
        },
        "chargeAccountNumberType": {
          "description": "The type of charge account number format.",
          "type": "string"
        }
      }
    },
    "BatchOrdersPayments": {
      "type": "object",
      "properties": {
        "paymentTransactionId": {
          "description": "A value assigned by the merchant to uniquely reference a transaction and any subsequent related transactions",
          "type": "string"
        },
        "chargeAmount": {
          "description": "The total amount of the transaction inclusive of all additional amounts.",
          "type": "number",
          "format": "double"
        },
        "authorizedAmount": {
          "description": "Amount authorized by the financial institution.",
          "type": "number",
          "format": "double"
        },
        "statusCode": {
          "description": "Status code",
          "type": "string"
        },
        "subStatusCode": {
          "description": "Sub Status Code",
          "type": "string"
        },
        "reasonCode": {
          "description": "Status reason code",
          "type": "string"
        },
        "reasonDescription": {
          "description": "Status reason description",
          "type": "string"
        },
        "paymentId": {
          "description": "Identifier of payment",
          "type": "string"
        },
        "sourceId": {
          "description": "To identify where the payment is originated from.",
          "type": "string"
        },
        "authorizationId": {
          "description": "Identifier or code of the transaction authorization.",
          "type": "string"
        },
        "paymentChannelCode": {
          "description": "The channel in which the payment was originally performed.",
          "type": "string"
        },
        "transactionType": {
          "description": "The type of transaction being performed, such as onetimePayment,activation",
          "type": "string"
        },
        "businessTransactionType": {
          "description": "Type of transaction with business process, such as OTP_SPM for onetime payment with stored payment in iHAPS.",
          "type": "string"
        },
        "orderNumber": {
          "description": "The order number this payment is associated with.",
          "type": "string"
        },
        "merchantId": {
          "description": "A unique ID used to identify the Merchant.",
          "type": "string"
        },
        "merchantCategoryCode": {
          "description": "The merchant category code (MCC) is an industry standard four-digit number used to classify a business by the type of goods or services it provides.",
          "type": "string"
        },
        "accountNumberEntryMode": {
          "description": "Indicates how the account number was entered on the transaction at Point of Sale (POS).",
          "type": "string"
        },
        "electronicAuthenticationCapability": {
          "description": "A code indicating the electronic (PIN) authentication capability at the Point of Sale (POS).",
          "type": "string"
        },
        "terminalType": {
          "description": "An identifier used to describe the type of terminal being used for the transaction.",
          "type": "string"
        },
        "terminalId": {
          "description": "Identifier of terminal.",
          "type": "string"
        },
        "terminalEntryCapability": {
          "description": "An identifier used to indicate the entry mode capability of the terminal.",
          "type": "string"
        },
        "settlementIndicator": {
          "description": "This field indicates a type of settlement other than Host Capture.",
          "type": "string"
        },
        "customerPresentIndicator": {
          "description": "To indicate if the customer is presented when the transaction happens.",
          "type": "boolean"
        },
        "phoneNumber": {
          "description": "Customers phone number",
          "type": "string"
        },
        "accountNumber": {
          "description": "The financial account number that identifies the account.",
          "type": "string"
        },
        "customerId": {
          "description": "Uniquely identifies the customer party.",
          "type": "string"
        },
        "taxAmount": {
          "description": "Amount of tax included in the payment transaction.",
          "type": "number",
          "format": "double"
        },
        "creationTime": {
          "description": "Time when the Payment request was created.",
          "type": "string",
          "format": "date-time"
        },
        "termsAgreementIndicator": {
          "description": "To indicate if the customer accept the agreement or not.",
          "type": "boolean"
        },
        "termsAgreementTime": {
          "description": "Time when the customer accepts the terms agreement.",
          "type": "string",
          "format": "date-time"
        },
        "paymentMethodId": {
          "description": "Uniquely identifies a stored payment method.",
          "type": "string"
        },
        "defaultPaymentMethodIndicator": {
          "description": "To indicate if this payment method is default",
          "type": "boolean"
        },
        "paymentMethodCode": {
          "description": "Code identifying the current payment method specified for the payment instrument.",
          "type": "string"
        },
        "storedPaymentMethodId": {
          "description": "Identifer of stored payment method",
          "type": "string"
        },
        "storePaymentMethodIndicator": {
          "description": "To identify if the current payment method needs to be stored in payment gateway.",
          "type": "boolean"
        },
        "enrolledInAutoRenewIndicator": {
          "description": "To indicate if the payment method is enrolled in automated renew payment.",
          "type": "boolean"
        },
        "swipeData": {
          "description": "Data read from card.",
          "type": "object",
          "$ref": "#/definitions/SwipeData"
        },
        "paymentInstrument": {
          "description": "How the payment is made",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersPaymentInstrument"
        },
        "currency": {
          "description": "Currency code",
          "type": "string"
        },
        "paymentCard": {
          "type": "object",
          "$ref": "#/definitions/PaymentCard"
        },
        "voucherRedemption": {
          "description": "Payment is made by redeeming a voucher.",
          "type": "object",
          "$ref": "#/definitions/VoucherRedemption"
        },
        "tillNumber": {
          "description": "Till number on the receipt.",
          "type": "string"
        },
        "cardPresentIndicator": {
          "description": "To indicate if the credit card is presented",
          "type": "boolean"
        },
        "specifications": {
          "description": "Named value pair",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersSpecifications_12"
          }
        },
        "authorizationTime": {
          "description": "The time when the customer authorizes the payment.",
          "type": "string",
          "format": "date-time"
        },
        "processingFeeWaiveIndicator": {
          "description": "To indicate if the payment processing fee can be waived or not by manager or representative.",
          "type": "boolean"
        },
        "previousBalance": {
          "description": "Balance before payment is applied.",
          "type": "number",
          "format": "double"
        },
        "newBalance": {
          "description": "Balance after payment is applied.",
          "type": "number",
          "format": "double"
        }
      }
    },
    "BatchOrdersPaymentSchedule": {
      "type": "object",
      "properties": {
        "paymentDueDate": {
          "description": "Due date of payment in a month",
          "type": "string",
          "format": "date"
        },
        "installmentNumber": {
          "description": "Installment number of the scheduled payment",
          "type": "integer",
          "format": "int32"
        },
        "paymentAmount": {
          "description": "Payment amount",
          "type": "number",
          "format": "double"
        }
      }
    },
    "BatchOrdersPhoneNumbers": {
      "type": "object",
      "properties": {
        "phoneType": {
          "description": "Type of the phone",
          "type": "string"
        },
        "phoneNumber": {
          "description": "Phone number",
          "type": "string"
        },
        "phoneExtension": {
          "description": "Phone extension number",
          "type": "string"
        },
        "purposes": {
          "description": "The purpose for which this phone number should be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "validationStatus": {
          "description": "Specifies the validation status of the phone number: INSERVICE, FORWARDED, DISCONNECTED, or NONVALIDATED.",
          "type": "string"
        },
        "optOut": {
          "description": "Indicates the privacy option for this communication channel. If opted out, this communication cannot be used for telemarketing calls, mails, emails...etc.",
          "type": "string"
        },
        "optOutReason": {
          "type": "string"
        },
        "optOutType": {
          "description": "Indicates the type of marketing activity that the customer has opted in/out from. If no value is provided, it is assumed that the customer has opted in/out from all activity through this communication channel.",
          "type": "string"
        }
      }
    },
    "BatchOrdersPortIn": {
      "type": "object",
      "properties": {
        "portRequestId": {
          "description": "The unique identifier for port request.",
          "type": "string"
        },
        "msisdn": {
          "type": "string"
        },
        "portDueTime": {
          "type": "string",
          "format": "date-time"
        },
        "oldServiceProvider": {
          "description": "The actual carrier that is giving up the number.",
          "type": "string"
        },
        "oldServiceProviderName": {
          "type": "string"
        },
        "oldVirtualServiceProvider": {
          "description": "The organization that was carrying the customers contract for the phone number that is being moved, if it was not the actual service provider.",
          "type": "string"
        },
        "oldVirtualServiceProviderId": {
          "type": "string"
        },
        "oldVirtualServiceProviderName": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "portStatus": {
          "description": "Status of port",
          "type": "string"
        },
        "transitionalMSISDN": {
          "description": "The temporary MSISDN used to give the subscriber service while waiting for the port to complete.",
          "type": "string"
        },
        "contactName": {
          "description": "reference contact name to call in case of port in concerns.",
          "type": "string"
        },
        "contactPhone": {
          "description": "reference number to call in case of port in concerns.",
          "type": "string"
        },
        "oldServiceAccountNumber": {
          "description": "Old service provider account number.",
          "type": "string"
        },
        "eligibilityIndicator": {
          "description": "Flag indicating whether the determination is eligible or ineligible.",
          "type": "boolean"
        },
        "eligibilityStatus": {
          "description": "Code identifying the status of eligibility that was determined.",
          "type": "string"
        },
        "eligibilityType": {
          "description": "The type of eligibility being established.",
          "type": "string"
        },
        "ineligibleReasons": {
          "description": "The reason for ineligibility.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersIneligibleReasons"
          }
        }
      }
    },
    "BatchOrdersPriceComponents": {
      "type": "object",
      "properties": {
        "priceComponentId": {
          "description": "Identifier of price component, or charge sequence number",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "description": "Description of price component",
          "type": "string"
        },
        "productChargeType": {
          "description": "Type of price component",
          "type": "string"
        },
        "amount": {
          "description": "Dollar amount of price to be charged",
          "type": "number",
          "format": "double"
        },
        "basisAmount": {
          "type": "number",
          "format": "double"
        },
        "usageMeasurementUnit": {
          "type": "string"
        },
        "discountAmount": {
          "type": "number",
          "format": "double"
        },
        "frequency": {
          "description": "Categorizes the price component frequency as one time or recurring.",
          "type": "string"
        },
        "promotionId": {
          "type": "string"
        },
        "expirationDate": {
          "description": "Expiration date",
          "type": "string",
          "format": "date"
        }
      }
    },
    "BatchOrdersPriceComponents_1": {
      "type": "object",
      "properties": {
        "priceComponentId": {
          "description": "Identifier of price component, or charge sequence number",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "description": "Description of price component",
          "type": "string"
        },
        "productChargeType": {
          "description": "Type of price component",
          "type": "string"
        },
        "amount": {
          "description": "Dollar amount of price to be charged",
          "type": "number",
          "format": "double"
        },
        "basisAmount": {
          "type": "number",
          "format": "double"
        },
        "usageMeasurementUnit": {
          "type": "string"
        },
        "discountAmount": {
          "type": "number",
          "format": "double"
        },
        "frequency": {
          "description": "Categorizes the price component frequency as one time or recurring.",
          "type": "string"
        },
        "promotionId": {
          "type": "string"
        },
        "expirationDate": {
          "description": "Expiration date",
          "type": "string",
          "format": "date"
        }
      }
    },
    "BatchOrdersPriceComponents_2": {
      "type": "object",
      "properties": {
        "priceComponentId": {
          "description": "Identifier of price component, or charge sequence number",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "description": "Description of price component",
          "type": "string"
        },
        "productChargeType": {
          "description": "Type of price component",
          "type": "string"
        },
        "amount": {
          "description": "Dollar amount of price to be charged",
          "type": "number",
          "format": "double"
        },
        "basisAmount": {
          "type": "number",
          "format": "double"
        },
        "usageMeasurementUnit": {
          "type": "string"
        },
        "discountAmount": {
          "type": "number",
          "format": "double"
        },
        "frequency": {
          "description": "Categorizes the price component frequency as one time or recurring.",
          "type": "string"
        },
        "promotionId": {
          "type": "string"
        },
        "expirationDate": {
          "description": "Expiration date",
          "type": "string",
          "format": "date"
        }
      }
    },
    "BatchOrdersPriceComponents_3": {
      "type": "object",
      "properties": {
        "priceComponentId": {
          "description": "Identifier of price component, or charge sequence number",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "description": "Description of price component",
          "type": "string"
        },
        "productChargeType": {
          "description": "Type of price component",
          "type": "string"
        },
        "amount": {
          "description": "Dollar amount of price to be charged",
          "type": "number",
          "format": "double"
        },
        "basisAmount": {
          "type": "number",
          "format": "double"
        },
        "usageMeasurementUnit": {
          "type": "string"
        },
        "discountAmount": {
          "type": "number",
          "format": "double"
        },
        "frequency": {
          "description": "Categorizes the price component frequency as one time or recurring.",
          "type": "string"
        },
        "promotionId": {
          "type": "string"
        },
        "expirationDate": {
          "description": "Expiration date",
          "type": "string",
          "format": "date"
        }
      }
    },
    "BatchOrdersPriceComponents_4": {
      "type": "object",
      "properties": {
        "priceComponentId": {
          "description": "Identifier of price component, or charge sequence number",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "description": "Description of price component",
          "type": "string"
        },
        "productChargeType": {
          "description": "Type of price component",
          "type": "string"
        },
        "amount": {
          "description": "Dollar amount of price to be charged",
          "type": "number",
          "format": "double"
        },
        "basisAmount": {
          "type": "number",
          "format": "double"
        },
        "usageMeasurementUnit": {
          "type": "string"
        },
        "discountAmount": {
          "type": "number",
          "format": "double"
        },
        "frequency": {
          "description": "Categorizes the price component frequency as one time or recurring.",
          "type": "string"
        },
        "promotionId": {
          "type": "string"
        },
        "expirationDate": {
          "description": "Expiration date",
          "type": "string",
          "format": "date"
        }
      }
    },
    "BatchOrdersPriceComponents_5": {
      "type": "object",
      "properties": {
        "priceComponentId": {
          "description": "Identifier of price component, or charge sequence number",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "description": "Description of price component",
          "type": "string"
        },
        "productChargeType": {
          "description": "Type of price component",
          "type": "string"
        },
        "amount": {
          "description": "Dollar amount of price to be charged",
          "type": "number",
          "format": "double"
        },
        "basisAmount": {
          "type": "number",
          "format": "double"
        },
        "usageMeasurementUnit": {
          "type": "string"
        },
        "discountAmount": {
          "type": "number",
          "format": "double"
        },
        "frequency": {
          "description": "Categorizes the price component frequency as one time or recurring.",
          "type": "string"
        },
        "promotionId": {
          "type": "string"
        },
        "expirationDate": {
          "description": "Expiration date",
          "type": "string",
          "format": "date"
        }
      }
    },
    "BatchOrdersPricePointCriteria": {
      "type": "object",
      "properties": {
        "allowedOrderTypes": {
          "description": "Upgrade, New Activation, etc..",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowedOrderSubTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "additionalRequiredOffers": {
          "description": "Other offers that must be purchased in the same transaction for this price point.  Example:   An EIP offer or equipment lease offer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersAdditionalRequiredOffers"
          }
        },
        "offerCategory": {
          "description": "The category of plan offer that a line of service must have in order to qualify for this multi-line price point.",
          "type": "string"
        },
        "offerSubCategory1": {
          "description": "The second-level category of plan offer that a line of service must have in order to qualify for this multi-line price point.",
          "type": "string"
        },
        "beginningLineOfServiceNumber": {
          "description": "For network service offers that have tiered pricing, the beginning line number for this price point.  For example if a service costs $10 for the first 2 lines, the beginning value is 1 and the ending value is 2.",
          "type": "integer",
          "format": "int32"
        },
        "endingLineOfServiceNumber": {
          "description": "For network service offers that have tiered pricing, the ending line number for this price point.  For example if a service costs $10 for the first 2 lines, the beginning value is 1 and the ending value is 2.",
          "type": "integer",
          "format": "int32"
        },
        "financingProgramType": {
          "description": "Financing program type, such as loan or lease.  Same as the productSubType in offer.",
          "type": "string"
        },
        "creditRiskProfileId": {
          "description": "Unique identifier generated from risk system which is derived from multple business inputs -creditscore, tenure and payment history etc.",
          "type": "string"
        }
      }
    },
    "BatchOrdersPricePointCriteria_1": {
      "type": "object",
      "properties": {
        "allowedOrderTypes": {
          "description": "Upgrade, New Activation, etc..",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowedOrderSubTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "additionalRequiredOffers": {
          "description": "Other offers that must be purchased in the same transaction for this price point.  Example:   An EIP offer or equipment lease offer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersAdditionalRequiredOffers_1"
          }
        },
        "offerCategory": {
          "description": "The category of plan offer that a line of service must have in order to qualify for this multi-line price point.",
          "type": "string"
        },
        "offerSubCategory1": {
          "description": "The second-level category of plan offer that a line of service must have in order to qualify for this multi-line price point.",
          "type": "string"
        },
        "beginningLineOfServiceNumber": {
          "description": "For network service offers that have tiered pricing, the beginning line number for this price point.  For example if a service costs $10 for the first 2 lines, the beginning value is 1 and the ending value is 2.",
          "type": "integer",
          "format": "int32"
        },
        "endingLineOfServiceNumber": {
          "description": "For network service offers that have tiered pricing, the ending line number for this price point.  For example if a service costs $10 for the first 2 lines, the beginning value is 1 and the ending value is 2.",
          "type": "integer",
          "format": "int32"
        },
        "financingProgramType": {
          "description": "Financing program type, such as loan or lease.  Same as the productSubType in offer.",
          "type": "string"
        },
        "creditRiskProfileId": {
          "description": "Unique identifier generated from risk system which is derived from multple business inputs -creditscore, tenure and payment history etc.",
          "type": "string"
        }
      }
    },
    "BatchOrdersPricePointCriteria_2": {
      "type": "object",
      "properties": {
        "allowedOrderTypes": {
          "description": "Upgrade, New Activation, etc..",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowedOrderSubTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "additionalRequiredOffers": {
          "description": "Other offers that must be purchased in the same transaction for this price point.  Example:   An EIP offer or equipment lease offer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersAdditionalRequiredOffers_2"
          }
        },
        "offerCategory": {
          "description": "The category of plan offer that a line of service must have in order to qualify for this multi-line price point.",
          "type": "string"
        },
        "offerSubCategory1": {
          "description": "The second-level category of plan offer that a line of service must have in order to qualify for this multi-line price point.",
          "type": "string"
        },
        "beginningLineOfServiceNumber": {
          "description": "For network service offers that have tiered pricing, the beginning line number for this price point.  For example if a service costs $10 for the first 2 lines, the beginning value is 1 and the ending value is 2.",
          "type": "integer",
          "format": "int32"
        },
        "endingLineOfServiceNumber": {
          "description": "For network service offers that have tiered pricing, the ending line number for this price point.  For example if a service costs $10 for the first 2 lines, the beginning value is 1 and the ending value is 2.",
          "type": "integer",
          "format": "int32"
        },
        "financingProgramType": {
          "description": "Financing program type, such as loan or lease.  Same as the productSubType in offer.",
          "type": "string"
        },
        "creditRiskProfileId": {
          "description": "Unique identifier generated from risk system which is derived from multple business inputs -creditscore, tenure and payment history etc.",
          "type": "string"
        }
      }
    },
    "BatchOrdersPrices": {
      "type": "object",
      "properties": {
        "priceListLineId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "offeringPriceType": {
          "description": "Categorization of the price point.",
          "type": "string"
        },
        "oneTimeCharges": {
          "description": "One-time charges/discounts for the price point are listed here.  Examples: charges for an on-demand data pass or equipment purchase.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersOneTimeCharges_1"
          }
        },
        "recurringChargeDetail": {
          "description": "For type of recurring charge, the schedule of amounts and discounts of the price point are listed here.  Examples:  monthly MRC charges, or equipment lease/finance.",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersRecurringChargeDetail"
        },
        "pricePointCriteria": {
          "type": "object",
          "$ref": "#/definitions/BatchOrdersPricePointCriteria"
        },
        "canModifyPrice": {
          "description": "When fales, the price can never be overridden even by representatives with the appropriate authority.",
          "type": "boolean"
        },
        "taxInclusiveIndicator": {
          "description": "When true indicates the price reflects the total after tax.",
          "type": "boolean"
        },
        "specifications": {
          "description": "Named value pair",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersSpecifications_1"
          }
        },
        "futureDatedPaymentIndicator": {
          "description": "To indicate if the payment can be made in the future.",
          "type": "boolean"
        }
      }
    },
    "BatchOrdersPrices_1": {
      "type": "object",
      "properties": {
        "priceListLineId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "offeringPriceType": {
          "description": "Categorization of the price point.",
          "type": "string"
        },
        "oneTimeCharges": {
          "description": "One-time charges/discounts for the price point are listed here.  Examples: charges for an on-demand data pass or equipment purchase.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersOneTimeCharges_2"
          }
        },
        "recurringChargeDetail": {
          "description": "For type of recurring charge, the schedule of amounts and discounts of the price point are listed here.  Examples:  monthly MRC charges, or equipment lease/finance.",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersRecurringChargeDetail_1"
        },
        "pricePointCriteria": {
          "type": "object",
          "$ref": "#/definitions/BatchOrdersPricePointCriteria_1"
        },
        "canModifyPrice": {
          "description": "When fales, the price can never be overridden even by representatives with the appropriate authority.",
          "type": "boolean"
        },
        "taxInclusiveIndicator": {
          "description": "When true indicates the price reflects the total after tax.",
          "type": "boolean"
        },
        "specifications": {
          "description": "Named value pair",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersSpecifications_2"
          }
        },
        "futureDatedPaymentIndicator": {
          "description": "To indicate if the payment can be made in the future.",
          "type": "boolean"
        }
      }
    },
    "BatchOrdersProductConflicts": {
      "type": "object",
      "properties": {
        "orderLineId": {
          "description": "Identifier of order line",
          "type": "string"
        },
        "conflictLevel": {
          "description": "Level of the product conflict.  ACCOUNT, LINE, PRODUCT.",
          "type": "string"
        },
        "conflictType": {
          "description": "Type of conflict",
          "type": "string"
        },
        "autoResolvableIndicator": {
          "description": "Indicates whether the conflict can be resolve automatically by the backend.",
          "type": "boolean"
        },
        "offerId": {
          "description": "Unique identifier of the offer that has a conflicting product.",
          "type": "string"
        },
        "offerSequenceNumber": {
          "description": "For postpaid accounts, required to correctly identify the conflicting product on a customers account or line of service.",
          "type": "integer",
          "format": "int32"
        },
        "offerDescription": {
          "description": "Description of the conflicting offer.",
          "type": "string"
        },
        "productType": {
          "description": "Product type of the conflicting product.",
          "type": "string"
        },
        "productSubTypes": {
          "description": "Product sub type of the conflicting product.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "specifications": {
          "description": "Named value pairs. Additional details about the conflicting product.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersSpecifications_6"
          }
        },
        "accountNumber": {
          "description": "Account number that has the conflicting product.  Used when there is not a cart item for the conflicting product.",
          "type": "string"
        },
        "phoneNumber": {
          "description": "Used to identify the line of service (phone number) that has the conflicting product.  Used when there is not a cart item for the conflicting product.",
          "type": "string"
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "BatchOrdersProducts": {
      "type": "object",
      "properties": {
        "productId": {
          "description": "Uniquely identifies a known product.",
          "type": "string"
        },
        "productName": {
          "description": "The common name of the product, as defined in the product catalog.",
          "type": "string"
        },
        "productKeywords": {
          "description": "Words used in searches for the product.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "description": "Description of the product",
          "type": "string"
        },
        "shortDescription": {
          "description": "Short description of the product",
          "type": "string"
        },
        "longDescription": {
          "description": "Long description of the product",
          "type": "string"
        },
        "serviceProvider": {
          "description": "Service provider for the device",
          "type": "string"
        },
        "manufacturer": {
          "description": "Device manufacturer name",
          "type": "string"
        },
        "model": {
          "description": "Device model name",
          "type": "string"
        },
        "variants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersVariants"
          }
        },
        "images": {
          "description": "Images associated with one or more variants of the product.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersImages"
          }
        },
        "tacCodes": {
          "description": "The Type Allocation Code (TAC) is the initial eight-digit portion of the 15-digit IMEI and 16-digit IMEISV codes used to uniquely identify wireless devices.  Each TAC code can be used by one or more variant of the equipment product.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersTacCodes"
          }
        },
        "marketingFeatures": {
          "description": "An organized list of capabilities and functionality that T-Mobile wants to highlight for sales and marketing purposes.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersMarketingFeatures"
          }
        },
        "equipmentSpecifications": {
          "description": "Groups of physical and operational details that are usually provided by the equipment manufacturer.  For example, physical dimensions, operating system specs.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersEquipmentSpecifications"
          }
        },
        "specifications": {
          "description": "Product named value pairs",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersSpecifications_4"
          }
        }
      }
    },
    "BatchOrdersPromotionalBenefits": {
      "type": "object",
      "properties": {
        "benefitCategory": {
          "description": "Benefit category,  such as discount, free feature etc.",
          "type": "string"
        },
        "numberOfOccurrences": {
          "description": "Number of times this promotional benefit can be claimed by customer.",
          "type": "integer",
          "format": "int32"
        },
        "unlimitedOccurrenceIndicator": {
          "description": "Indicates that promotional benefit can be availed unlimited number of times.",
          "type": "boolean"
        },
        "scope": {
          "description": "Defines if the occurrence of the promotion apply to line, account, or customer",
          "type": "string"
        },
        "currentOccurrence": {
          "description": "Specify the number of times a specific customer has already received the promotional benefit.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "BatchOrdersPromotionEffectivePeriod": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "BatchOrdersPromotionEffectivePeriod_1": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "BatchOrdersPromotionEffectivePeriod_2": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "BatchOrdersPromotionEffectivePeriod_3": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "BatchOrdersPromotionEffectivePeriod_4": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "BatchOrdersPromotionEffectivePeriod_5": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "BatchOrdersPromotions": {
      "type": "object",
      "properties": {
        "actionCode": {
          "type": "string"
        },
        "promotionId": {
          "description": "The unique id of the promotion.",
          "type": "string"
        },
        "shortDescription": {
          "description": "Short description",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "promotionEffectivePeriod": {
          "description": "The time period where the Promotion is effective.",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersPromotionEffectivePeriod"
        },
        "customerSpecificDetails": {
          "description": "Named value pairs specific to the customer",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersCustomerSpecificDetails"
          }
        }
      }
    },
    "BatchOrdersPromotions_1": {
      "type": "object",
      "properties": {
        "promotionId": {
          "description": "The unique id of the promotion.",
          "type": "string"
        },
        "shortDescription": {
          "description": "Short description",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "promotionEffectivePeriod": {
          "description": "The time period where the Promotion is effective.",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersPromotionEffectivePeriod_1"
        },
        "name": {
          "description": "Commonly used name of the Promotion, as defined in the Product Catalog.",
          "type": "string"
        },
        "link": {
          "description": "Link to the promotion object.",
          "type": "string"
        },
        "code": {
          "description": "Code for this promotion. It is different from promotion ID.",
          "type": "string"
        },
        "type": {
          "description": "Defines whether the promotion is manually or automatically added to a cart/order.",
          "type": "string"
        },
        "displayOrder": {
          "description": "Order or sequence to display",
          "type": "integer",
          "format": "int32"
        },
        "oneTimeOnlyIndicator": {
          "description": "Indicates whether this promotion may be applied more than once for the same customer. True if it may only be used once.",
          "type": "boolean"
        },
        "legalDisclosure": {
          "description": "Disclaimers or any other textual information that must be displayed to customers for legal reasons.",
          "type": "string"
        },
        "serializedCouponAllowedIndicator": {
          "description": "True when a customer can use a serialized coupon code to fulfill eligibilty requirements for the promotion.",
          "type": "boolean"
        },
        "realizationMethod": {
          "description": "The way that the promotion is delivered to the customer.",
          "type": "string"
        },
        "realizationSubMethod": {
          "description": "The detailed catagory on how the promotion is delivered to the customer.",
          "type": "string"
        },
        "promotionalBenefits": {
          "description": "Describes the consideration given to the customer with the promotion.  For example a discount or free product.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersPromotionalBenefits"
          }
        },
        "discount": {
          "description": "Discount of the promotion",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersDiscount"
        },
        "conflictingPromotions": {
          "description": "Conflicting promotions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersConflictingPromotions"
          }
        },
        "eligibleAccessories": {
          "description": "Eligible accessories to receive the promotion",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersEligibleAccessories"
          }
        },
        "eligibleDevices": {
          "description": "Eligible devices for the promotion",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersEligibleDevices"
          }
        }
      }
    },
    "BatchOrdersPromotions_2": {
      "type": "object",
      "properties": {
        "actionCode": {
          "type": "string"
        },
        "promotionId": {
          "description": "The unique id of the promotion.",
          "type": "string"
        },
        "shortDescription": {
          "description": "Short description",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "promotionEffectivePeriod": {
          "description": "The time period where the Promotion is effective.",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersPromotionEffectivePeriod_3"
        },
        "customerSpecificDetails": {
          "description": "Named value pairs specific to the customer",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersCustomerSpecificDetails_1"
          }
        }
      }
    },
    "BatchOrdersPromotions_3": {
      "type": "object",
      "properties": {
        "promotionId": {
          "description": "The unique id of the promotion.",
          "type": "string"
        },
        "shortDescription": {
          "description": "Short description",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "promotionEffectivePeriod": {
          "description": "The time period where the Promotion is effective.",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersPromotionEffectivePeriod_5"
        }
      }
    },
    "BatchOrdersPromotions_4": {
      "type": "object",
      "properties": {
        "promotionId": {
          "description": "The unique id of the promotion.",
          "type": "string"
        },
        "promotionAmount": {
          "description": "Deduction amount for the promotion",
          "type": "number",
          "format": "double"
        }
      }
    },
    "BatchOrdersProvisioningMessages": {
      "type": "object",
      "properties": {
        "level": {
          "description": "Validation level",
          "type": "string"
        },
        "code": {
          "description": "Validation code",
          "type": "string"
        },
        "category": {
          "description": "Validation category",
          "type": "string"
        },
        "message": {
          "description": "Validation message",
          "type": "string"
        },
        "entityIdentifier": {
          "type": "string"
        },
        "entityName": {
          "type": "string"
        },
        "identiferName": {
          "type": "string"
        },
        "relationshipType": {
          "type": "string"
        }
      }
    },
    "BatchOrdersPurchasedEquipment": {
      "type": "object",
      "properties": {
        "deviceId": {
          "description": "Uniquely identifies a device",
          "type": "string"
        },
        "imei": {
          "description": "International Mobile Equipment Identifier.  Unique identifier for a mobile device on a network.",
          "type": "string"
        },
        "serialNumber": {
          "description": "Serial number of the equipment (device or accessory).",
          "type": "string"
        },
        "deviceStatus": {
          "description": "Status of the device.",
          "type": "string"
        },
        "blacklist": {
          "type": "object",
          "$ref": "#/definitions/BatchOrdersBlacklist_2"
        },
        "sku": {
          "description": "The sku of the device offer variant.  Only relevant if the customer purchased the device from T-Mobile.",
          "type": "string"
        },
        "description": {
          "description": "Description of the offer variant",
          "type": "string"
        },
        "fullRetailPrice": {
          "description": "Full retail price",
          "type": "number",
          "format": "double"
        },
        "productType": {
          "description": "The category of product included in the offer: Plan, Service, Device, Accessory, or Financial.",
          "type": "string"
        },
        "productSubType": {
          "description": "Secondary categorizations of the type of product included in the offer.",
          "type": "string"
        },
        "salePrice": {
          "description": "Actual price customer paid for the equipment",
          "type": "number",
          "format": "double"
        }
      }
    },
    "BatchOrdersRecurringChargeDetail": {
      "type": "object",
      "properties": {
        "periodType": {
          "description": "Monthly, daily, etc...",
          "type": "string"
        },
        "recurringCharges": {
          "description": "List of recurring charge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersRecurringCharges_1"
          }
        }
      }
    },
    "BatchOrdersRecurringChargeDetail_1": {
      "type": "object",
      "properties": {
        "periodType": {
          "description": "Monthly, daily, etc...",
          "type": "string"
        },
        "recurringCharges": {
          "description": "List of recurring charge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersRecurringCharges_2"
          }
        }
      }
    },
    "BatchOrdersRecurringChargeDetail_2": {
      "type": "object",
      "properties": {
        "periodType": {
          "description": "Monthly, daily, etc...",
          "type": "string"
        },
        "recurringCharges": {
          "description": "List of recurring charge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersRecurringCharges_3"
          }
        }
      }
    },
    "BatchOrdersRecurringCharges": {
      "type": "object",
      "properties": {
        "type": {
          "description": "Charge or tax type",
          "type": "string"
        },
        "amount": {
          "description": "Amount charged.",
          "type": "number",
          "format": "double"
        },
        "description": {
          "description": "Description of the charge",
          "type": "string"
        },
        "code": {
          "description": "Charge code",
          "type": "string"
        }
      }
    },
    "BatchOrdersRecurringCharges_1": {
      "type": "object",
      "properties": {
        "startingPeriodNumber": {
          "type": "integer",
          "format": "int32"
        },
        "endingPeriodNumber": {
          "type": "integer",
          "format": "int32"
        },
        "amount": {
          "description": "The price to be charged in dollars, inclusive of all discount(s).  periodicAmount = basisPeriodicAmount minus discountAmount(s)",
          "type": "number",
          "format": "double"
        },
        "basisAmount": {
          "description": "The price to be charged in dollars, before any discount(s).",
          "type": "number",
          "format": "double"
        },
        "discountAmount": {
          "description": "Total amount of discounts, in dollars, that is included in the periodicAmount.",
          "type": "number",
          "format": "double"
        },
        "productChargeIncurredType": {
          "description": "Specifies the timing for when the first charge is incurred for the product: immediate, on usage, or on demand.",
          "type": "string"
        },
        "proratedAmount": {
          "description": "This is the cost that the customer would need to pay in order to add this feature to their current account effective immediately. it is prorated from the current date until the end of the current cycle.",
          "type": "number",
          "format": "double"
        },
        "priceComponents": {
          "description": "The details of charges and deductions that comprise the recurring charge.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersPriceComponents_1"
          }
        },
        "adjustedNumberOfInstallaments": {
          "description": "Number of payment installments adjusted by client.",
          "type": "integer",
          "format": "int32"
        },
        "originalNumberOfInstallaments": {
          "description": "Number of payment installments before it is adjusted.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "BatchOrdersRecurringCharges_2": {
      "type": "object",
      "properties": {
        "startingPeriodNumber": {
          "type": "integer",
          "format": "int32"
        },
        "endingPeriodNumber": {
          "type": "integer",
          "format": "int32"
        },
        "amount": {
          "description": "The price to be charged in dollars, inclusive of all discount(s).  periodicAmount = basisPeriodicAmount minus discountAmount(s)",
          "type": "number",
          "format": "double"
        },
        "basisAmount": {
          "description": "The price to be charged in dollars, before any discount(s).",
          "type": "number",
          "format": "double"
        },
        "discountAmount": {
          "description": "Total amount of discounts, in dollars, that is included in the periodicAmount.",
          "type": "number",
          "format": "double"
        },
        "productChargeIncurredType": {
          "description": "Specifies the timing for when the first charge is incurred for the product: immediate, on usage, or on demand.",
          "type": "string"
        },
        "proratedAmount": {
          "description": "This is the cost that the customer would need to pay in order to add this feature to their current account effective immediately. it is prorated from the current date until the end of the current cycle.",
          "type": "number",
          "format": "double"
        },
        "priceComponents": {
          "description": "The details of charges and deductions that comprise the recurring charge.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersPriceComponents_3"
          }
        },
        "adjustedNumberOfInstallaments": {
          "description": "Number of payment installments adjusted by client.",
          "type": "integer",
          "format": "int32"
        },
        "originalNumberOfInstallaments": {
          "description": "Number of payment installments before it is adjusted.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "BatchOrdersRecurringCharges_3": {
      "type": "object",
      "properties": {
        "startingPeriodNumber": {
          "type": "integer",
          "format": "int32"
        },
        "endingPeriodNumber": {
          "type": "integer",
          "format": "int32"
        },
        "amount": {
          "description": "The price to be charged in dollars, inclusive of all discount(s).  periodicAmount = basisPeriodicAmount minus discountAmount(s)",
          "type": "number",
          "format": "double"
        },
        "basisAmount": {
          "description": "The price to be charged in dollars, before any discount(s).",
          "type": "number",
          "format": "double"
        },
        "discountAmount": {
          "description": "Total amount of discounts, in dollars, that is included in the periodicAmount.",
          "type": "number",
          "format": "double"
        },
        "productChargeIncurredType": {
          "description": "Specifies the timing for when the first charge is incurred for the product: immediate, on usage, or on demand.",
          "type": "string"
        },
        "proratedAmount": {
          "description": "This is the cost that the customer would need to pay in order to add this feature to their current account effective immediately. it is prorated from the current date until the end of the current cycle.",
          "type": "number",
          "format": "double"
        },
        "priceComponents": {
          "description": "The details of charges and deductions that comprise the recurring charge.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersPriceComponents_5"
          }
        },
        "adjustedNumberOfInstallaments": {
          "description": "Number of payment installments adjusted by client.",
          "type": "integer",
          "format": "int32"
        },
        "originalNumberOfInstallaments": {
          "description": "Number of payment installments before it is adjusted.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "BatchOrdersRecurringCharges_4": {
      "type": "object",
      "properties": {
        "type": {
          "description": "Charge or tax type",
          "type": "string"
        },
        "amount": {
          "description": "Amount charged.",
          "type": "number",
          "format": "double"
        },
        "description": {
          "description": "Description of the charge",
          "type": "string"
        },
        "code": {
          "description": "Charge code",
          "type": "string"
        }
      }
    },
    "BatchOrdersRecurringCharges_5": {
      "type": "object",
      "properties": {
        "type": {
          "description": "Charge or tax type",
          "type": "string"
        },
        "amount": {
          "description": "Amount charged.",
          "type": "number",
          "format": "double"
        },
        "description": {
          "description": "Description of the charge",
          "type": "string"
        },
        "code": {
          "description": "Charge code",
          "type": "string"
        }
      }
    },
    "BatchOrdersRelatedLines": {
      "type": "object",
      "properties": {
        "orderLineId": {
          "description": "Identifier of order line",
          "type": "string"
        },
        "relationshipType": {
          "type": "string"
        },
        "offerId": {
          "description": "Unique identifier of the related offer item.",
          "type": "string"
        },
        "offerDescription": {
          "description": "Description of the related  offer item.",
          "type": "string"
        }
      }
    },
    "BatchOrdersRelatedLines_1": {
      "type": "object",
      "properties": {
        "orderLineId": {
          "description": "Identifier of order line",
          "type": "string"
        },
        "relationshipType": {
          "type": "string"
        },
        "offerId": {
          "description": "Unique identifier of the related offer item.",
          "type": "string"
        },
        "offerDescription": {
          "description": "Description of the related  offer item.",
          "type": "string"
        }
      }
    },
    "BatchOrdersRequestedDelivery": {
      "type": "object",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "BatchOrdersRequestedDelivery_1": {
      "type": "object",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "BatchOrdersRequestedDelivery_2": {
      "type": "object",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "BatchOrdersRequiredOffers": {
      "type": "object",
      "properties": {
        "relationshipType": {
          "description": "The type of relationship between the two offers.",
          "type": "string"
        },
        "link": {
          "description": "A link to the offer that is related to this one.",
          "type": "string"
        },
        "relatedOfferId": {
          "description": "The id of the offer that is related to this one.",
          "type": "string"
        },
        "relatedOfferName": {
          "description": "The name of the offer that is related to this one.",
          "type": "string"
        },
        "displayPriority": {
          "description": "Display priority or sequence",
          "type": "integer",
          "format": "int32"
        },
        "minimumNumberOfLines": {
          "description": "Minimum number of lines needed for eligibility.",
          "type": "integer",
          "format": "int32"
        },
        "maximumNumberOfLines": {
          "description": "Maximum number of lines allowed to be eligible.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "BatchOrdersReturnedEquipment": {
      "type": "object",
      "properties": {
        "deviceId": {
          "description": "Uniquely identifies a device",
          "type": "string"
        },
        "imei": {
          "description": "International Mobile Equipment Identifier.  Unique identifier for a mobile device on a network.",
          "type": "string"
        },
        "serialNumber": {
          "description": "Serial number of the equipment (device or accessory).",
          "type": "string"
        },
        "deviceStatus": {
          "description": "Status of the device.",
          "type": "string"
        },
        "blacklist": {
          "type": "object",
          "$ref": "#/definitions/BatchOrdersBlacklist_3"
        },
        "sku": {
          "description": "The sku of the device offer variant.  Only relevant if the customer purchased the device from T-Mobile.",
          "type": "string"
        },
        "phoneNumber": {
          "description": "Phone number",
          "type": "string"
        },
        "acceptanceType": {
          "description": "Indicates the customer’s response to the trade-in quotation.",
          "type": "string"
        },
        "deviceRecoveryType": {
          "description": "When the trade in equipment is expected to be returned in the context of a transaction.  Accept if the equipment is returned during the transaction, Deferred if the equipment is returned after the transaction, Accept-Deferred if no equipment is required to be returned during the transaction.",
          "type": "string"
        },
        "tradeInAmount": {
          "description": "Amount applied from a Device traded in by Customer.",
          "type": "number",
          "format": "double"
        }
      }
    },
    "BatchOrdersSalesInfo": {
      "type": "object",
      "properties": {
        "createdBy": {
          "description": "The identity of the representative who created the Cart",
          "type": "string"
        },
        "lastModifiedBy": {
          "description": "The identity of the representative who last modified the Cart",
          "type": "string"
        },
        "checkoutBy": {
          "description": "The identity of the representative who converted the Cart to an Order",
          "type": "string"
        },
        "estimatedCommission": {
          "type": "number",
          "format": "double"
        },
        "storeId": {
          "type": "string"
        },
        "salesChannel": {
          "description": "Describes how the sale was received.",
          "type": "string"
        },
        "salesSubChannel": {
          "description": "Specifies how the sale was received within the channel.",
          "type": "string"
        },
        "salesSubChannelCategory": {
          "description": "Categorizes how the sale was received within the subchannel.",
          "type": "string"
        },
        "fraudCheckStatus": {
          "description": "Status of the shopping cart in fraud check.",
          "type": "string"
        },
        "fraudCheckMessage": {
          "description": "Message produced by fraud check.",
          "type": "string"
        },
        "ipAddress": {
          "description": "IP address where the order originated.",
          "type": "string"
        },
        "deviceFingerprintId": {
          "description": "Device fingerprint id where the order originated.",
          "type": "string"
        },
        "jurisdictionCode": {
          "description": "Code used to identify the jurisdiction that the tax was calculated for, a.k.a. taxAreaId.",
          "type": "string"
        },
        "emailAddress": {
          "description": "Email Address",
          "type": "string"
        },
        "storeAddress": {
          "description": "Address of the store",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersStoreAddress"
        },
        "contactNumber": {
          "description": "Contact phone number",
          "type": "string"
        },
        "originalDealerCode": {
          "description": "Code of dealer who initiated transaction.",
          "type": "string"
        },
        "checkOutDealerCode": {
          "description": "Code of dealer who finish teh check out transaction.",
          "type": "string"
        },
        "storeName": {
          "description": "Name of the store",
          "type": "string"
        },
        "salesChannelWebsite": {
          "description": "Sales channel Website URL",
          "type": "string"
        },
        "operatorId": {
          "description": "Identifier of user/operator",
          "type": "string"
        }
      }
    },
    "BatchOrdersServiceCollection": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "$ref": "#/definitions/BatchOrdersMetadata_7"
        },
        "pagination": {
          "type": "object",
          "$ref": "#/definitions/BatchOrdersPagination_3"
        },
        "services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Services"
          }
        }
      }
    },
    "BatchOrdersShipFrom": {
      "type": "object",
      "properties": {
        "fullName": {
          "description": "The full name of the person, including first, middle, and family names.",
          "type": "string"
        },
        "firstName": {
          "description": "The given name or first name of the person",
          "type": "string"
        },
        "middleName": {
          "description": "The middle name or middle initial of the person.",
          "type": "string"
        },
        "familyName": {
          "description": "The family name or surname or last name of the person.",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        },
        "suffix": {
          "type": "string"
        },
        "addressId": {
          "description": "Identifier of address.",
          "type": "string"
        },
        "purposes": {
          "description": "The purpose or usage context for which the address should be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addressLine1": {
          "description": "The first line of the address, required.",
          "type": "string"
        },
        "addressLine2": {
          "description": "The second line of the address, optional.",
          "type": "string"
        },
        "addressLine3": {
          "description": "The third line of the address, optional.",
          "type": "string"
        },
        "cityName": {
          "description": "The name of the city in the mailing address. For military or diplomatic addresses should contain FPO, APO, or DPO.",
          "type": "string"
        },
        "stateCode": {
          "description": "The two letter state code.",
          "type": "string"
        },
        "zip": {
          "description": "The 5 digit zip or postal delivery code.",
          "type": "string"
        },
        "zipExt": {
          "description": "The zip or postal delivery extension.",
          "type": "string"
        },
        "countryCode": {
          "description": "Country code",
          "type": "string"
        },
        "geoCode": {
          "description": "A unique code that represents a geospatial coordinate measurement of an exact geographic location and time at, below, or above the surface of the earth",
          "type": "string"
        },
        "addressFormatType": {
          "type": "string"
        }
      }
    },
    "BatchOrdersShipFrom_1": {
      "type": "object",
      "properties": {
        "fullName": {
          "description": "The full name of the person, including first, middle, and family names.",
          "type": "string"
        },
        "firstName": {
          "description": "The given name or first name of the person",
          "type": "string"
        },
        "middleName": {
          "description": "The middle name or middle initial of the person.",
          "type": "string"
        },
        "familyName": {
          "description": "The family name or surname or last name of the person.",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        },
        "suffix": {
          "type": "string"
        },
        "addressId": {
          "description": "Identifier of address.",
          "type": "string"
        },
        "purposes": {
          "description": "The purpose or usage context for which the address should be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addressLine1": {
          "description": "The first line of the address, required.",
          "type": "string"
        },
        "addressLine2": {
          "description": "The second line of the address, optional.",
          "type": "string"
        },
        "addressLine3": {
          "description": "The third line of the address, optional.",
          "type": "string"
        },
        "cityName": {
          "description": "The name of the city in the mailing address. For military or diplomatic addresses should contain FPO, APO, or DPO.",
          "type": "string"
        },
        "stateCode": {
          "description": "The two letter state code.",
          "type": "string"
        },
        "zip": {
          "description": "The 5 digit zip or postal delivery code.",
          "type": "string"
        },
        "zipExt": {
          "description": "The zip or postal delivery extension.",
          "type": "string"
        },
        "countryCode": {
          "description": "Country code",
          "type": "string"
        },
        "geoCode": {
          "description": "A unique code that represents a geospatial coordinate measurement of an exact geographic location and time at, below, or above the surface of the earth",
          "type": "string"
        },
        "addressFormatType": {
          "type": "string"
        }
      }
    },
    "BatchOrdersShipFrom_2": {
      "type": "object",
      "properties": {
        "fullName": {
          "description": "The full name of the person, including first, middle, and family names.",
          "type": "string"
        },
        "firstName": {
          "description": "The given name or first name of the person",
          "type": "string"
        },
        "middleName": {
          "description": "The middle name or middle initial of the person.",
          "type": "string"
        },
        "familyName": {
          "description": "The family name or surname or last name of the person.",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        },
        "suffix": {
          "type": "string"
        },
        "addressId": {
          "description": "Identifier of address.",
          "type": "string"
        },
        "purposes": {
          "description": "The purpose or usage context for which the address should be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addressLine1": {
          "description": "The first line of the address, required.",
          "type": "string"
        },
        "addressLine2": {
          "description": "The second line of the address, optional.",
          "type": "string"
        },
        "addressLine3": {
          "description": "The third line of the address, optional.",
          "type": "string"
        },
        "cityName": {
          "description": "The name of the city in the mailing address. For military or diplomatic addresses should contain FPO, APO, or DPO.",
          "type": "string"
        },
        "stateCode": {
          "description": "The two letter state code.",
          "type": "string"
        },
        "zip": {
          "description": "The 5 digit zip or postal delivery code.",
          "type": "string"
        },
        "zipExt": {
          "description": "The zip or postal delivery extension.",
          "type": "string"
        },
        "countryCode": {
          "description": "Country code",
          "type": "string"
        },
        "geoCode": {
          "description": "A unique code that represents a geospatial coordinate measurement of an exact geographic location and time at, below, or above the surface of the earth",
          "type": "string"
        },
        "addressFormatType": {
          "type": "string"
        }
      }
    },
    "BatchOrdersShippingAddress": {
      "type": "object",
      "properties": {
        "addressId": {
          "description": "Identifier of address.",
          "type": "string"
        },
        "purposes": {
          "description": "The purpose or usage context for which the address should be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addressLine1": {
          "description": "The first line of the address, required.",
          "type": "string"
        },
        "addressLine2": {
          "description": "The second line of the address, optional.",
          "type": "string"
        },
        "addressLine3": {
          "description": "The third line of the address, optional.",
          "type": "string"
        },
        "cityName": {
          "description": "The name of the city in the mailing address. For military or diplomatic addresses should contain FPO, APO, or DPO.",
          "type": "string"
        },
        "stateCode": {
          "description": "The two letter state code.",
          "type": "string"
        },
        "zip": {
          "description": "The 5 digit zip or postal delivery code.",
          "type": "string"
        },
        "zipExt": {
          "description": "The zip or postal delivery extension.",
          "type": "string"
        },
        "countryCode": {
          "description": "Country code",
          "type": "string"
        },
        "geoCode": {
          "description": "A unique code that represents a geospatial coordinate measurement of an exact geographic location and time at, below, or above the surface of the earth",
          "type": "string"
        },
        "addressFormatType": {
          "type": "string"
        },
        "default": {
          "description": "Flags the address to be used for default communications.",
          "type": "string"
        },
        "validationStatus": {
          "description": "Specifies whether the address is VALIDATED, NONVALIDATED, or UNDELIVERABLE.",
          "type": "string"
        },
        "overwritten": {
          "description": "Flags whether the provided address has been overwritten by the system.",
          "type": "boolean"
        },
        "classification": {
          "description": "Classification of the address",
          "type": "string"
        },
        "label": {
          "description": "Address label",
          "type": "string"
        },
        "addressLine4": {
          "description": "The fourth free form line, expressed as text, of an address",
          "type": "string"
        },
        "stateName": {
          "description": "Name of the state",
          "type": "string"
        },
        "provinceName": {
          "description": "Name of the province",
          "type": "string"
        },
        "provinceCode": {
          "description": "Province code",
          "type": "string"
        },
        "countyName": {
          "description": "Name of the county",
          "type": "string"
        },
        "countyCode": {
          "description": "County code",
          "type": "string"
        },
        "attention": {
          "description": "Attention of the address",
          "type": "string"
        },
        "careOf": {
          "description": "The name, expressed as text, of a person or organization at this address to whom incoming mail is marked with words such as care of or C/O",
          "type": "string"
        },
        "postalCode": {
          "description": "A code specifying the postal code of the address",
          "type": "string"
        },
        "uncertaintyIndicator": {
          "description": "To indicate if the address is uncertain or not",
          "type": "boolean"
        },
        "geographicCoordinate": {
          "description": "The latitude and longitude of the geographic location that corresponds to the address.",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersGeographicCoordinate_1"
        },
        "urbanization": {
          "description": "Urbanization name or code",
          "type": "string"
        }
      }
    },
    "BatchOrdersShippingAddress_1": {
      "type": "object",
      "properties": {
        "addressId": {
          "description": "Identifier of address.",
          "type": "string"
        },
        "purposes": {
          "description": "The purpose or usage context for which the address should be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addressLine1": {
          "description": "The first line of the address, required.",
          "type": "string"
        },
        "addressLine2": {
          "description": "The second line of the address, optional.",
          "type": "string"
        },
        "addressLine3": {
          "description": "The third line of the address, optional.",
          "type": "string"
        },
        "cityName": {
          "description": "The name of the city in the mailing address. For military or diplomatic addresses should contain FPO, APO, or DPO.",
          "type": "string"
        },
        "stateCode": {
          "description": "The two letter state code.",
          "type": "string"
        },
        "zip": {
          "description": "The 5 digit zip or postal delivery code.",
          "type": "string"
        },
        "zipExt": {
          "description": "The zip or postal delivery extension.",
          "type": "string"
        },
        "countryCode": {
          "description": "Country code",
          "type": "string"
        },
        "geoCode": {
          "description": "A unique code that represents a geospatial coordinate measurement of an exact geographic location and time at, below, or above the surface of the earth",
          "type": "string"
        },
        "addressFormatType": {
          "type": "string"
        },
        "default": {
          "description": "Flags the address to be used for default communications.",
          "type": "string"
        },
        "validationStatus": {
          "description": "Specifies whether the address is VALIDATED, NONVALIDATED, or UNDELIVERABLE.",
          "type": "string"
        },
        "overwritten": {
          "description": "Flags whether the provided address has been overwritten by the system.",
          "type": "boolean"
        },
        "classification": {
          "description": "Classification of the address",
          "type": "string"
        },
        "label": {
          "description": "Address label",
          "type": "string"
        },
        "addressLine4": {
          "description": "The fourth free form line, expressed as text, of an address",
          "type": "string"
        },
        "stateName": {
          "description": "Name of the state",
          "type": "string"
        },
        "provinceName": {
          "description": "Name of the province",
          "type": "string"
        },
        "provinceCode": {
          "description": "Province code",
          "type": "string"
        },
        "countyName": {
          "description": "Name of the county",
          "type": "string"
        },
        "countyCode": {
          "description": "County code",
          "type": "string"
        },
        "attention": {
          "description": "Attention of the address",
          "type": "string"
        },
        "careOf": {
          "description": "The name, expressed as text, of a person or organization at this address to whom incoming mail is marked with words such as care of or C/O",
          "type": "string"
        },
        "postalCode": {
          "description": "A code specifying the postal code of the address",
          "type": "string"
        },
        "uncertaintyIndicator": {
          "description": "To indicate if the address is uncertain or not",
          "type": "boolean"
        },
        "geographicCoordinate": {
          "description": "The latitude and longitude of the geographic location that corresponds to the address.",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersGeographicCoordinate_2"
        },
        "urbanization": {
          "description": "Urbanization name or code",
          "type": "string"
        }
      }
    },
    "BatchOrdersShippingDetail": {
      "type": "object",
      "properties": {
        "shippingId": {
          "description": "Uniquely identifies a shipping details record.",
          "type": "string"
        },
        "trackingNumber": {
          "description": "Tracking number provided by the freight carrier.",
          "type": "string"
        },
        "shippingDate": {
          "description": "Date of the shipment.",
          "type": "string",
          "format": "date"
        },
        "trackingUrl": {
          "description": "URL provided by the freight carrier to track the progress of the shipment.",
          "type": "string"
        },
        "freightCarrier": {
          "description": "Name of the freight carrier.",
          "type": "string"
        },
        "description": {
          "description": "Brief description of the shipping option, eg: UPS Ground (5-7 business days)",
          "type": "string"
        },
        "serviceLevelCode": {
          "description": "Shipping carrier priority code such as 2nd day, next day, priority, etc.",
          "type": "string"
        },
        "shippingCharge": {
          "description": "Charge for the shipping option.",
          "type": "number",
          "format": "double"
        },
        "waiverIndicator": {
          "description": "To indicate if shipping charges can be waived by client, or if shaiiping charge is waived in actual order.",
          "type": "boolean"
        },
        "taxExemptionIndicator": {
          "description": "To indicate if tax can be exempted for the shipping charges when overall tax is calculated, or to indicate if shipping tax is exempted in actual order.",
          "type": "boolean"
        },
        "shippingDiscountAmount": {
          "description": "Discount amount for shipping.",
          "type": "number",
          "format": "double"
        },
        "shippingDiscountPercent": {
          "description": "Discount by percentage for shipping",
          "type": "number",
          "format": "double"
        },
        "shipTo": {
          "description": "Shipping to contact information",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersShipTo_1"
        },
        "shipFrom": {
          "description": "Shipping from contact information",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersShipFrom_1"
        },
        "estimatedDelivery": {
          "description": "Estimated delivery date.",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersEstimatedDelivery_1"
        },
        "expectedDelivery": {
          "description": "The date when the customer expect for delivery, updated from the shipper.",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersExpectedDelivery_1"
        },
        "requestedDelivery": {
          "description": "Requested delivery date from customer",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersRequestedDelivery_1"
        },
        "shippingLabelUrl": {
          "description": "URL that directs to the actual shipping lable.",
          "type": "string"
        },
        "estimatedShipment": {
          "description": "Estimated shipment date",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersEstimatedShipment_1"
        }
      }
    },
    "BatchOrdersShippingDetails": {
      "type": "object",
      "properties": {
        "shippingId": {
          "description": "Uniquely identifies a shipping details record.",
          "type": "string"
        },
        "trackingNumber": {
          "description": "Tracking number provided by the freight carrier.",
          "type": "string"
        },
        "shippingDate": {
          "description": "Date of the shipment.",
          "type": "string",
          "format": "date"
        },
        "trackingUrl": {
          "description": "URL provided by the freight carrier to track the progress of the shipment.",
          "type": "string"
        },
        "freightCarrier": {
          "description": "Name of the freight carrier.",
          "type": "string"
        },
        "description": {
          "description": "Brief description of the shipping option, eg: UPS Ground (5-7 business days)",
          "type": "string"
        },
        "serviceLevelCode": {
          "description": "Shipping carrier priority code such as 2nd day, next day, priority, etc.",
          "type": "string"
        },
        "shippingCharge": {
          "description": "Charge for the shipping option.",
          "type": "number",
          "format": "double"
        },
        "waiverIndicator": {
          "description": "To indicate if shipping charges can be waived by client, or if shaiiping charge is waived in actual order.",
          "type": "boolean"
        },
        "taxExemptionIndicator": {
          "description": "To indicate if tax can be exempted for the shipping charges when overall tax is calculated, or to indicate if shipping tax is exempted in actual order.",
          "type": "boolean"
        },
        "shippingDiscountAmount": {
          "description": "Discount amount for shipping.",
          "type": "number",
          "format": "double"
        },
        "shippingDiscountPercent": {
          "description": "Discount by percentage for shipping",
          "type": "number",
          "format": "double"
        },
        "shipTo": {
          "description": "Shipping to contact information",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersShipTo"
        },
        "shipFrom": {
          "description": "Shipping from contact information",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersShipFrom"
        },
        "estimatedDelivery": {
          "description": "Estimated delivery date.",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersEstimatedDelivery"
        },
        "expectedDelivery": {
          "description": "The date when the customer expect for delivery, updated from the shipper.",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersExpectedDelivery"
        },
        "requestedDelivery": {
          "description": "Requested delivery date from customer",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersRequestedDelivery"
        },
        "shippingLabelUrl": {
          "description": "URL that directs to the actual shipping lable.",
          "type": "string"
        },
        "estimatedShipment": {
          "description": "Estimated shipment date",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersEstimatedShipment"
        }
      }
    },
    "BatchOrdersShipTo": {
      "type": "object",
      "properties": {
        "fullName": {
          "description": "The full name of the person, including first, middle, and family names.",
          "type": "string"
        },
        "firstName": {
          "description": "The given name or first name of the person",
          "type": "string"
        },
        "middleName": {
          "description": "The middle name or middle initial of the person.",
          "type": "string"
        },
        "familyName": {
          "description": "The family name or surname or last name of the person.",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        },
        "suffix": {
          "type": "string"
        },
        "addressId": {
          "description": "Identifier of address.",
          "type": "string"
        },
        "purposes": {
          "description": "The purpose or usage context for which the address should be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addressLine1": {
          "description": "The first line of the address, required.",
          "type": "string"
        },
        "addressLine2": {
          "description": "The second line of the address, optional.",
          "type": "string"
        },
        "addressLine3": {
          "description": "The third line of the address, optional.",
          "type": "string"
        },
        "cityName": {
          "description": "The name of the city in the mailing address. For military or diplomatic addresses should contain FPO, APO, or DPO.",
          "type": "string"
        },
        "stateCode": {
          "description": "The two letter state code.",
          "type": "string"
        },
        "zip": {
          "description": "The 5 digit zip or postal delivery code.",
          "type": "string"
        },
        "zipExt": {
          "description": "The zip or postal delivery extension.",
          "type": "string"
        },
        "countryCode": {
          "description": "Country code",
          "type": "string"
        },
        "geoCode": {
          "description": "A unique code that represents a geospatial coordinate measurement of an exact geographic location and time at, below, or above the surface of the earth",
          "type": "string"
        },
        "addressFormatType": {
          "type": "string"
        }
      }
    },
    "BatchOrdersShipTo_1": {
      "type": "object",
      "properties": {
        "fullName": {
          "description": "The full name of the person, including first, middle, and family names.",
          "type": "string"
        },
        "firstName": {
          "description": "The given name or first name of the person",
          "type": "string"
        },
        "middleName": {
          "description": "The middle name or middle initial of the person.",
          "type": "string"
        },
        "familyName": {
          "description": "The family name or surname or last name of the person.",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        },
        "suffix": {
          "type": "string"
        },
        "addressId": {
          "description": "Identifier of address.",
          "type": "string"
        },
        "purposes": {
          "description": "The purpose or usage context for which the address should be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addressLine1": {
          "description": "The first line of the address, required.",
          "type": "string"
        },
        "addressLine2": {
          "description": "The second line of the address, optional.",
          "type": "string"
        },
        "addressLine3": {
          "description": "The third line of the address, optional.",
          "type": "string"
        },
        "cityName": {
          "description": "The name of the city in the mailing address. For military or diplomatic addresses should contain FPO, APO, or DPO.",
          "type": "string"
        },
        "stateCode": {
          "description": "The two letter state code.",
          "type": "string"
        },
        "zip": {
          "description": "The 5 digit zip or postal delivery code.",
          "type": "string"
        },
        "zipExt": {
          "description": "The zip or postal delivery extension.",
          "type": "string"
        },
        "countryCode": {
          "description": "Country code",
          "type": "string"
        },
        "geoCode": {
          "description": "A unique code that represents a geospatial coordinate measurement of an exact geographic location and time at, below, or above the surface of the earth",
          "type": "string"
        },
        "addressFormatType": {
          "type": "string"
        }
      }
    },
    "BatchOrdersShipTo_2": {
      "type": "object",
      "properties": {
        "fullName": {
          "description": "The full name of the person, including first, middle, and family names.",
          "type": "string"
        },
        "firstName": {
          "description": "The given name or first name of the person",
          "type": "string"
        },
        "middleName": {
          "description": "The middle name or middle initial of the person.",
          "type": "string"
        },
        "familyName": {
          "description": "The family name or surname or last name of the person.",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        },
        "suffix": {
          "type": "string"
        },
        "addressId": {
          "description": "Identifier of address.",
          "type": "string"
        },
        "purposes": {
          "description": "The purpose or usage context for which the address should be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addressLine1": {
          "description": "The first line of the address, required.",
          "type": "string"
        },
        "addressLine2": {
          "description": "The second line of the address, optional.",
          "type": "string"
        },
        "addressLine3": {
          "description": "The third line of the address, optional.",
          "type": "string"
        },
        "cityName": {
          "description": "The name of the city in the mailing address. For military or diplomatic addresses should contain FPO, APO, or DPO.",
          "type": "string"
        },
        "stateCode": {
          "description": "The two letter state code.",
          "type": "string"
        },
        "zip": {
          "description": "The 5 digit zip or postal delivery code.",
          "type": "string"
        },
        "zipExt": {
          "description": "The zip or postal delivery extension.",
          "type": "string"
        },
        "countryCode": {
          "description": "Country code",
          "type": "string"
        },
        "geoCode": {
          "description": "A unique code that represents a geospatial coordinate measurement of an exact geographic location and time at, below, or above the surface of the earth",
          "type": "string"
        },
        "addressFormatType": {
          "type": "string"
        }
      }
    },
    "BatchOrdersSpecificationGroups": {
      "type": "object",
      "properties": {
        "groupName": {
          "type": "string"
        },
        "specifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersSpecifications_11"
          }
        }
      }
    },
    "BatchOrdersSpecifications": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "BatchOrdersSpecifications_1": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "BatchOrdersSpecifications_10": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "BatchOrdersSpecifications_11": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "BatchOrdersSpecifications_12": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "BatchOrdersSpecifications_2": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "BatchOrdersSpecifications_3": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "rank": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "BatchOrdersSpecifications_4": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "BatchOrdersSpecifications_5": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "BatchOrdersSpecifications_6": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "BatchOrdersSpecifications_7": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "BatchOrdersSpecifications_8": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "BatchOrdersSpecifications_9": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "BatchOrdersStoreAddress": {
      "type": "object",
      "properties": {
        "addressId": {
          "description": "Identifier of address.",
          "type": "string"
        },
        "purposes": {
          "description": "The purpose or usage context for which the address should be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addressLine1": {
          "description": "The first line of the address, required.",
          "type": "string"
        },
        "addressLine2": {
          "description": "The second line of the address, optional.",
          "type": "string"
        },
        "addressLine3": {
          "description": "The third line of the address, optional.",
          "type": "string"
        },
        "cityName": {
          "description": "The name of the city in the mailing address. For military or diplomatic addresses should contain FPO, APO, or DPO.",
          "type": "string"
        },
        "stateCode": {
          "description": "The two letter state code.",
          "type": "string"
        },
        "zip": {
          "description": "The 5 digit zip or postal delivery code.",
          "type": "string"
        },
        "zipExt": {
          "description": "The zip or postal delivery extension.",
          "type": "string"
        },
        "countryCode": {
          "description": "Country code",
          "type": "string"
        },
        "geoCode": {
          "description": "A unique code that represents a geospatial coordinate measurement of an exact geographic location and time at, below, or above the surface of the earth",
          "type": "string"
        },
        "addressFormatType": {
          "type": "string"
        }
      }
    },
    "BatchOrdersTacCodes": {
      "type": "object",
      "properties": {
        "tacCode": {
          "description": "The Type Allocation Code (TAC) is the initial eight-digit portion of the 15-digit IMEI and 16-digit IMEISV codes used to uniquely identify wireless devices.",
          "type": "string"
        },
        "skus": {
          "description": "Unique identifier of the sku that are associated with the tac.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "BatchOrdersTaxCollection": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "$ref": "#/definitions/BatchOrdersMetadata_1"
        },
        "pagination": {
          "type": "object",
          "$ref": "#/definitions/BatchOrdersPagination"
        },
        "taxes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersTaxes"
          }
        },
        "totalTax": {
          "description": "Aggregate of all taxes.",
          "type": "number",
          "format": "double"
        },
        "totalTaxDescription": {
          "description": "Text describing the tax to be presented with the tax amount on documents, screens, and forms.",
          "type": "string"
        }
      }
    },
    "BatchOrdersTaxCollection_1": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "$ref": "#/definitions/BatchOrdersMetadata_3"
        },
        "pagination": {
          "type": "object",
          "$ref": "#/definitions/BatchOrdersPagination_2"
        },
        "taxes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersTaxes_1"
          }
        },
        "totalTax": {
          "description": "Aggregate of all taxes.",
          "type": "number",
          "format": "double"
        },
        "totalTaxDescription": {
          "description": "Text describing the tax to be presented with the tax amount on documents, screens, and forms.",
          "type": "string"
        }
      }
    },
    "BatchOrdersTaxCollection_2": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "$ref": "#/definitions/BatchOrdersMetadata_11"
        },
        "pagination": {
          "type": "object",
          "$ref": "#/definitions/BatchOrdersPagination_5"
        },
        "taxes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersTaxes_2"
          }
        },
        "totalTax": {
          "description": "Aggregate of all taxes.",
          "type": "number",
          "format": "double"
        },
        "totalTaxDescription": {
          "description": "Text describing the tax to be presented with the tax amount on documents, screens, and forms.",
          "type": "string"
        }
      }
    },
    "BatchOrdersTaxCollection_3": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "$ref": "#/definitions/BatchOrdersMetadata_12"
        },
        "pagination": {
          "type": "object",
          "$ref": "#/definitions/BatchOrdersPagination_6"
        },
        "taxes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersTaxes_3"
          }
        },
        "totalTax": {
          "description": "Aggregate of all taxes.",
          "type": "number",
          "format": "double"
        },
        "totalTaxDescription": {
          "description": "Text describing the tax to be presented with the tax amount on documents, screens, and forms.",
          "type": "string"
        }
      }
    },
    "BatchOrdersTaxes": {
      "type": "object",
      "properties": {
        "taxId": {
          "description": "Uniquely identifies the tax record.",
          "type": "string"
        },
        "code": {
          "description": "Tax Code",
          "type": "string"
        },
        "jurisdiction": {
          "description": "Name of the jurisdiction used to calculate the tax",
          "type": "string"
        },
        "amount": {
          "description": "Tax amount",
          "type": "number",
          "format": "double"
        },
        "typeCode": {
          "description": "Identifies the type of Tax. Could be SALES, VAT, USE, RESORT, PROPERTY, INCOME, SERVICE, E911,or Flat Rate.",
          "type": "string"
        },
        "taxExemption": {
          "description": "Indicates whether the customer is tax exempt and identifies the pertinent exemtption.",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "taxRate": {
          "description": "Tax rate",
          "type": "number",
          "format": "double"
        },
        "recurringIndicator": {
          "description": "Indicates if the tax is recurring or not",
          "type": "string"
        },
        "name": {
          "description": "Name of the tax",
          "type": "string"
        },
        "group": {
          "description": "The group of the tax that is belong to.",
          "type": "string"
        }
      }
    },
    "BatchOrdersTaxes_1": {
      "type": "object",
      "properties": {
        "taxId": {
          "description": "Uniquely identifies the tax record.",
          "type": "string"
        },
        "code": {
          "description": "Tax Code",
          "type": "string"
        },
        "jurisdiction": {
          "description": "Name of the jurisdiction used to calculate the tax",
          "type": "string"
        },
        "amount": {
          "description": "Tax amount",
          "type": "number",
          "format": "double"
        },
        "typeCode": {
          "description": "Identifies the type of Tax. Could be SALES, VAT, USE, RESORT, PROPERTY, INCOME, SERVICE, E911,or Flat Rate.",
          "type": "string"
        },
        "taxExemption": {
          "description": "Indicates whether the customer is tax exempt and identifies the pertinent exemtption.",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "taxRate": {
          "description": "Tax rate",
          "type": "number",
          "format": "double"
        },
        "recurringIndicator": {
          "description": "Indicates if the tax is recurring or not",
          "type": "string"
        },
        "name": {
          "description": "Name of the tax",
          "type": "string"
        },
        "group": {
          "description": "The group of the tax that is belong to.",
          "type": "string"
        }
      }
    },
    "BatchOrdersTaxes_2": {
      "type": "object",
      "properties": {
        "taxId": {
          "description": "Uniquely identifies the tax record.",
          "type": "string"
        },
        "code": {
          "description": "Tax Code",
          "type": "string"
        },
        "jurisdiction": {
          "description": "Name of the jurisdiction used to calculate the tax",
          "type": "string"
        },
        "amount": {
          "description": "Tax amount",
          "type": "number",
          "format": "double"
        },
        "typeCode": {
          "description": "Identifies the type of Tax. Could be SALES, VAT, USE, RESORT, PROPERTY, INCOME, SERVICE, E911,or Flat Rate.",
          "type": "string"
        },
        "taxExemption": {
          "description": "Indicates whether the customer is tax exempt and identifies the pertinent exemtption.",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "taxRate": {
          "description": "Tax rate",
          "type": "number",
          "format": "double"
        },
        "recurringIndicator": {
          "description": "Indicates if the tax is recurring or not",
          "type": "string"
        },
        "name": {
          "description": "Name of the tax",
          "type": "string"
        },
        "group": {
          "description": "The group of the tax that is belong to.",
          "type": "string"
        }
      }
    },
    "BatchOrdersTaxes_3": {
      "type": "object",
      "properties": {
        "taxId": {
          "description": "Uniquely identifies the tax record.",
          "type": "string"
        },
        "code": {
          "description": "Tax Code",
          "type": "string"
        },
        "jurisdiction": {
          "description": "Name of the jurisdiction used to calculate the tax",
          "type": "string"
        },
        "amount": {
          "description": "Tax amount",
          "type": "number",
          "format": "double"
        },
        "typeCode": {
          "description": "Identifies the type of Tax. Could be SALES, VAT, USE, RESORT, PROPERTY, INCOME, SERVICE, E911,or Flat Rate.",
          "type": "string"
        },
        "taxExemption": {
          "description": "Indicates whether the customer is tax exempt and identifies the pertinent exemtption.",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "taxRate": {
          "description": "Tax rate",
          "type": "number",
          "format": "double"
        },
        "recurringIndicator": {
          "description": "Indicates if the tax is recurring or not",
          "type": "string"
        },
        "name": {
          "description": "Name of the tax",
          "type": "string"
        },
        "group": {
          "description": "The group of the tax that is belong to.",
          "type": "string"
        }
      }
    },
    "BatchOrdersUsageCollection": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "$ref": "#/definitions/BatchOrdersMetadata_8"
        },
        "pagination": {
          "type": "object",
          "$ref": "#/definitions/BatchOrdersPagination_4"
        },
        "usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Usages"
          }
        }
      }
    },
    "BatchOrdersValidations": {
      "type": "object",
      "properties": {
        "orderLineId": {
          "description": "Identifier of order line",
          "type": "string"
        },
        "level": {
          "description": "Validation level",
          "type": "string"
        },
        "code": {
          "description": "Validation code",
          "type": "string"
        },
        "category": {
          "description": "Validation category",
          "type": "string"
        },
        "message": {
          "description": "Validation message",
          "type": "string"
        },
        "relationshipType": {
          "type": "string"
        },
        "offerId": {
          "description": "Unique identifier of the related offer item.",
          "type": "string"
        },
        "offerDescription": {
          "description": "Description of the related  offer item.",
          "type": "string"
        },
        "promotionId": {
          "description": "The unique id of the promotion.",
          "type": "string"
        },
        "shortDescription": {
          "description": "Short description",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "promotionEffectivePeriod": {
          "description": "The time period where the Promotion is effective.",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersPromotionEffectivePeriod_4"
        },
        "productConflicts": {
          "description": "Conflict product or offer",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersProductConflicts"
          }
        }
      }
    },
    "BatchOrdersValidations_1": {
      "type": "object",
      "properties": {
        "level": {
          "description": "Validation level",
          "type": "string"
        },
        "code": {
          "description": "Validation code",
          "type": "string"
        },
        "category": {
          "description": "Validation category",
          "type": "string"
        },
        "message": {
          "description": "Validation message",
          "type": "string"
        },
        "relatedLineCollection": {
          "type": "object",
          "$ref": "#/definitions/RelatedLineCollection"
        }
      }
    },
    "BatchOrdersVariants": {
      "type": "object",
      "properties": {
        "sku": {
          "description": "Stock keeping unit (SKU).  Uniquely identifies the product in the inventory system.",
          "type": "string"
        },
        "productCondition": {
          "description": "Describes the general condition of the variant.  For example new or refurbished.",
          "type": "string"
        },
        "memory": {
          "description": "Memory size of the sku.",
          "type": "string"
        },
        "color": {
          "description": "Official name of the variant color as marketed by the manufacturer.",
          "type": "string"
        },
        "searchableColor": {
          "description": "Common color names of the variant, for searching.",
          "type": "string"
        },
        "msrp": {
          "description": "Manufacturer suggested retail price.   Provided by the device manufacturer.",
          "type": "number",
          "format": "double"
        },
        "name": {
          "description": "Name of the offer variant.",
          "type": "string"
        },
        "preOrderAvailableTime": {
          "description": "The time when the offer variant is available for pre orders.",
          "type": "string",
          "format": "date-time"
        },
        "comingSoonDate": {
          "description": "The date when T-Mobile will begin accepting requests to notify customers of the availability of the offer variant.",
          "type": "string",
          "format": "date"
        },
        "variantOfferStatus": {
          "description": "Status of the variant in the sales catalog.  Example ForSale, Grandfathered, Retired.",
          "type": "string"
        },
        "inventoryStatus": {
          "description": "Status of the variant in inventory.  Example, in stock, backordered.",
          "type": "string"
        },
        "variantDisplayOrder": {
          "description": "The order that the variant is displayed, relative to other variants of the same offer.",
          "type": "integer",
          "format": "int32"
        },
        "saleStartTime": {
          "description": "The time when the offer variant goes on sale.",
          "type": "string",
          "format": "date-time"
        },
        "saleEndTime": {
          "description": "The time when the offer variant is no longer for sale.",
          "type": "string",
          "format": "date-time"
        },
        "offerVariantId": {
          "description": "Uniquely identifies a offer variant in the sales catalog.",
          "type": "string"
        },
        "defaultDownPayment": {
          "description": "Default down payment amount",
          "type": "number",
          "format": "double"
        },
        "prices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersPrices_1"
          }
        },
        "financeEligibleIndicator": {
          "description": "If true, the variant can be financed.",
          "type": "boolean"
        },
        "canBeReturnedIndicator": {
          "description": "Indicates if it can be returned or not",
          "type": "boolean"
        }
      }
    },
    "BillingAddress": {
      "type": "object",
      "properties": {
        "addressId": {
          "description": "Identifier of address.",
          "type": "string"
        },
        "purposes": {
          "description": "The purpose or usage context for which the address should be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addressLine1": {
          "description": "The first line of the address, required.",
          "type": "string"
        },
        "addressLine2": {
          "description": "The second line of the address, optional.",
          "type": "string"
        },
        "addressLine3": {
          "description": "The third line of the address, optional.",
          "type": "string"
        },
        "cityName": {
          "description": "The name of the city in the mailing address. For military or diplomatic addresses should contain FPO, APO, or DPO.",
          "type": "string"
        },
        "stateCode": {
          "description": "The two letter state code.",
          "type": "string"
        },
        "zip": {
          "description": "The 5 digit zip or postal delivery code.",
          "type": "string"
        },
        "zipExt": {
          "description": "The zip or postal delivery extension.",
          "type": "string"
        },
        "countryCode": {
          "description": "Country code",
          "type": "string"
        },
        "geoCode": {
          "description": "A unique code that represents a geospatial coordinate measurement of an exact geographic location and time at, below, or above the surface of the earth",
          "type": "string"
        },
        "addressFormatType": {
          "type": "string"
        },
        "default": {
          "description": "Flags the address to be used for default communications.",
          "type": "string"
        },
        "validationStatus": {
          "description": "Specifies whether the address is VALIDATED, NONVALIDATED, or UNDELIVERABLE.",
          "type": "string"
        },
        "overwritten": {
          "description": "Flags whether the provided address has been overwritten by the system.",
          "type": "boolean"
        },
        "classification": {
          "description": "Classification of the address",
          "type": "string"
        },
        "label": {
          "description": "Address label",
          "type": "string"
        },
        "addressLine4": {
          "description": "The fourth free form line, expressed as text, of an address",
          "type": "string"
        },
        "stateName": {
          "description": "Name of the state",
          "type": "string"
        },
        "provinceName": {
          "description": "Name of the province",
          "type": "string"
        },
        "provinceCode": {
          "description": "Province code",
          "type": "string"
        },
        "countyName": {
          "description": "Name of the county",
          "type": "string"
        },
        "countyCode": {
          "description": "County code",
          "type": "string"
        },
        "attention": {
          "description": "Attention of the address",
          "type": "string"
        },
        "careOf": {
          "description": "The name, expressed as text, of a person or organization at this address to whom incoming mail is marked with words such as care of or C/O",
          "type": "string"
        },
        "postalCode": {
          "description": "A code specifying the postal code of the address",
          "type": "string"
        },
        "uncertaintyIndicator": {
          "description": "To indicate if the address is uncertain or not",
          "type": "boolean"
        },
        "geographicCoordinate": {
          "description": "The latitude and longitude of the geographic location that corresponds to the address.",
          "type": "object",
          "$ref": "#/definitions/GeographicCoordinate"
        },
        "urbanization": {
          "description": "Urbanization name or code",
          "type": "string"
        }
      }
    },
    "Bills": {
      "type": "object",
      "properties": {
        "billCycleStartDate": {
          "description": "Start date of the bill cycle.",
          "type": "string",
          "format": "date"
        },
        "billCycleEndDate": {
          "description": "End date of the bill cycle.",
          "type": "string",
          "format": "date"
        },
        "amountDue": {
          "description": "Amount due in the given bill cycle.",
          "type": "number",
          "format": "double"
        },
        "dueDate": {
          "description": "Due date",
          "type": "string",
          "format": "date"
        },
        "nextCycleDate": {
          "description": "Next bill cycle date",
          "type": "string",
          "format": "date"
        },
        "language": {
          "description": "Language used",
          "type": "string"
        },
        "billCycleDay": {
          "description": "Day of the month when bill cycle normally runs.",
          "type": "integer",
          "format": "int32"
        },
        "paymentDueDay": {
          "description": "Day of month on which the payment is due.",
          "type": "integer",
          "format": "int32"
        },
        "monthlyRecurringCharge": {
          "description": "Monthly recurring charge, sometimes refer to MCR",
          "type": "number",
          "format": "double"
        },
        "autopayEnabled": {
          "description": "To indicate if the automatica payment is enabled",
          "type": "string"
        },
        "nextScheduledAutopay": {
          "description": "Next automatic payment date as scheduled",
          "type": "string",
          "format": "date"
        },
        "billCycleMonth": {
          "description": "Month of bill cycle.",
          "type": "integer",
          "format": "int32"
        },
        "billCycleYear": {
          "description": "Year of bill cycle.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Blacklist": {
      "type": "object",
      "properties": {
        "statusCode": {
          "description": "Status code",
          "type": "string"
        },
        "subStatusCode": {
          "description": "Sub Status Code",
          "type": "string"
        },
        "reasonCode": {
          "description": "Status reason code",
          "type": "string"
        },
        "reasonDescription": {
          "description": "Status reason description",
          "type": "string"
        }
      }
    },
    "BucketEffectiveDate": {
      "type": "object",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "Buckets": {
      "type": "object",
      "properties": {
        "bucketId": {
          "description": "Identifier of the bucket",
          "type": "string"
        },
        "bucketType": {
          "description": "Type of bucket, such as data, text, voice",
          "type": "string"
        },
        "bucketDescription": {
          "description": "Description of the bucket",
          "type": "string"
        },
        "limitAmount": {
          "description": "The limited amount which can be different from allocated amount.",
          "type": "number",
          "format": "double"
        },
        "unlimitedIndicator": {
          "description": "To indicate if the amount is unlimited",
          "type": "boolean"
        },
        "effectiveDate": {
          "description": "Effective date",
          "type": "object",
          "$ref": "#/definitions/EffectiveDate"
        },
        "usedAmount": {
          "description": "Amount of quantity used in this transaction.",
          "type": "number",
          "format": "double"
        },
        "remainingAmount": {
          "description": "Amount remaining",
          "type": "number",
          "format": "double"
        },
        "allocatedAmount": {
          "description": "The amount available during the period for the bucket",
          "type": "number",
          "format": "double"
        },
        "measurementUnit": {
          "description": "Measurement unit used",
          "type": "string"
        },
        "name": {
          "description": "Name of the bucket",
          "type": "string"
        },
        "lastActivityDate": {
          "description": "Last activity date",
          "type": "string",
          "format": "date"
        },
        "daysUntilExpiration": {
          "description": "Number of days until expiration",
          "type": "integer",
          "format": "int32"
        },
        "statusCode": {
          "description": "Status code",
          "type": "string"
        },
        "subStatusCode": {
          "description": "Sub Status Code",
          "type": "string"
        },
        "reasonCode": {
          "description": "Status reason code",
          "type": "string"
        },
        "reasonDescription": {
          "description": "Status reason description",
          "type": "string"
        },
        "specifications": {
          "description": "Named value pairs",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersSpecifications_10"
          }
        }
      }
    },
    "BucketSpecifications": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "CardHolderAddress": {
      "type": "object",
      "properties": {
        "addressId": {
          "description": "Identifier of address.",
          "type": "string"
        },
        "purposes": {
          "description": "The purpose or usage context for which the address should be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addressLine1": {
          "description": "The first line of the address, required.",
          "type": "string"
        },
        "addressLine2": {
          "description": "The second line of the address, optional.",
          "type": "string"
        },
        "addressLine3": {
          "description": "The third line of the address, optional.",
          "type": "string"
        },
        "cityName": {
          "description": "The name of the city in the mailing address. For military or diplomatic addresses should contain FPO, APO, or DPO.",
          "type": "string"
        },
        "stateCode": {
          "description": "The two letter state code.",
          "type": "string"
        },
        "zip": {
          "description": "The 5 digit zip or postal delivery code.",
          "type": "string"
        },
        "zipExt": {
          "description": "The zip or postal delivery extension.",
          "type": "string"
        },
        "countryCode": {
          "description": "Country code",
          "type": "string"
        },
        "geoCode": {
          "description": "A unique code that represents a geospatial coordinate measurement of an exact geographic location and time at, below, or above the surface of the earth",
          "type": "string"
        },
        "addressFormatType": {
          "type": "string"
        },
        "default": {
          "description": "Flags the address to be used for default communications.",
          "type": "string"
        },
        "validationStatus": {
          "description": "Specifies whether the address is VALIDATED, NONVALIDATED, or UNDELIVERABLE.",
          "type": "string"
        },
        "overwritten": {
          "description": "Flags whether the provided address has been overwritten by the system.",
          "type": "boolean"
        }
      }
    },
    "CardImage": {
      "type": "object",
      "properties": {
        "attachmentReferenceId": {
          "description": "Uniquely identifies the attachment record in the context of the cart or other parent object.",
          "type": "string"
        },
        "mimeType": {
          "description": "Mime type of the encoded document.  Mime type construction will conform to RFC 2045, and will use accepted mime types per the IANA mime type  listings.  Specific supported document types at the time of this writing are: application/pdf, image/png, text/plain, text/x-url, text/html, text/xml, image/jpeg.",
          "type": "string"
        },
        "description": {
          "description": "Description of the attachment",
          "type": "string"
        },
        "embeddedData": {
          "description": "Element holding data embedded directly in the BOD instance.",
          "type": "string"
        }
      }
    },
    "CartAccountLines": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "$ref": "#/definitions/MetaDataFragment"
        },
        "universalLineId": {
          "description": "ULID - Universal identifier of the LineofService, as defined in Customer Hub.",
          "type": "string"
        },
        "lineId": {
          "description": "Uniquely identifies a  line of service.",
          "type": "string"
        },
        "phoneNumber": {
          "description": "The phone number (MSISDN) associated with the line of service.",
          "type": "string"
        }
      }
    },
    "CartItemBodyPromotions": {
      "type": "object",
      "properties": {
        "actionCode": {
          "type": "string"
        },
        "promotionId": {
          "description": "The unique id of the promotion.",
          "type": "string"
        },
        "shortDescription": {
          "description": "Short description",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "promotionEffectivePeriod": {
          "description": "The time period where the Promotion is effective.",
          "type": "object",
          "$ref": "#/definitions/PromotionEffectivePeriod"
        },
        "customerSpecificDetails": {
          "description": "Named value pairs specific to the customer",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerSpecificDetails"
          }
        }
      }
    },
    "CartItemBodyShippingAddress": {
      "type": "object",
      "properties": {
        "addressId": {
          "description": "Identifier of address.",
          "type": "string"
        },
        "purposes": {
          "description": "The purpose or usage context for which the address should be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addressLine1": {
          "description": "The first line of the address, required.",
          "type": "string"
        },
        "addressLine2": {
          "description": "The second line of the address, optional.",
          "type": "string"
        },
        "addressLine3": {
          "description": "The third line of the address, optional.",
          "type": "string"
        },
        "cityName": {
          "description": "The name of the city in the mailing address. For military or diplomatic addresses should contain FPO, APO, or DPO.",
          "type": "string"
        },
        "stateCode": {
          "description": "The two letter state code.",
          "type": "string"
        },
        "zip": {
          "description": "The 5 digit zip or postal delivery code.",
          "type": "string"
        },
        "zipExt": {
          "description": "The zip or postal delivery extension.",
          "type": "string"
        },
        "countryCode": {
          "description": "Country code",
          "type": "string"
        },
        "geoCode": {
          "description": "A unique code that represents a geospatial coordinate measurement of an exact geographic location and time at, below, or above the surface of the earth",
          "type": "string"
        },
        "addressFormatType": {
          "type": "string"
        },
        "default": {
          "description": "Flags the address to be used for default communications.",
          "type": "string"
        },
        "validationStatus": {
          "description": "Specifies whether the address is VALIDATED, NONVALIDATED, or UNDELIVERABLE.",
          "type": "string"
        },
        "overwritten": {
          "description": "Flags whether the provided address has been overwritten by the system.",
          "type": "boolean"
        },
        "classification": {
          "description": "Classification of the address",
          "type": "string"
        },
        "label": {
          "description": "Address label",
          "type": "string"
        },
        "addressLine4": {
          "description": "The fourth free form line, expressed as text, of an address",
          "type": "string"
        },
        "stateName": {
          "description": "Name of the state",
          "type": "string"
        },
        "provinceName": {
          "description": "Name of the province",
          "type": "string"
        },
        "provinceCode": {
          "description": "Province code",
          "type": "string"
        },
        "countyName": {
          "description": "Name of the county",
          "type": "string"
        },
        "countyCode": {
          "description": "County code",
          "type": "string"
        },
        "attention": {
          "description": "Attention of the address",
          "type": "string"
        },
        "careOf": {
          "description": "The name, expressed as text, of a person or organization at this address to whom incoming mail is marked with words such as care of or C/O",
          "type": "string"
        },
        "postalCode": {
          "description": "A code specifying the postal code of the address",
          "type": "string"
        },
        "uncertaintyIndicator": {
          "description": "To indicate if the address is uncertain or not",
          "type": "boolean"
        },
        "geographicCoordinate": {
          "description": "The latitude and longitude of the geographic location that corresponds to the address.",
          "type": "object",
          "$ref": "#/definitions/GeographicCoordinate"
        },
        "urbanization": {
          "description": "Urbanization name or code",
          "type": "string"
        }
      }
    },
    "ChargesOneTimeCharges": {
      "type": "object",
      "properties": {
        "type": {
          "description": "Charge or tax type",
          "type": "string"
        },
        "amount": {
          "description": "Amount charged.",
          "type": "number",
          "format": "double"
        },
        "description": {
          "description": "Description of the charge",
          "type": "string"
        },
        "code": {
          "description": "Charge code",
          "type": "string"
        }
      }
    },
    "ChargesOneTimeCredits": {
      "type": "object",
      "properties": {
        "creditId": {
          "description": "Identifier of the credit",
          "type": "string"
        },
        "type": {
          "description": "Charge or tax type",
          "type": "string"
        },
        "amount": {
          "description": "Amount charged.",
          "type": "number",
          "format": "double"
        },
        "description": {
          "description": "Description of the charge",
          "type": "string"
        },
        "code": {
          "description": "Charge code",
          "type": "string"
        },
        "adjustmentReason": {
          "description": "Reason for adjustment",
          "type": "string"
        }
      }
    },
    "ChargesRecurringCharges": {
      "type": "object",
      "properties": {
        "type": {
          "description": "Charge or tax type",
          "type": "string"
        },
        "amount": {
          "description": "Amount charged.",
          "type": "number",
          "format": "double"
        },
        "description": {
          "description": "Description of the charge",
          "type": "string"
        },
        "code": {
          "description": "Charge code",
          "type": "string"
        }
      }
    },
    "CompatibleOffers": {
      "type": "object",
      "properties": {
        "relationshipType": {
          "description": "The type of relationship between the two offers.",
          "type": "string"
        },
        "link": {
          "description": "A link to the offer that is related to this one.",
          "type": "string"
        },
        "relatedOfferId": {
          "description": "The id of the offer that is related to this one.",
          "type": "string"
        },
        "relatedOfferName": {
          "description": "The name of the offer that is related to this one.",
          "type": "string"
        },
        "displayPriority": {
          "description": "Display priority or sequence",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ConflictingPromotions": {
      "type": "object",
      "properties": {
        "promotionId": {
          "description": "The unique id of the promotion.",
          "type": "string"
        },
        "shortDescription": {
          "description": "Short description",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "promotionEffectivePeriod": {
          "description": "The time period where the Promotion is effective.",
          "type": "object",
          "$ref": "#/definitions/PromotionEffectivePeriod"
        }
      }
    },
    "ConflictItemReferenceSpecifications": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "ConflictOffers": {
      "type": "object",
      "properties": {
        "relationshipType": {
          "description": "The type of relationship between the two offers.",
          "type": "string"
        },
        "link": {
          "description": "A link to the offer that is related to this one.",
          "type": "string"
        },
        "relatedOfferId": {
          "description": "The id of the offer that is related to this one.",
          "type": "string"
        },
        "relatedOfferName": {
          "description": "The name of the offer that is related to this one.",
          "type": "string"
        },
        "displayPriority": {
          "description": "Display priority or sequence",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Contact": {
      "type": "object",
      "properties": {
        "securityProfileId": {
          "description": "Unique identifier of the security profile.",
          "type": "string"
        },
        "primaryPhoneNumber": {
          "description": "Primary mobile phone number used by the customer and used to identify the customer.",
          "type": "string"
        },
        "primaryEmailAddress": {
          "type": "string"
        },
        "fullName": {
          "description": "The full name of the person, including first, middle, and family names.",
          "type": "string"
        },
        "firstName": {
          "description": "The given name or first name of the person",
          "type": "string"
        },
        "middleName": {
          "description": "The middle name or middle initial of the person.",
          "type": "string"
        },
        "familyName": {
          "description": "The family name or surname or last name of the person.",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        },
        "suffix": {
          "type": "string"
        },
        "ssn": {
          "description": "Social Security Number of the person. When used in a request, it must only be sent by secure transport.",
          "type": "string"
        },
        "ssnMasking": {
          "description": "Specifies what portion of the SSN has been provided.",
          "type": "string"
        },
        "birthDate": {
          "description": "Date of birth of the person.",
          "type": "string",
          "format": "date"
        },
        "pin": {
          "description": "Personal Identification Number",
          "type": "string"
        },
        "password": {
          "description": "Password for logging into a software system.",
          "type": "string"
        },
        "taxId": {
          "description": "Tax identification or FEIN (Federal Employer Identification Number).",
          "type": "string"
        },
        "optOut": {
          "description": "Indicates the privacy option for this communication channel. If opted out, this communication cannot be used for telemarketing calls, mails, emails...etc.",
          "type": "string"
        },
        "optOutReason": {
          "type": "string"
        },
        "optOutType": {
          "description": "Indicates the type of marketing activity that the customer has opted in/out from. If no value is provided, it is assumed that the customer has opted in/out from all activity through this communication channel.",
          "type": "string"
        },
        "addressCommunications": {
          "description": "Addresses for residence or business, to be used for deliveries or postal mail.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AddressCommunications"
          }
        },
        "phoneNumbers": {
          "description": "Phone numbers for voice, fax or text communication with the person.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PhoneNumbers"
          }
        },
        "emailCommunications": {
          "description": "Email addresses of the person.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmailCommunications"
          }
        },
        "e911AcknowledgementIndicator": {
          "description": "To indicate if customer accepts the E911 service consent.",
          "type": "boolean"
        }
      }
    },
    "ContactAddress": {
      "type": "object",
      "properties": {
        "addressId": {
          "description": "Identifier of address.",
          "type": "string"
        },
        "purposes": {
          "description": "The purpose or usage context for which the address should be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addressLine1": {
          "description": "The first line of the address, required.",
          "type": "string"
        },
        "addressLine2": {
          "description": "The second line of the address, optional.",
          "type": "string"
        },
        "addressLine3": {
          "description": "The third line of the address, optional.",
          "type": "string"
        },
        "cityName": {
          "description": "The name of the city in the mailing address. For military or diplomatic addresses should contain FPO, APO, or DPO.",
          "type": "string"
        },
        "stateCode": {
          "description": "The two letter state code.",
          "type": "string"
        },
        "zip": {
          "description": "The 5 digit zip or postal delivery code.",
          "type": "string"
        },
        "zipExt": {
          "description": "The zip or postal delivery extension.",
          "type": "string"
        },
        "countryCode": {
          "description": "Country code",
          "type": "string"
        },
        "geoCode": {
          "description": "A unique code that represents a geospatial coordinate measurement of an exact geographic location and time at, below, or above the surface of the earth",
          "type": "string"
        },
        "addressFormatType": {
          "type": "string"
        },
        "default": {
          "description": "Flags the address to be used for default communications.",
          "type": "string"
        },
        "validationStatus": {
          "description": "Specifies whether the address is VALIDATED, NONVALIDATED, or UNDELIVERABLE.",
          "type": "string"
        },
        "overwritten": {
          "description": "Flags whether the provided address has been overwritten by the system.",
          "type": "boolean"
        },
        "classification": {
          "description": "Classification of the address",
          "type": "string"
        },
        "label": {
          "description": "Address label",
          "type": "string"
        },
        "addressLine4": {
          "description": "The fourth free form line, expressed as text, of an address",
          "type": "string"
        },
        "stateName": {
          "description": "Name of the state",
          "type": "string"
        },
        "provinceName": {
          "description": "Name of the province",
          "type": "string"
        },
        "provinceCode": {
          "description": "Province code",
          "type": "string"
        },
        "countyName": {
          "description": "Name of the county",
          "type": "string"
        },
        "countyCode": {
          "description": "County code",
          "type": "string"
        },
        "attention": {
          "description": "Attention of the address",
          "type": "string"
        },
        "careOf": {
          "description": "The name, expressed as text, of a person or organization at this address to whom incoming mail is marked with words such as care of or C/O",
          "type": "string"
        },
        "postalCode": {
          "description": "A code specifying the postal code of the address",
          "type": "string"
        },
        "uncertaintyIndicator": {
          "description": "To indicate if the address is uncertain or not",
          "type": "boolean"
        },
        "geographicCoordinate": {
          "description": "The latitude and longitude of the geographic location that corresponds to the address.",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersGeographicCoordinate_3"
        },
        "urbanization": {
          "description": "Urbanization name or code",
          "type": "string"
        }
      }
    },
    "CreditCard": {
      "type": "object",
      "properties": {
        "last4CardNumber": {
          "description": "Last four digits of the card used for payment",
          "type": "string"
        },
        "cardNumber": {
          "description": "Payment card number",
          "type": "string"
        },
        "typeCode": {
          "description": "Type of payment Card. Examples are Visa, MasterCard, Debit etc",
          "type": "string"
        },
        "cardHolderName": {
          "description": "Name of the Card Holder",
          "type": "string"
        },
        "cardHolderFirstName": {
          "description": "First name of the card holder",
          "type": "string"
        },
        "cardHolderLastName": {
          "description": "Last name of the card holder",
          "type": "string"
        },
        "companyName": {
          "description": "Business Name identified for the card if applicable",
          "type": "string"
        },
        "expirationMonthYear": {
          "description": "Expiration month and year of the card",
          "type": "string"
        },
        "cardHolderAddress": {
          "type": "object",
          "$ref": "#/definitions/CardHolderAddress"
        },
        "cardImage": {
          "description": "Image of the card",
          "type": "object",
          "$ref": "#/definitions/CardImage"
        },
        "cvv": {
          "description": "Card Verification Value",
          "type": "string"
        },
        "maskingType": {
          "description": "The type of masking to be applied to the credit card number for security and privacy.",
          "type": "string"
        },
        "paymentCardAlias": {
          "description": "A nickname assigned by the customer as an alternative way to identify a stored payment card.",
          "type": "string"
        },
        "expirationTime": {
          "description": "The time when the card is expired to use.",
          "type": "string",
          "format": "date-time"
        },
        "securityCode": {
          "description": "Security code of the credit card",
          "type": "string"
        }
      }
    },
    "CreditReservations": {
      "type": "object",
      "properties": {
        "creditReservationId": {
          "description": "Identifier of credit reservation which may be loan, lease or poip.",
          "type": "string"
        },
        "financingProgramType": {
          "description": "Type of financing program, such as loan, lease.",
          "type": "string"
        },
        "balanceAmount": {
          "description": "The amount of loan/lease balance, or reserved amount for the proposed loan/lease.",
          "type": "number",
          "format": "double"
        },
        "statusCode": {
          "description": "Status code",
          "type": "string"
        },
        "subStatusCode": {
          "description": "Sub Status Code",
          "type": "string"
        },
        "reasonCode": {
          "description": "Status reason code",
          "type": "string"
        },
        "reasonDescription": {
          "description": "Status reason description",
          "type": "string"
        },
        "residualAmount": {
          "description": "Residual (pay out) amount, applicable for lease only.",
          "type": "number",
          "format": "double"
        },
        "productType": {
          "description": "The category of product for the financing program, Device or Accessory.",
          "type": "string"
        }
      }
    },
    "CustomerProfile": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "$ref": "#/definitions/MetaDataFragment"
        },
        "customerId": {
          "description": "Uniquely identifies a customer.",
          "type": "string"
        },
        "preferredLanguage": {
          "description": "Customers preferred language",
          "type": "string"
        },
        "shoppingProfileId": {
          "description": "Uniquely identifies a shopping profile.",
          "type": "string"
        },
        "securityProfileId": {
          "description": "Unique identifier of the security profile.",
          "type": "string"
        },
        "primaryPhoneNumber": {
          "description": "Primary mobile phone number used by the customer and used to identify the customer.",
          "type": "string"
        },
        "primaryEmailAddress": {
          "type": "string"
        },
        "fullName": {
          "description": "The full name of the person, including first, middle, and family names.",
          "type": "string"
        },
        "firstName": {
          "description": "The given name or first name of the person",
          "type": "string"
        },
        "middleName": {
          "description": "The middle name or middle initial of the person.",
          "type": "string"
        },
        "familyName": {
          "description": "The family name or surname or last name of the person.",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        },
        "suffix": {
          "type": "string"
        },
        "ssn": {
          "description": "Social Security Number of the person. When used in a request, it must only be sent by secure transport.",
          "type": "string"
        },
        "ssnMasking": {
          "description": "Specifies what portion of the SSN has been provided.",
          "type": "string"
        },
        "birthDate": {
          "description": "Date of birth of the person.",
          "type": "string",
          "format": "date"
        },
        "pin": {
          "description": "Personal Identification Number",
          "type": "string"
        },
        "password": {
          "description": "Password for logging into a software system.",
          "type": "string"
        },
        "taxId": {
          "description": "Tax identification or FEIN (Federal Employer Identification Number).",
          "type": "string"
        },
        "optOut": {
          "description": "Indicates the privacy option for this communication channel. If opted out, this communication cannot be used for telemarketing calls, mails, emails...etc.",
          "type": "string"
        },
        "optOutReason": {
          "type": "string"
        },
        "optOutType": {
          "description": "Indicates the type of marketing activity that the customer has opted in/out from. If no value is provided, it is assumed that the customer has opted in/out from all activity through this communication channel.",
          "type": "string"
        },
        "addressCommunications": {
          "description": "Addresses for residence or business, to be used for deliveries or postal mail.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PersonProfileAddressCommunications"
          }
        },
        "phoneNumbers": {
          "description": "Phone numbers for voice, fax or text communication with the person.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PersonProfilePhoneNumbers"
          }
        },
        "emailCommunications": {
          "description": "Email addresses of the person.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PersonProfileEmailCommunications"
          }
        },
        "e911AcknowledgementIndicator": {
          "description": "To indicate if customer accepts the E911 service consent.",
          "type": "boolean"
        },
        "customerGroup": {
          "description": "The following customer groups are being considered for customer segmentation: Consumer, Business, Special/Other, Government.",
          "type": "string"
        },
        "corporateAffiliationProgram": {
          "description": "Name of the corporate affiliation program",
          "type": "string"
        },
        "corporateDiscountProgram": {
          "description": "Name of corporate discount program",
          "type": "string"
        },
        "businessGovernmentAgreement": {
          "description": "Name of business government agreement",
          "type": "string"
        },
        "specialTreatment": {
          "description": "Special treatment",
          "type": "string"
        },
        "negotiatedPaymentTerm": {
          "description": "Negotiated payment term",
          "type": "string"
        },
        "isStrategic": {
          "description": "To indicate if the customer is a strategic target",
          "type": "boolean"
        },
        "isTest": {
          "type": "boolean"
        },
        "idVerification": {
          "description": "Identification verification",
          "type": "string"
        },
        "sizeOfCompany": {
          "description": "Size of the company",
          "type": "string"
        },
        "industryType": {
          "description": "Industry type of the customer",
          "type": "string"
        },
        "assistanceProgram": {
          "description": "Name of the assistance program",
          "type": "string"
        },
        "employeeDealerProgram": {
          "description": "Name of employee dealer program",
          "type": "string"
        },
        "reseller": {
          "description": "Reseller of the customer",
          "type": "string"
        },
        "uniqueProgram": {
          "description": "Name of the unique program",
          "type": "string"
        },
        "contractType": {
          "description": "Contract type",
          "type": "string"
        },
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerProfileAccounts"
          }
        },
        "creditLimitAmount": {
          "description": "The total amount that the customer is allowed to spend on purchases.",
          "type": "number",
          "format": "double"
        },
        "creditScore": {
          "description": "Indicates the credit score of the customer. Primary credit score used in credit decision for population in regulatory notices.",
          "type": "integer",
          "format": "int32"
        },
        "creditStatus": {
          "description": "Status of the customers credit application",
          "type": "string"
        },
        "creditApplicationReference": {
          "description": "Reference number for cross reference to credit decisioning system.",
          "type": "string"
        },
        "creditCheckConsentIndicator": {
          "description": "Indicates that the Customer actively consented to having a credit check performed.",
          "type": "string"
        },
        "classificationCode": {
          "description": "Credit class.",
          "type": "string"
        },
        "creditRiskProfileId": {
          "description": "Unique identifier generated from risk system which is derived from multple business inputs -creditscore, tenure and payment history etc.",
          "type": "string"
        },
        "decisionCriteria": {
          "description": "Decision criteria on determining customers credit",
          "type": "string"
        },
        "identificationDocuments": {
          "description": "List of identification document",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdentificationDocuments"
          }
        }
      }
    },
    "CustomerProfileAccounts": {
      "type": "object",
      "properties": {
        "accountNumber": {
          "description": "The financial account number that identifies the account.",
          "type": "string"
        },
        "status": {
          "description": "The current status of the account.",
          "type": "string"
        },
        "statusChangeDate": {
          "description": "Account status change date",
          "type": "string",
          "format": "date"
        },
        "billingType": {
          "description": "A shorthand identifying name for the type of billing settlement: Prepaid, Postpaid.",
          "type": "string"
        },
        "lastUpdateTime": {
          "description": "Last date and time when the account was modified.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "CustomerRoles": {
      "type": "object",
      "properties": {
        "accountNumber": {
          "description": "Customer account number",
          "type": "string"
        },
        "phoneNumber": {
          "description": "The phone number that identifies the line of service for which the customer plays a role",
          "type": "string"
        },
        "lineId": {
          "description": "Line Identification",
          "type": "string"
        },
        "roleType": {
          "description": "Type of role",
          "type": "string"
        }
      }
    },
    "CustomerSpecificDetails": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "DebitCard": {
      "type": "object",
      "properties": {
        "last4CardNumber": {
          "description": "Last four digits of the card used for payment",
          "type": "string"
        },
        "cardNumber": {
          "description": "Payment card number",
          "type": "string"
        },
        "typeCode": {
          "description": "Type of payment Card. Examples are Visa, MasterCard, Debit etc",
          "type": "string"
        },
        "cardHolderName": {
          "description": "Name of the Card Holder",
          "type": "string"
        },
        "cardHolderFirstName": {
          "description": "First name of the card holder",
          "type": "string"
        },
        "cardHolderLastName": {
          "description": "Last name of the card holder",
          "type": "string"
        },
        "companyName": {
          "description": "Business Name identified for the card if applicable",
          "type": "string"
        },
        "expirationMonthYear": {
          "description": "Expiration month and year of the card",
          "type": "string"
        },
        "cardHolderAddress": {
          "type": "object",
          "$ref": "#/definitions/BatchOrdersCardHolderAddress"
        },
        "cardImage": {
          "description": "Image of the card",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersCardImage"
        },
        "cvv": {
          "description": "Card Verification Value",
          "type": "string"
        },
        "maskingType": {
          "description": "The type of masking to be applied to the credit card number for security and privacy.",
          "type": "string"
        },
        "paymentCardAlias": {
          "description": "A nickname assigned by the customer as an alternative way to identify a stored payment card.",
          "type": "string"
        },
        "expirationTime": {
          "description": "The time when the card is expired to use.",
          "type": "string",
          "format": "date-time"
        },
        "PIN": {
          "description": "PIN code of the card",
          "type": "string"
        }
      }
    },
    "DeviceCollection": {
      "type": "object",
      "properties": {
        "devices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceCollectionDevices"
          }
        }
      }
    },
    "DeviceCollectionDevices": {
      "type": "object",
      "properties": {
        "deviceId": {
          "description": "Uniquely identifies a device",
          "type": "string"
        },
        "imei": {
          "description": "International Mobile Equipment Identifier.  Unique identifier for a mobile device on a network.",
          "type": "string"
        },
        "serialNumber": {
          "description": "Serial number of the equipment (device or accessory).",
          "type": "string"
        },
        "deviceStatus": {
          "description": "Status of the device.",
          "type": "string"
        },
        "blacklist": {
          "type": "object",
          "$ref": "#/definitions/DeviceIdentifierBlacklist"
        },
        "sku": {
          "description": "The sku of the device offer variant.  Only relevant if the customer purchased the device from T-Mobile.",
          "type": "string"
        },
        "offerId": {
          "description": "Uniquely identifies a product offering in the sales catalog.",
          "type": "string"
        },
        "offerType": {
          "description": "Primary categorization of Product Offering.",
          "type": "string"
        },
        "offerSubType": {
          "description": "Secondary categorization of Product Offering.",
          "type": "string"
        },
        "productType": {
          "description": "The category of product included in the offer: Plan, Service, Device, Accessory, or Financial.",
          "type": "string"
        },
        "productSubTypes": {
          "description": "Secondary categorizations of the type of product included in the offer.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "offeringStatus": {
          "description": "Status of the product offering in the sales catalog.",
          "type": "string"
        },
        "offeringStatusPeriod": {
          "description": "The time period where the offeringStatus is valid.",
          "type": "object",
          "$ref": "#/definitions/OfferingStatusPeriod"
        },
        "businessUnit": {
          "description": "The different T-Mobile business units require complete separation of assets. Separate companies that comprise TMUS corporation.  The system restricts a Customer to one Business Unit.  In other words, a Customer in one Business Unit is not visible in any of the other  Business Units of the corporation. For example, a Metro PCS customers billing address cannot be looked up by a Magenta representative.  There is no capability to override this in the system.",
          "type": "string"
        },
        "billingMethod": {
          "description": "The Billing Method specifies the billing experience that the customer has qualified for and requested. A change of the billing method implies the need to create a new billing arrangement.",
          "type": "string"
        },
        "brand": {
          "description": "The business name under which a TMUS product is sold.  A Customer can have accounts in any Brand, within the same Business Unit. For example, a T-Mobile customer may also have a branded account with a national retailer.",
          "type": "string"
        },
        "unitPrice": {
          "description": "Full list price per unit as set by T-Mobile",
          "type": "number",
          "format": "double"
        },
        "offerCategory": {
          "description": "Top-level display categorization for product offers.",
          "type": "string"
        },
        "offerSubCategory1": {
          "description": "Second-level display categorization for product offers.",
          "type": "string"
        },
        "offerSubCategory2": {
          "description": "Third-level display categorization for product offers.",
          "type": "string"
        },
        "offerName": {
          "description": "The commonly used name of the Offer, as defined in the Product Catalog.",
          "type": "string"
        },
        "offerDescription": {
          "description": "The description of the offer, as defined in the product catalog.",
          "type": "string"
        },
        "offerShortDescription": {
          "description": "The brief description of the offer, as defined in the product catalog.",
          "type": "string"
        },
        "offerLongDescription": {
          "description": "The verbose description of the offer, as defined in the product catalog.",
          "type": "string"
        },
        "displayOrder": {
          "description": "The sequence in which the offer is displayed.",
          "type": "integer",
          "format": "int32"
        },
        "billingTypes": {
          "description": "The type of billing account this offer is available to.  Could be prepaid and/or postpaid.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "legalDisclosure": {
          "description": "Disclaimers or any other textual information that must be displayed to customers for legal reasons.",
          "type": "string"
        },
        "specifications": {
          "description": "Named value pairs",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OfferSummaryCommonSpecifications"
          }
        },
        "productId": {
          "description": "Uniquely identifies a known product.",
          "type": "string"
        },
        "productName": {
          "description": "The common name of the product, as defined in the product catalog.",
          "type": "string"
        },
        "productKeywords": {
          "description": "Words used in searches for the product.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "description": "Description of the product",
          "type": "string"
        },
        "shortDescription": {
          "description": "Short description of the product",
          "type": "string"
        },
        "longDescription": {
          "description": "Long description of the product",
          "type": "string"
        },
        "serviceProvider": {
          "description": "Service provider for the device",
          "type": "string"
        },
        "manufacturer": {
          "description": "Device manufacturer name",
          "type": "string"
        },
        "model": {
          "description": "Device model name",
          "type": "string"
        },
        "msrp": {
          "description": "The manufacturers suggest retail price of the device.",
          "type": "number",
          "format": "double"
        },
        "purchasePrice": {
          "description": "The price the customer is actually charged for the equipement offer.",
          "type": "number",
          "format": "double"
        },
        "warrantyStatus": {
          "description": "Status of the warranty on the device.",
          "type": "string"
        },
        "estimatedPurchaseDate": {
          "description": "Estimated purchase date of the device.",
          "type": "string",
          "format": "date"
        },
        "registrationDate": {
          "description": "Registration date of the device.",
          "type": "string",
          "format": "date"
        },
        "warrantyExpirationDate": {
          "description": "Expiration date of the warranty on the device.",
          "type": "string",
          "format": "date"
        },
        "premiumCoverageVendor": {
          "description": "Vendor of the premium warranty coverage acquired by the customer, if any.",
          "type": "string"
        },
        "extendedCoveragePeriod": {
          "type": "object",
          "$ref": "#/definitions/WarrantyExtendedCoveragePeriod"
        },
        "manufacturerWarrantyDay": {
          "description": "OEM warranty days",
          "type": "integer",
          "format": "int32"
        },
        "manufacturerCoveragePeriod": {
          "description": "Coverage period by manufacturer",
          "type": "object",
          "$ref": "#/definitions/WarrantyManufacturerCoveragePeriod"
        },
        "purchaseCountry": {
          "description": "Country where the device was purchased",
          "type": "string"
        },
        "daysRemaining": {
          "description": "Number of days the warranty is still in effect",
          "type": "integer",
          "format": "int32"
        },
        "maxTACReturnLimit": {
          "description": "Maximum number of time the TAC is allowed for return",
          "type": "integer",
          "format": "int32"
        },
        "numberOfTimesTACReturned": {
          "description": "Number of times the TAC has returned",
          "type": "integer",
          "format": "int32"
        },
        "accessoryWarrantyExpirationDate": {
          "description": "Warranty expiration date for adcessory associaed with the device",
          "type": "string",
          "format": "date-time"
        },
        "recurringCharge": {
          "description": "The recurring charge amount the customer is charged for this device.",
          "type": "number",
          "format": "double"
        },
        "oneTimeCharge": {
          "description": "The one time charge the customer is charged for this device.",
          "type": "number",
          "format": "double"
        },
        "imsi": {
          "description": "An International Mobile Subscriber Identifier of IMSI is a unique number associated with all GSM and UMTS network mobile phone users.  It is stored in the SIM card.",
          "type": "string"
        },
        "simNumber": {
          "description": "Identifying number of the SIM on the network.",
          "type": "string"
        },
        "csn": {
          "description": "Customer Service Number for Apple SIM.",
          "type": "string"
        },
        "statusCode": {
          "description": "Status code",
          "type": "string"
        },
        "subStatusCode": {
          "description": "Sub Status Code",
          "type": "string"
        },
        "reasonCode": {
          "description": "Status reason code",
          "type": "string"
        },
        "reasonDescription": {
          "description": "Status reason description",
          "type": "string"
        },
        "unlockStatus": {
          "description": "Unlock status of the device",
          "type": "string"
        },
        "images": {
          "description": "Images associated with the product offering.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceDetailImages"
          }
        },
        "deviceStartTime": {
          "description": "Date and time when the device was started for the customer.",
          "type": "string",
          "format": "date-time"
        },
        "numberOfDaysUsed": {
          "description": "Number of days the device is in use.",
          "type": "integer",
          "format": "int32"
        },
        "deviceEndTime": {
          "description": "Date and time when the device was ended for the customer.",
          "type": "string",
          "format": "date-time"
        },
        "msisdn": {
          "description": "Phone number",
          "type": "string"
        },
        "networkUsePeriod": {
          "description": "The first and last time when the device used the network.",
          "type": "object",
          "$ref": "#/definitions/DeviceDetailNetworkUsePeriod"
        },
        "networkUseDays": {
          "description": "Number of days the device has used newwork.",
          "type": "integer",
          "format": "int32"
        },
        "tmoMerchandiseIndicator": {
          "description": "Indicates whether the customer originally purchased the device from T-Mobile.",
          "type": "boolean"
        },
        "originalPurchaseShipmentMethod": {
          "description": "Original purchase shipment method for the device.  in-store vs shipped",
          "type": "string"
        },
        "personalUnblockingKey": {
          "description": "Customers personal unblocking key",
          "type": "string"
        },
        "acquisitionType": {
          "description": "To indicate how the device was acquired.",
          "type": "string"
        }
      }
    },
    "DeviceDetailImages": {
      "type": "object",
      "properties": {
        "imageId": {
          "description": "Unique identifier for the image PATH.  This name should be changed.",
          "type": "string"
        },
        "uri": {
          "description": "Universal resource identifier pointing to the image.",
          "type": "string"
        },
        "dimensions": {
          "description": "Dimensions of the image.",
          "type": "string"
        },
        "color": {
          "description": "Official name of the color of the equipment displayed in the image.",
          "type": "string"
        },
        "searchableColors": {
          "description": "Common color name for searching.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "displayPurposes": {
          "description": "Purpose for which the image should be used in displays.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DeviceDetailNetworkUsePeriod": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "DeviceIdentifierBlacklist": {
      "type": "object",
      "properties": {
        "statusCode": {
          "description": "Status code",
          "type": "string"
        },
        "subStatusCode": {
          "description": "Sub Status Code",
          "type": "string"
        },
        "reasonCode": {
          "description": "Status reason code",
          "type": "string"
        },
        "reasonDescription": {
          "description": "Status reason description",
          "type": "string"
        }
      }
    },
    "Devices": {
      "type": "object",
      "properties": {
        "deviceId": {
          "description": "Uniquely identifies a device",
          "type": "string"
        },
        "imei": {
          "description": "International Mobile Equipment Identifier.  Unique identifier for a mobile device on a network.",
          "type": "string"
        },
        "serialNumber": {
          "description": "Serial number of the equipment (device or accessory).",
          "type": "string"
        },
        "deviceStatus": {
          "description": "Status of the device.",
          "type": "string"
        },
        "blacklist": {
          "type": "object",
          "$ref": "#/definitions/BatchOrdersBlacklist_1"
        },
        "sku": {
          "description": "The sku of the device offer variant.  Only relevant if the customer purchased the device from T-Mobile.",
          "type": "string"
        },
        "offerId": {
          "description": "Uniquely identifies a product offering in the sales catalog.",
          "type": "string"
        },
        "offerType": {
          "description": "Primary categorization of Product Offering.",
          "type": "string"
        },
        "offerSubType": {
          "description": "Secondary categorization of Product Offering.",
          "type": "string"
        },
        "productType": {
          "description": "The category of product included in the offer: Plan, Service, Device, Accessory, or Financial.",
          "type": "string"
        },
        "productSubTypes": {
          "description": "Secondary categorizations of the type of product included in the offer.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "offeringStatus": {
          "description": "Status of the product offering in the sales catalog.",
          "type": "string"
        },
        "offeringStatusPeriod": {
          "description": "The time period where the offeringStatus is valid.",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersOfferingStatusPeriod_2"
        },
        "businessUnit": {
          "description": "The different T-Mobile business units require complete separation of assets. Separate companies that comprise TMUS corporation.  The system restricts a Customer to one Business Unit.  In other words, a Customer in one Business Unit is not visible in any of the other  Business Units of the corporation. For example, a Metro PCS customers billing address cannot be looked up by a Magenta representative.  There is no capability to override this in the system.",
          "type": "string"
        },
        "billingMethod": {
          "description": "The Billing Method specifies the billing experience that the customer has qualified for and requested. A change of the billing method implies the need to create a new billing arrangement.",
          "type": "string"
        },
        "brand": {
          "description": "The business name under which a TMUS product is sold.  A Customer can have accounts in any Brand, within the same Business Unit. For example, a T-Mobile customer may also have a branded account with a national retailer.",
          "type": "string"
        },
        "unitPrice": {
          "description": "Full list price per unit as set by T-Mobile",
          "type": "number",
          "format": "double"
        },
        "offerCategory": {
          "description": "Top-level display categorization for product offers.",
          "type": "string"
        },
        "offerSubCategory1": {
          "description": "Second-level display categorization for product offers.",
          "type": "string"
        },
        "offerSubCategory2": {
          "description": "Third-level display categorization for product offers.",
          "type": "string"
        },
        "offerName": {
          "description": "The commonly used name of the Offer, as defined in the Product Catalog.",
          "type": "string"
        },
        "offerDescription": {
          "description": "The description of the offer, as defined in the product catalog.",
          "type": "string"
        },
        "offerShortDescription": {
          "description": "The brief description of the offer, as defined in the product catalog.",
          "type": "string"
        },
        "offerLongDescription": {
          "description": "The verbose description of the offer, as defined in the product catalog.",
          "type": "string"
        },
        "displayOrder": {
          "description": "The sequence in which the offer is displayed.",
          "type": "integer",
          "format": "int32"
        },
        "billingTypes": {
          "description": "The type of billing account this offer is available to.  Could be prepaid and/or postpaid.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "legalDisclosure": {
          "description": "Disclaimers or any other textual information that must be displayed to customers for legal reasons.",
          "type": "string"
        },
        "specifications": {
          "description": "Named value pairs",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersSpecifications_9"
          }
        },
        "productId": {
          "description": "Uniquely identifies a known product.",
          "type": "string"
        },
        "productName": {
          "description": "The common name of the product, as defined in the product catalog.",
          "type": "string"
        },
        "productKeywords": {
          "description": "Words used in searches for the product.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "description": "Description of the product",
          "type": "string"
        },
        "shortDescription": {
          "description": "Short description of the product",
          "type": "string"
        },
        "longDescription": {
          "description": "Long description of the product",
          "type": "string"
        },
        "serviceProvider": {
          "description": "Service provider for the device",
          "type": "string"
        },
        "manufacturer": {
          "description": "Device manufacturer name",
          "type": "string"
        },
        "model": {
          "description": "Device model name",
          "type": "string"
        },
        "msrp": {
          "description": "The manufacturers suggest retail price of the device.",
          "type": "number",
          "format": "double"
        },
        "purchasePrice": {
          "description": "The price the customer is actually charged for the equipement offer.",
          "type": "number",
          "format": "double"
        },
        "warrantyStatus": {
          "description": "Status of the warranty on the device.",
          "type": "string"
        },
        "estimatedPurchaseDate": {
          "description": "Estimated purchase date of the device.",
          "type": "string",
          "format": "date"
        },
        "registrationDate": {
          "description": "Registration date of the device.",
          "type": "string",
          "format": "date"
        },
        "warrantyExpirationDate": {
          "description": "Expiration date of the warranty on the device.",
          "type": "string",
          "format": "date"
        },
        "premiumCoverageVendor": {
          "description": "Vendor of the premium warranty coverage acquired by the customer, if any.",
          "type": "string"
        },
        "extendedCoveragePeriod": {
          "type": "object",
          "$ref": "#/definitions/ExtendedCoveragePeriod"
        },
        "manufacturerWarrantyDay": {
          "description": "OEM warranty days",
          "type": "integer",
          "format": "int32"
        },
        "manufacturerCoveragePeriod": {
          "description": "Coverage period by manufacturer",
          "type": "object",
          "$ref": "#/definitions/ManufacturerCoveragePeriod"
        },
        "purchaseCountry": {
          "description": "Country where the device was purchased",
          "type": "string"
        },
        "daysRemaining": {
          "description": "Number of days the warranty is still in effect",
          "type": "integer",
          "format": "int32"
        },
        "maxTACReturnLimit": {
          "description": "Maximum number of time the TAC is allowed for return",
          "type": "integer",
          "format": "int32"
        },
        "numberOfTimesTACReturned": {
          "description": "Number of times the TAC has returned",
          "type": "integer",
          "format": "int32"
        },
        "accessoryWarrantyExpirationDate": {
          "description": "Warranty expiration date for adcessory associaed with the device",
          "type": "string",
          "format": "date-time"
        },
        "recurringCharge": {
          "description": "The recurring charge amount the customer is charged for this device.",
          "type": "number",
          "format": "double"
        },
        "oneTimeCharge": {
          "description": "The one time charge the customer is charged for this device.",
          "type": "number",
          "format": "double"
        },
        "imsi": {
          "description": "An International Mobile Subscriber Identifier of IMSI is a unique number associated with all GSM and UMTS network mobile phone users.  It is stored in the SIM card.",
          "type": "string"
        },
        "simNumber": {
          "description": "Identifying number of the SIM on the network.",
          "type": "string"
        },
        "csn": {
          "description": "Customer Service Number for Apple SIM.",
          "type": "string"
        },
        "statusCode": {
          "description": "Status code",
          "type": "string"
        },
        "subStatusCode": {
          "description": "Sub Status Code",
          "type": "string"
        },
        "reasonCode": {
          "description": "Status reason code",
          "type": "string"
        },
        "reasonDescription": {
          "description": "Status reason description",
          "type": "string"
        },
        "unlockStatus": {
          "description": "Unlock status of the device",
          "type": "string"
        },
        "images": {
          "description": "Images associated with the product offering.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersImages_1"
          }
        },
        "deviceStartTime": {
          "description": "Date and time when the device was started for the customer.",
          "type": "string",
          "format": "date-time"
        },
        "numberOfDaysUsed": {
          "description": "Number of days the device is in use.",
          "type": "integer",
          "format": "int32"
        },
        "deviceEndTime": {
          "description": "Date and time when the device was ended for the customer.",
          "type": "string",
          "format": "date-time"
        },
        "msisdn": {
          "description": "Phone number",
          "type": "string"
        },
        "networkUsePeriod": {
          "description": "The first and last time when the device used the network.",
          "type": "object",
          "$ref": "#/definitions/NetworkUsePeriod"
        },
        "networkUseDays": {
          "description": "Number of days the device has used newwork.",
          "type": "integer",
          "format": "int32"
        },
        "tmoMerchandiseIndicator": {
          "description": "Indicates whether the customer originally purchased the device from T-Mobile.",
          "type": "boolean"
        },
        "originalPurchaseShipmentMethod": {
          "description": "Original purchase shipment method for the device.  in-store vs shipped",
          "type": "string"
        },
        "personalUnblockingKey": {
          "description": "Customers personal unblocking key",
          "type": "string"
        },
        "acquisitionType": {
          "description": "To indicate how the device was acquired.",
          "type": "string"
        }
      }
    },
    "Discount": {
      "type": "object",
      "properties": {
        "type": {
          "description": "Type of amount, actual or percentage",
          "type": "string"
        },
        "amount": {
          "description": "Value of amount.",
          "type": "number",
          "format": "double"
        }
      }
    },
    "Documents": {
      "type": "object",
      "properties": {
        "attachmentReferenceId": {
          "description": "Uniquely identifies the attachment record in the context of the cart or other parent object.",
          "type": "string"
        },
        "mimeType": {
          "description": "Mime type of the encoded document.  Mime type construction will conform to RFC 2045, and will use accepted mime types per the IANA mime type  listings.  Specific supported document types at the time of this writing are: application/pdf, image/png, text/plain, text/x-url, text/html, text/xml, image/jpeg.",
          "type": "string"
        },
        "description": {
          "description": "Description of the attachment",
          "type": "string"
        },
        "embeddedData": {
          "description": "Element holding data embedded directly in the BOD instance.",
          "type": "string"
        },
        "documentId": {
          "description": "Identifies the document in the document storage system.",
          "type": "string"
        },
        "paymentScheduleId": {
          "description": "Uniquely identifies a Payment Schedule for an Equipment Installment Plan or loan or lease.",
          "type": "string"
        },
        "signatureRequired": {
          "description": "Indicates whether a signature is required for this document.",
          "type": "boolean"
        },
        "printRequired": {
          "description": "Indicates whether the document must be printed.",
          "type": "boolean"
        },
        "documentType": {
          "description": "Type of document",
          "type": "string"
        },
        "documentSubType": {
          "description": "Document sub type",
          "type": "string"
        }
      }
    },
    "DocumentSet": {
      "type": "object",
      "properties": {
        "cartId": {
          "description": "Uniquely identifies a cart that the documents are associated with.",
          "type": "string"
        },
        "machineId": {
          "type": "string"
        },
        "machineAddress": {
          "type": "string"
        },
        "storeId": {
          "description": "Uniquely identifies a store where the documents are generated.",
          "type": "string"
        },
        "consentTime": {
          "description": "Date and time when consent was received from the customer.",
          "type": "string",
          "format": "date-time"
        },
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Documents"
          }
        },
        "saveIndicator": {
          "description": "To indicate if the generated documents need to be stored.",
          "type": "boolean"
        },
        "attachDocumentMethod": {
          "description": "To indicate how the document content will be returned, such as link or embedded data.",
          "type": "string"
        },
        "contentRequired": {
          "description": "To indicate if the content (or URL) of the document is required.",
          "type": "boolean"
        }
      }
    },
    "documentSet": {
      "type": "object",
      "properties": {
        "cartId": {
          "description": "Uniquely identifies a cart that the documents are associated with.",
          "type": "string"
        },
        "machineId": {
          "type": "string"
        },
        "machineAddress": {
          "type": "string"
        },
        "storeId": {
          "description": "Uniquely identifies a store where the documents are generated.",
          "type": "string"
        },
        "consentTime": {
          "description": "Date and time when consent was received from the customer.",
          "type": "string",
          "format": "date-time"
        },
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentSetDocuments"
          }
        },
        "saveIndicator": {
          "description": "To indicate if the generated documents need to be stored.",
          "type": "boolean"
        },
        "attachDocumentMethod": {
          "description": "To indicate how the document content will be returned, such as link or embedded data.",
          "type": "string"
        },
        "contentRequired": {
          "description": "To indicate if the content (or URL) of the document is required.",
          "type": "boolean"
        }
      }
    },
    "DocumentSetDocuments": {
      "type": "object",
      "properties": {
        "attachmentReferenceId": {
          "description": "Uniquely identifies the attachment record in the context of the cart or other parent object.",
          "type": "string"
        },
        "mimeType": {
          "description": "Mime type of the encoded document.  Mime type construction will conform to RFC 2045, and will use accepted mime types per the IANA mime type  listings.  Specific supported document types at the time of this writing are: application/pdf, image/png, text/plain, text/x-url, text/html, text/xml, image/jpeg.",
          "type": "string"
        },
        "description": {
          "description": "Description of the attachment",
          "type": "string"
        },
        "embeddedData": {
          "description": "Element holding data embedded directly in the BOD instance.",
          "type": "string"
        },
        "documentId": {
          "description": "Identifies the document in the document storage system.",
          "type": "string"
        },
        "paymentScheduleId": {
          "description": "Uniquely identifies a Payment Schedule for an Equipment Installment Plan or loan or lease.",
          "type": "string"
        },
        "signatureRequired": {
          "description": "Indicates whether a signature is required for this document.",
          "type": "boolean"
        },
        "printRequired": {
          "description": "Indicates whether the document must be printed.",
          "type": "boolean"
        },
        "documentType": {
          "description": "Type of document",
          "type": "string"
        },
        "documentSubType": {
          "description": "Document sub type",
          "type": "string"
        }
      }
    },
    "EffectiveDate": {
      "type": "object",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "Eligibility": {
      "type": "object",
      "properties": {
        "eligibilityIndicator": {
          "description": "Flag indicating whether the determination is eligible or ineligible.",
          "type": "boolean"
        },
        "eligibilityStatus": {
          "description": "Code identifying the status of eligibility that was determined.",
          "type": "string"
        },
        "eligibilityType": {
          "description": "The type of eligibility being established.",
          "type": "string"
        },
        "ineligibleReasons": {
          "description": "The reason for ineligibility.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersIneligibleReasons_2"
          }
        }
      }
    },
    "EligibleAccessories": {
      "type": "object",
      "properties": {
        "sku": {
          "description": "Stock keeping unit (SKU).  Uniquely identifies the product in the inventory system.",
          "type": "string"
        },
        "productCondition": {
          "description": "Describes the general condition of the variant.  For example new or refurbished.",
          "type": "string"
        },
        "memory": {
          "description": "Memory size of the sku.",
          "type": "string"
        },
        "color": {
          "description": "Official name of the variant color as marketed by the manufacturer.",
          "type": "string"
        },
        "searchableColor": {
          "description": "Common color names of the variant, for searching.",
          "type": "string"
        },
        "msrp": {
          "description": "Manufacturer suggested retail price.   Provided by the device manufacturer.",
          "type": "number",
          "format": "double"
        },
        "name": {
          "description": "Name of the offer variant.",
          "type": "string"
        },
        "preOrderAvailableTime": {
          "description": "The time when the offer variant is available for pre orders.",
          "type": "string",
          "format": "date-time"
        },
        "comingSoonDate": {
          "description": "The date when T-Mobile will begin accepting requests to notify customers of the availability of the offer variant.",
          "type": "string",
          "format": "date"
        },
        "variantOfferStatus": {
          "description": "Status of the variant in the sales catalog.  Example ForSale, Grandfathered, Retired.",
          "type": "string"
        },
        "inventoryStatus": {
          "description": "Status of the variant in inventory.  Example, in stock, backordered.",
          "type": "string"
        },
        "variantDisplayOrder": {
          "description": "The order that the variant is displayed, relative to other variants of the same offer.",
          "type": "integer",
          "format": "int32"
        },
        "saleStartTime": {
          "description": "The time when the offer variant goes on sale.",
          "type": "string",
          "format": "date-time"
        },
        "saleEndTime": {
          "description": "The time when the offer variant is no longer for sale.",
          "type": "string",
          "format": "date-time"
        },
        "offerVariantId": {
          "description": "Uniquely identifies a offer variant in the sales catalog.",
          "type": "string"
        },
        "defaultDownPayment": {
          "description": "Default down payment amount",
          "type": "number",
          "format": "double"
        }
      }
    },
    "EligibleDevices": {
      "type": "object",
      "properties": {
        "sku": {
          "description": "Stock keeping unit (SKU).  Uniquely identifies the product in the inventory system.",
          "type": "string"
        },
        "productCondition": {
          "description": "Describes the general condition of the variant.  For example new or refurbished.",
          "type": "string"
        },
        "memory": {
          "description": "Memory size of the sku.",
          "type": "string"
        },
        "color": {
          "description": "Official name of the variant color as marketed by the manufacturer.",
          "type": "string"
        },
        "searchableColor": {
          "description": "Common color names of the variant, for searching.",
          "type": "string"
        },
        "msrp": {
          "description": "Manufacturer suggested retail price.   Provided by the device manufacturer.",
          "type": "number",
          "format": "double"
        },
        "name": {
          "description": "Name of the offer variant.",
          "type": "string"
        },
        "preOrderAvailableTime": {
          "description": "The time when the offer variant is available for pre orders.",
          "type": "string",
          "format": "date-time"
        },
        "comingSoonDate": {
          "description": "The date when T-Mobile will begin accepting requests to notify customers of the availability of the offer variant.",
          "type": "string",
          "format": "date"
        },
        "variantOfferStatus": {
          "description": "Status of the variant in the sales catalog.  Example ForSale, Grandfathered, Retired.",
          "type": "string"
        },
        "inventoryStatus": {
          "description": "Status of the variant in inventory.  Example, in stock, backordered.",
          "type": "string"
        },
        "variantDisplayOrder": {
          "description": "The order that the variant is displayed, relative to other variants of the same offer.",
          "type": "integer",
          "format": "int32"
        },
        "saleStartTime": {
          "description": "The time when the offer variant goes on sale.",
          "type": "string",
          "format": "date-time"
        },
        "saleEndTime": {
          "description": "The time when the offer variant is no longer for sale.",
          "type": "string",
          "format": "date-time"
        },
        "offerVariantId": {
          "description": "Uniquely identifies a offer variant in the sales catalog.",
          "type": "string"
        },
        "defaultDownPayment": {
          "description": "Default down payment amount",
          "type": "number",
          "format": "double"
        }
      }
    },
    "EligiblePaymentArrangements": {
      "type": "object",
      "properties": {
        "eligibilityStatus": {
          "description": "Status of account eligibility for payment arrangement. S = Success,N = Failure – the customer may not enter a new payment arrangement,D = Customer has not waited the minimum number of days since the last payment arrangement,E = The customer has exceeded the maximum number of allowed payment arrangements,F = Payment arrangement failed within the last XX (30) days,L = Letter was not sent,P = Schedule Payment exists.",
          "type": "string"
        },
        "category": {
          "description": "The payment arrangement category",
          "type": "string"
        },
        "maximumDaysFirstInstallment": {
          "description": "Maximum number of days before the first payment is due on the payment arrangement",
          "type": "integer",
          "format": "int32"
        },
        "maximumInstallment": {
          "description": "The maximum number of installments allowed for the payment arrangement.",
          "type": "integer",
          "format": "int32"
        },
        "maximumInstallmentInterval": {
          "description": "The maximum number of days interval between two installments",
          "type": "integer",
          "format": "int32"
        },
        "futureDatedIndicator": {
          "description": "Future dated payment indicator tells whether the payment arrangement is eligible for future dated payment / future dated collection or not.",
          "type": "boolean"
        },
        "minimumPercent": {
          "description": "The minimum percentage of actual payment that is allowed.",
          "type": "number",
          "format": "double"
        },
        "autoRestoreIndicator": {
          "description": "If true then involuntary suspended account (BAN) will be automatically restored after payment arrangement setup.",
          "type": "boolean"
        },
        "paymentArrangementType": {
          "description": "The payment arrangement type (Regular, Recurring, Proof of Payment, Late Billed)",
          "type": "string"
        }
      }
    },
    "EmailCommunications": {
      "type": "object",
      "properties": {
        "purposes": {
          "description": "The purpose for which this email address should be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "emailAddress": {
          "description": "The email address used for the given purpose.",
          "type": "string"
        },
        "validationStatus": {
          "description": "Specifies the validation status of the email address: VALIDATED, NONVALIDATED, DELIVERED, or UNDELIVERABLE.",
          "type": "string"
        }
      }
    },
    "EquipmentSpecifications": {
      "type": "object",
      "properties": {
        "groupName": {
          "type": "string"
        },
        "groupRanking": {
          "type": "integer",
          "format": "int32"
        },
        "specifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Specifications"
          }
        }
      }
    },
    "EstimatedDelivery": {
      "type": "object",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "EstimatedShipment": {
      "type": "object",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "event": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string"
        }
      }
    },
    "exchange": {
      "type": "object",
      "properties": {
        "orderLine": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeOrderLine"
          }
        }
      }
    },
    "ExchangeAdditionalRequiredOffers": {
      "type": "object",
      "properties": {
        "productOfferingId": {
          "description": "The id of the required offer.",
          "type": "string"
        },
        "variantIds": {
          "description": "Variants of the required offer.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "link": {
          "type": "string"
        }
      }
    },
    "ExchangeAdditionalRequiredOffers_1": {
      "type": "object",
      "properties": {
        "productOfferingId": {
          "description": "The id of the required offer.",
          "type": "string"
        },
        "variantIds": {
          "description": "Variants of the required offer.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "link": {
          "type": "string"
        }
      }
    },
    "ExchangeAdditionalRequiredOffers_2": {
      "type": "object",
      "properties": {
        "productOfferingId": {
          "description": "The id of the required offer.",
          "type": "string"
        },
        "variantIds": {
          "description": "Variants of the required offer.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "link": {
          "type": "string"
        }
      }
    },
    "ExchangeBlacklist": {
      "type": "object",
      "properties": {
        "statusCode": {
          "description": "Status code",
          "type": "string"
        },
        "subStatusCode": {
          "description": "Sub Status Code",
          "type": "string"
        },
        "reasonCode": {
          "description": "Status reason code",
          "type": "string"
        },
        "reasonDescription": {
          "description": "Status reason description",
          "type": "string"
        }
      }
    },
    "ExchangeCompatibleOffers": {
      "type": "object",
      "properties": {
        "relationshipType": {
          "description": "The type of relationship between the two offers.",
          "type": "string"
        },
        "link": {
          "description": "A link to the offer that is related to this one.",
          "type": "string"
        },
        "relatedOfferId": {
          "description": "The id of the offer that is related to this one.",
          "type": "string"
        },
        "relatedOfferName": {
          "description": "The name of the offer that is related to this one.",
          "type": "string"
        },
        "displayPriority": {
          "description": "Display priority or sequence",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ExchangeConflictingPromotions": {
      "type": "object",
      "properties": {
        "promotionId": {
          "description": "The unique id of the promotion.",
          "type": "string"
        },
        "shortDescription": {
          "description": "Short description",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "promotionEffectivePeriod": {
          "description": "The time period where the Promotion is effective.",
          "type": "object",
          "$ref": "#/definitions/ExchangePromotionEffectivePeriod_1"
        }
      }
    },
    "ExchangeConflictOffers": {
      "type": "object",
      "properties": {
        "relationshipType": {
          "description": "The type of relationship between the two offers.",
          "type": "string"
        },
        "link": {
          "description": "A link to the offer that is related to this one.",
          "type": "string"
        },
        "relatedOfferId": {
          "description": "The id of the offer that is related to this one.",
          "type": "string"
        },
        "relatedOfferName": {
          "description": "The name of the offer that is related to this one.",
          "type": "string"
        },
        "displayPriority": {
          "description": "Display priority or sequence",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ExchangeCustomerSpecificDetails": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "ExchangeDiscount": {
      "type": "object",
      "properties": {
        "type": {
          "description": "Type of amount, actual or percentage",
          "type": "string"
        },
        "amount": {
          "description": "Value of amount.",
          "type": "number",
          "format": "double"
        }
      }
    },
    "ExchangeEligibleAccessories": {
      "type": "object",
      "properties": {
        "sku": {
          "description": "Stock keeping unit (SKU).  Uniquely identifies the product in the inventory system.",
          "type": "string"
        },
        "productCondition": {
          "description": "Describes the general condition of the variant.  For example new or refurbished.",
          "type": "string"
        },
        "memory": {
          "description": "Memory size of the sku.",
          "type": "string"
        },
        "color": {
          "description": "Official name of the variant color as marketed by the manufacturer.",
          "type": "string"
        },
        "searchableColor": {
          "description": "Common color names of the variant, for searching.",
          "type": "string"
        },
        "msrp": {
          "description": "Manufacturer suggested retail price.   Provided by the device manufacturer.",
          "type": "number",
          "format": "double"
        },
        "name": {
          "description": "Name of the offer variant.",
          "type": "string"
        },
        "preOrderAvailableTime": {
          "description": "The time when the offer variant is available for pre orders.",
          "type": "string",
          "format": "date-time"
        },
        "comingSoonDate": {
          "description": "The date when T-Mobile will begin accepting requests to notify customers of the availability of the offer variant.",
          "type": "string",
          "format": "date"
        },
        "variantOfferStatus": {
          "description": "Status of the variant in the sales catalog.  Example ForSale, Grandfathered, Retired.",
          "type": "string"
        },
        "inventoryStatus": {
          "description": "Status of the variant in inventory.  Example, in stock, backordered.",
          "type": "string"
        },
        "variantDisplayOrder": {
          "description": "The order that the variant is displayed, relative to other variants of the same offer.",
          "type": "integer",
          "format": "int32"
        },
        "saleStartTime": {
          "description": "The time when the offer variant goes on sale.",
          "type": "string",
          "format": "date-time"
        },
        "saleEndTime": {
          "description": "The time when the offer variant is no longer for sale.",
          "type": "string",
          "format": "date-time"
        },
        "offerVariantId": {
          "description": "Uniquely identifies a offer variant in the sales catalog.",
          "type": "string"
        },
        "defaultDownPayment": {
          "description": "Default down payment amount",
          "type": "number",
          "format": "double"
        }
      }
    },
    "ExchangeEligibleDevices": {
      "type": "object",
      "properties": {
        "sku": {
          "description": "Stock keeping unit (SKU).  Uniquely identifies the product in the inventory system.",
          "type": "string"
        },
        "productCondition": {
          "description": "Describes the general condition of the variant.  For example new or refurbished.",
          "type": "string"
        },
        "memory": {
          "description": "Memory size of the sku.",
          "type": "string"
        },
        "color": {
          "description": "Official name of the variant color as marketed by the manufacturer.",
          "type": "string"
        },
        "searchableColor": {
          "description": "Common color names of the variant, for searching.",
          "type": "string"
        },
        "msrp": {
          "description": "Manufacturer suggested retail price.   Provided by the device manufacturer.",
          "type": "number",
          "format": "double"
        },
        "name": {
          "description": "Name of the offer variant.",
          "type": "string"
        },
        "preOrderAvailableTime": {
          "description": "The time when the offer variant is available for pre orders.",
          "type": "string",
          "format": "date-time"
        },
        "comingSoonDate": {
          "description": "The date when T-Mobile will begin accepting requests to notify customers of the availability of the offer variant.",
          "type": "string",
          "format": "date"
        },
        "variantOfferStatus": {
          "description": "Status of the variant in the sales catalog.  Example ForSale, Grandfathered, Retired.",
          "type": "string"
        },
        "inventoryStatus": {
          "description": "Status of the variant in inventory.  Example, in stock, backordered.",
          "type": "string"
        },
        "variantDisplayOrder": {
          "description": "The order that the variant is displayed, relative to other variants of the same offer.",
          "type": "integer",
          "format": "int32"
        },
        "saleStartTime": {
          "description": "The time when the offer variant goes on sale.",
          "type": "string",
          "format": "date-time"
        },
        "saleEndTime": {
          "description": "The time when the offer variant is no longer for sale.",
          "type": "string",
          "format": "date-time"
        },
        "offerVariantId": {
          "description": "Uniquely identifies a offer variant in the sales catalog.",
          "type": "string"
        },
        "defaultDownPayment": {
          "description": "Default down payment amount",
          "type": "number",
          "format": "double"
        }
      }
    },
    "ExchangeEquipmentSpecifications": {
      "type": "object",
      "properties": {
        "groupName": {
          "type": "string"
        },
        "groupRanking": {
          "type": "integer",
          "format": "int32"
        },
        "specifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeSpecifications_3"
          }
        }
      }
    },
    "ExchangeEstimatedDelivery": {
      "type": "object",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "ExchangeEstimatedShipment": {
      "type": "object",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "ExchangeExpectedDelivery": {
      "type": "object",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "ExchangeFeatureDetails": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "rank": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "description": "The description of the feature.",
          "type": "string"
        }
      }
    },
    "ExchangeGeographicCoordinate": {
      "type": "object",
      "properties": {
        "latitude": {
          "description": "Latitude",
          "type": "string"
        },
        "longitude": {
          "description": "Longitude",
          "type": "string"
        }
      }
    },
    "ExchangeImages": {
      "type": "object",
      "properties": {
        "imageId": {
          "description": "Unique identifier for the image PATH.  This name should be changed.",
          "type": "string"
        },
        "uri": {
          "description": "Universal resource identifier pointing to the image.",
          "type": "string"
        },
        "dimensions": {
          "description": "Dimensions of the image.",
          "type": "string"
        },
        "color": {
          "description": "Official name of the color of the equipment displayed in the image.",
          "type": "string"
        },
        "searchableColors": {
          "description": "Common color name for searching.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "displayPurposes": {
          "description": "Purpose for which the image should be used in displays.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ExchangeIneligibleReasons": {
      "type": "object",
      "properties": {
        "reasonCode": {
          "description": "Reason Code",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "helpText": {
          "description": "Additional description",
          "type": "string"
        },
        "language": {
          "description": "language used",
          "type": "string",
          "minLength": 2,
          "maxLength": 2,
          "pattern": "[a-z][a-z]"
        }
      }
    },
    "ExchangeIneligibleReasons_1": {
      "type": "object",
      "properties": {
        "reasonCode": {
          "description": "Reason Code",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "helpText": {
          "description": "Additional description",
          "type": "string"
        },
        "language": {
          "description": "language used",
          "type": "string",
          "minLength": 2,
          "maxLength": 2,
          "pattern": "[a-z][a-z]"
        }
      }
    },
    "ExchangeMarketingFeatures": {
      "type": "object",
      "properties": {
        "featureCategory": {
          "description": "The category of feature.",
          "type": "string"
        },
        "featureCategoryRank": {
          "description": "The order the category of features is displayed, relative to other feature categories.",
          "type": "integer",
          "format": "int32"
        },
        "featureDetails": {
          "description": "List of the feature details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeFeatureDetails"
          }
        }
      }
    },
    "ExchangeMetadata": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "self": {
          "type": "string"
        },
        "generated": {
          "type": "string",
          "format": "date-time"
        },
        "lastModified": {
          "type": "string",
          "format": "date-time"
        },
        "etag": {
          "type": "string"
        }
      }
    },
    "exchangeModes": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "ExchangeOffer": {
      "type": "object",
      "properties": {
        "offerId": {
          "description": "Uniquely identifies a product offering in the sales catalog.",
          "type": "string"
        },
        "offerType": {
          "description": "Primary categorization of Product Offering.",
          "type": "string"
        },
        "offerSubType": {
          "description": "Secondary categorization of Product Offering.",
          "type": "string"
        },
        "productType": {
          "description": "The category of product included in the offer: Plan, Service, Device, Accessory, or Financial.",
          "type": "string"
        },
        "productSubTypes": {
          "description": "Secondary categorizations of the type of product included in the offer.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "offeringStatus": {
          "description": "Status of the product offering in the sales catalog.",
          "type": "string"
        },
        "offeringStatusPeriod": {
          "description": "The time period where the offeringStatus is valid.",
          "type": "object",
          "$ref": "#/definitions/ExchangeOfferingStatusPeriod"
        },
        "businessUnit": {
          "description": "The different T-Mobile business units require complete separation of assets. Separate companies that comprise TMUS corporation.  The system restricts a Customer to one Business Unit.  In other words, a Customer in one Business Unit is not visible in any of the other  Business Units of the corporation. For example, a Metro PCS customers billing address cannot be looked up by a Magenta representative.  There is no capability to override this in the system.",
          "type": "string"
        },
        "billingMethod": {
          "description": "The Billing Method specifies the billing experience that the customer has qualified for and requested. A change of the billing method implies the need to create a new billing arrangement.",
          "type": "string"
        },
        "brand": {
          "description": "The business name under which a TMUS product is sold.  A Customer can have accounts in any Brand, within the same Business Unit. For example, a T-Mobile customer may also have a branded account with a national retailer.",
          "type": "string"
        },
        "unitPrice": {
          "description": "Full list price per unit as set by T-Mobile",
          "type": "number",
          "format": "double"
        },
        "offerCategory": {
          "description": "Top-level display categorization for product offers.",
          "type": "string"
        },
        "offerSubCategory1": {
          "description": "Second-level display categorization for product offers.",
          "type": "string"
        },
        "offerSubCategory2": {
          "description": "Third-level display categorization for product offers.",
          "type": "string"
        },
        "offerName": {
          "description": "The commonly used name of the Offer, as defined in the Product Catalog.",
          "type": "string"
        },
        "offerDescription": {
          "description": "The description of the offer, as defined in the product catalog.",
          "type": "string"
        },
        "offerShortDescription": {
          "description": "The brief description of the offer, as defined in the product catalog.",
          "type": "string"
        },
        "offerLongDescription": {
          "description": "The verbose description of the offer, as defined in the product catalog.",
          "type": "string"
        },
        "displayOrder": {
          "description": "The sequence in which the offer is displayed.",
          "type": "integer",
          "format": "int32"
        },
        "billingTypes": {
          "description": "The type of billing account this offer is available to.  Could be prepaid and/or postpaid.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "legalDisclosure": {
          "description": "Disclaimers or any other textual information that must be displayed to customers for legal reasons.",
          "type": "string"
        },
        "specifications": {
          "description": "Named value pairs",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeSpecifications"
          }
        },
        "prices": {
          "description": "Prices that are applicable to the offer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangePrices"
          }
        },
        "keywords": {
          "description": "Words used in searches for the offer.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "promotions": {
          "description": "Reference to the promotions that are available with the offer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangePromotions"
          }
        },
        "conflictOffers": {
          "description": "Conflicting offers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeConflictOffers"
          }
        },
        "compatibleOffers": {
          "description": "Compatible offers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeCompatibleOffers"
          }
        },
        "requiredOffers": {
          "description": "Required offers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeRequiredOffers"
          }
        },
        "backDateAllowedIndicator": {
          "description": "Indicates whether the service can be back dated when added.",
          "type": "boolean"
        },
        "futureDateAllowedIndicator": {
          "description": "Indicates whether the service can be future dated when added.",
          "type": "boolean"
        },
        "backDateVisibleIndicator": {
          "description": "Indicates whether the services back date should be visible.",
          "type": "boolean"
        },
        "futureDateVisibleIndicator": {
          "description": "Indicates whether the services future date should be visible.",
          "type": "boolean"
        },
        "billEffectiveCode": {
          "description": "To indicate when the bill will be effective",
          "type": "string"
        },
        "billableThirdPartyServiceIndicator": {
          "description": "To indicate if T-Mobile bills the customer for third-party service.",
          "type": "boolean"
        },
        "prorateAllowedIndicator": {
          "description": "To indicate if prorate is allowed",
          "type": "boolean"
        },
        "prorateVisibleIndicator": {
          "description": "To indicate if prorate is visible",
          "type": "boolean"
        },
        "maximumOrderDelay": {
          "description": "Maximum allowed future dating for a particular offer.",
          "type": "string"
        },
        "requireAutoRenew": {
          "description": "To indicate if auto renew is required",
          "type": "boolean"
        },
        "supportAutoRenew": {
          "description": "To indicate if auto renew is available",
          "type": "boolean"
        },
        "deviceValidationRequired": {
          "description": "When true, the Client System is expected to validate the Subscribers Device against the IMEI range defined by the Business, before presenting this Data Pass as eligible for purchase.",
          "type": "boolean"
        },
        "maxOnDemandPasses": {
          "description": "Maximum number of OnDemand data passes that can be purchased with this plan.",
          "type": "integer",
          "format": "int32"
        },
        "upgradeableIndicator": {
          "description": "To indicate if the plan can be upgraded mid bill cycle",
          "type": "boolean"
        },
        "products": {
          "description": "List of product",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeProducts"
          }
        },
        "minimumNumberOfLines": {
          "description": "Minimum number of lines needed for eligibility.",
          "type": "integer",
          "format": "int32"
        },
        "maximumNumberOfLines": {
          "description": "Maximum number of lines allowed to be eligible.",
          "type": "integer",
          "format": "int32"
        },
        "offerLevel": {
          "description": "Level in the customer hierarchy to which the offer should be applied.Model Note:  this is a duplicate of the element already in the ServiceOfferSummaryDelta",
          "type": "string"
        },
        "actionCode": {
          "description": "Action code such as ADD,REMOVE,CANCEL",
          "type": "string"
        }
      }
    },
    "ExchangeOfferingStatusPeriod": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ExchangeOneTimeCharges": {
      "type": "object",
      "properties": {
        "chargeType": {
          "description": "Charge type, such as activationFee, applicationFee, firstMonthCharge,controlChargeFee",
          "type": "string"
        },
        "amount": {
          "description": "The total price to be charged in dollars, inclusive of all discount(s).  amount = basisAmount minus discountAmount minus adjustmentAmount.",
          "type": "number",
          "format": "double"
        },
        "basisAmount": {
          "description": "The price to be charged in dollars, not including any discount(s).",
          "type": "number",
          "format": "double"
        },
        "adjustmentAmount": {
          "description": "Total amount of adjustments, in dollars, that is included in the amount.",
          "type": "number",
          "format": "double"
        },
        "discountAmount": {
          "description": "Total amount of discounts, in dollars, that is included in the amount.",
          "type": "number",
          "format": "double"
        },
        "priceComponents": {
          "description": "The details of charges and deductions that comprise the one time charge.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangePriceComponents"
          }
        },
        "productChargeIncurredType": {
          "description": "Specifies the timing for when the first charge is incurred for the product: immediate, on usage, or on demand.",
          "type": "string"
        },
        "proratedAmount": {
          "description": "This is the cost that the customer would need to pay in order to add this feature to their current account effective immediately. it is prorated from the current date until the end of the current cycle.",
          "type": "number",
          "format": "double"
        },
        "adjustmentReason": {
          "description": "Reason for adjustment.",
          "type": "string"
        },
        "percentageDiscount": {
          "description": "Discount by percentage",
          "type": "number",
          "format": "double"
        }
      }
    },
    "ExchangeOneTimeCharges_1": {
      "type": "object",
      "properties": {
        "chargeType": {
          "description": "Charge type, such as activationFee, applicationFee, firstMonthCharge,controlChargeFee",
          "type": "string"
        },
        "amount": {
          "description": "The total price to be charged in dollars, inclusive of all discount(s).  amount = basisAmount minus discountAmount minus adjustmentAmount.",
          "type": "number",
          "format": "double"
        },
        "basisAmount": {
          "description": "The price to be charged in dollars, not including any discount(s).",
          "type": "number",
          "format": "double"
        },
        "adjustmentAmount": {
          "description": "Total amount of adjustments, in dollars, that is included in the amount.",
          "type": "number",
          "format": "double"
        },
        "discountAmount": {
          "description": "Total amount of discounts, in dollars, that is included in the amount.",
          "type": "number",
          "format": "double"
        },
        "priceComponents": {
          "description": "The details of charges and deductions that comprise the one time charge.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangePriceComponents_2"
          }
        },
        "productChargeIncurredType": {
          "description": "Specifies the timing for when the first charge is incurred for the product: immediate, on usage, or on demand.",
          "type": "string"
        },
        "proratedAmount": {
          "description": "This is the cost that the customer would need to pay in order to add this feature to their current account effective immediately. it is prorated from the current date until the end of the current cycle.",
          "type": "number",
          "format": "double"
        },
        "adjustmentReason": {
          "description": "Reason for adjustment.",
          "type": "string"
        },
        "percentageDiscount": {
          "description": "Discount by percentage",
          "type": "number",
          "format": "double"
        }
      }
    },
    "ExchangeOneTimeCharges_2": {
      "type": "object",
      "properties": {
        "chargeType": {
          "description": "Charge type, such as activationFee, applicationFee, firstMonthCharge,controlChargeFee",
          "type": "string"
        },
        "amount": {
          "description": "The total price to be charged in dollars, inclusive of all discount(s).  amount = basisAmount minus discountAmount minus adjustmentAmount.",
          "type": "number",
          "format": "double"
        },
        "basisAmount": {
          "description": "The price to be charged in dollars, not including any discount(s).",
          "type": "number",
          "format": "double"
        },
        "adjustmentAmount": {
          "description": "Total amount of adjustments, in dollars, that is included in the amount.",
          "type": "number",
          "format": "double"
        },
        "discountAmount": {
          "description": "Total amount of discounts, in dollars, that is included in the amount.",
          "type": "number",
          "format": "double"
        },
        "priceComponents": {
          "description": "The details of charges and deductions that comprise the one time charge.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangePriceComponents_4"
          }
        },
        "productChargeIncurredType": {
          "description": "Specifies the timing for when the first charge is incurred for the product: immediate, on usage, or on demand.",
          "type": "string"
        },
        "proratedAmount": {
          "description": "This is the cost that the customer would need to pay in order to add this feature to their current account effective immediately. it is prorated from the current date until the end of the current cycle.",
          "type": "number",
          "format": "double"
        },
        "adjustmentReason": {
          "description": "Reason for adjustment.",
          "type": "string"
        },
        "percentageDiscount": {
          "description": "Discount by percentage",
          "type": "number",
          "format": "double"
        }
      }
    },
    "ExchangeOneTimeCredits": {
      "type": "object",
      "properties": {
        "creditId": {
          "description": "Identifier of the credit",
          "type": "string"
        },
        "type": {
          "description": "Charge or tax type",
          "type": "string"
        },
        "amount": {
          "description": "Amount charged.",
          "type": "number",
          "format": "double"
        },
        "description": {
          "description": "Description of the charge",
          "type": "string"
        },
        "code": {
          "description": "Charge code",
          "type": "string"
        },
        "adjustmentReason": {
          "description": "Reason for adjustment",
          "type": "string"
        }
      }
    },
    "ExchangeOrderLine": {
      "type": "object",
      "properties": {
        "orderLineId": {
          "description": "Identifier of order line",
          "type": "string"
        },
        "offer": {
          "description": "The offering being purchased in the cart.  The offering can be bundled or simple. A bundled offering may combine multiple simple offerings into a single package.",
          "type": "object",
          "$ref": "#/definitions/ExchangeOffer"
        },
        "accountNumber": {
          "description": "Customers account number",
          "type": "string"
        },
        "universalLineId": {
          "description": "ULID - Universal identifier of the LineofService, as defined in Customer Hub.",
          "type": "string"
        },
        "lineId": {
          "description": "Uniquely identifies a  line of service.",
          "type": "string"
        },
        "phoneNumber": {
          "description": "The phone number (MSISDN) associated with the line of service.",
          "type": "string"
        },
        "loanId": {
          "description": "Identifier of loan",
          "type": "string"
        },
        "quantity": {
          "description": "The quantity of the product being ordered on this line.",
          "type": "integer",
          "format": "int32"
        },
        "extendedPrice": {
          "description": "Tax included price",
          "type": "number",
          "format": "double"
        },
        "priceListLineId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "offeringPriceType": {
          "description": "Categorization of the price point.",
          "type": "string"
        },
        "oneTimeCharges": {
          "description": "One-time charges/discounts for the price point are listed here.  Examples: charges for an on-demand data pass or equipment purchase.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeOneTimeCharges_2"
          }
        },
        "recurringChargeDetail": {
          "description": "For type of recurring charge, the schedule of amounts and discounts of the price point are listed here.  Examples:  monthly MRC charges, or equipment lease/finance.",
          "type": "object",
          "$ref": "#/definitions/ExchangeRecurringChargeDetail_2"
        },
        "pricePointCriteria": {
          "type": "object",
          "$ref": "#/definitions/ExchangePricePointCriteria_2"
        },
        "canModifyPrice": {
          "description": "When fales, the price can never be overridden even by representatives with the appropriate authority.",
          "type": "boolean"
        },
        "taxInclusiveIndicator": {
          "description": "When true indicates the price reflects the total after tax.",
          "type": "boolean"
        },
        "specifications": {
          "description": "Named value pair",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeSpecifications_5"
          }
        },
        "futureDatedPaymentIndicator": {
          "description": "To indicate if the payment can be made in the future.",
          "type": "boolean"
        },
        "transactionType": {
          "description": "Transaction type for the item",
          "type": "string"
        },
        "transactionSubType": {
          "description": "Transaction sub type for the item",
          "type": "string"
        },
        "status": {
          "description": "Status of the item",
          "type": "string"
        },
        "availability": {
          "description": "Inventory status of the item.",
          "type": "string"
        },
        "shippingContactNumber": {
          "description": "Shipping contact number",
          "type": "string"
        },
        "shippingMethod": {
          "description": "Shipping method as presented to the end user, including both freight carrier name and service level.",
          "type": "string"
        },
        "shippingAddress": {
          "description": "Shipping address",
          "type": "object",
          "$ref": "#/definitions/ExchangeShippingAddress"
        },
        "dueTodayAmount": {
          "description": "Total amount due now",
          "type": "number",
          "format": "double"
        },
        "futureRecurringAmount": {
          "description": "Recurring amount for the future",
          "type": "number",
          "format": "double"
        },
        "totalFee": {
          "description": "Total fee charged",
          "type": "number",
          "format": "double"
        },
        "priceChangeReason": {
          "description": "Reason for price change",
          "type": "string"
        },
        "taxCollection": {
          "type": "object",
          "$ref": "#/definitions/ExchangeTaxCollection"
        },
        "programType": {
          "description": "Program type associated with the item",
          "type": "string"
        },
        "imsi": {
          "description": "An International Mobile Subscriber Identifier of IMSI is a unique number associated with all GSM and UMTS network mobile phone users.  It is stored in the SIM card.",
          "type": "string"
        },
        "simNumber": {
          "description": "Identifying number of the SIM on the network.",
          "type": "string"
        },
        "csn": {
          "description": "Customer Service Number for Apple SIM.",
          "type": "string"
        },
        "statusCode": {
          "description": "Status code",
          "type": "string"
        },
        "subStatusCode": {
          "description": "Sub Status Code",
          "type": "string"
        },
        "reasonCode": {
          "description": "Status reason code",
          "type": "string"
        },
        "reasonDescription": {
          "description": "Status reason description",
          "type": "string"
        },
        "deviceId": {
          "description": "Uniquely identifies a device",
          "type": "string"
        },
        "imei": {
          "description": "International Mobile Equipment Identifier.  Unique identifier for a mobile device on a network.",
          "type": "string"
        },
        "serialNumber": {
          "description": "Serial number of the equipment (device or accessory).",
          "type": "string"
        },
        "deviceStatus": {
          "description": "Status of the device.",
          "type": "string"
        },
        "blacklist": {
          "type": "object",
          "$ref": "#/definitions/ExchangeBlacklist"
        },
        "sku": {
          "description": "The sku of the device offer variant.  Only relevant if the customer purchased the device from T-Mobile.",
          "type": "string"
        },
        "portIn": {
          "type": "object",
          "$ref": "#/definitions/ExchangePortIn"
        },
        "scheduleChange": {
          "description": "It indicates WHEN the change should occur, NOW or FUTURE",
          "type": "string"
        },
        "cancelAllPendingFeatureChanges": {
          "description": "If true, cancel all pending feature changes.",
          "type": "boolean"
        },
        "promotions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangePromotions_1"
          }
        },
        "fulfillmentType": {
          "description": "Describes how the order line is fulfilled,  in a retail store or shipped to the customer.",
          "type": "string"
        },
        "effectiveStartTime": {
          "description": "Indicates date and time when the order changes should become effective",
          "type": "string",
          "format": "date-time"
        },
        "activationFeeWaiver": {
          "description": "To indicate if customer is eligible for activation fee waiver.",
          "type": "boolean"
        },
        "expirationTime": {
          "description": "Expiration time for plans and optional features",
          "type": "string",
          "format": "date-time"
        },
        "npa": {
          "description": "NPA. The first three digits of a ten digit phone number. Commonly called the area code in the United States.",
          "type": "string"
        },
        "nxx": {
          "description": "NXX. The first three digits of a seven digit phone number. Commonly called the exchange in the United States.",
          "type": "string"
        },
        "localRoutingNumber": {
          "description": "Local routing number (LRN), consists of NPA-NXX",
          "type": "string"
        },
        "oneTimeCredits": {
          "description": "One time credit",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeOneTimeCredits"
          }
        },
        "printReceiptIndicator": {
          "description": "To indicate if the quote item is eligible to print receipt.",
          "type": "boolean"
        },
        "newMsisdn": {
          "description": "New MSISDN or phone number. For phone number change or port in.",
          "type": "string"
        },
        "feeWaiveReason": {
          "description": "Reason for fee waiving.",
          "type": "string"
        },
        "tradeInQuoteId": {
          "description": "Quote identification for trade in",
          "type": "string"
        },
        "quoteStatus": {
          "description": "Status of the quote",
          "type": "string"
        },
        "quoteAmount": {
          "description": "Quote amount",
          "type": "number",
          "format": "double"
        },
        "returnAuthorizationNumber": {
          "description": "Return material authorization (RMA) number.",
          "type": "string"
        },
        "eligibilityIndicator": {
          "description": "Flag indicating whether the determination is eligible or ineligible.",
          "type": "boolean"
        },
        "eligibilityStatus": {
          "description": "Code identifying the status of eligibility that was determined.",
          "type": "string"
        },
        "eligibilityType": {
          "description": "The type of eligibility being established.",
          "type": "string"
        },
        "ineligibleReasons": {
          "description": "The reason for ineligibility.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeIneligibleReasons_1"
          }
        },
        "validations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeValidations"
          }
        },
        "provisioningMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeProvisioningMessages"
          }
        },
        "relatedLines": {
          "description": "Related order lines",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeRelatedLines"
          }
        },
        "shippingDetail": {
          "description": "Shipping details",
          "type": "object",
          "$ref": "#/definitions/ExchangeShippingDetail"
        }
      }
    },
    "ExchangePagination": {
      "type": "object",
      "properties": {
        "pageNumber": {
          "description": "Page number",
          "type": "integer",
          "format": "int32"
        },
        "totalRecordCount": {
          "description": "Total number of records",
          "type": "integer",
          "format": "int32"
        },
        "totalPage": {
          "description": "Total number of pages",
          "type": "integer",
          "format": "int32"
        },
        "currentPageItem": {
          "description": "Number of items in this page",
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "description": "Page size",
          "type": "integer",
          "format": "int32"
        },
        "current": {
          "description": "Link to current page",
          "type": "string"
        },
        "next": {
          "description": "Link to next page",
          "type": "string"
        },
        "previous": {
          "description": "Link to previous page",
          "type": "string"
        }
      }
    },
    "ExchangePortIn": {
      "type": "object",
      "properties": {
        "portRequestId": {
          "description": "The unique identifier for port request.",
          "type": "string"
        },
        "msisdn": {
          "type": "string"
        },
        "portDueTime": {
          "type": "string",
          "format": "date-time"
        },
        "oldServiceProvider": {
          "description": "The actual carrier that is giving up the number.",
          "type": "string"
        },
        "oldServiceProviderName": {
          "type": "string"
        },
        "oldVirtualServiceProvider": {
          "description": "The organization that was carrying the customers contract for the phone number that is being moved, if it was not the actual service provider.",
          "type": "string"
        },
        "oldVirtualServiceProviderId": {
          "type": "string"
        },
        "oldVirtualServiceProviderName": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "portStatus": {
          "description": "Status of port",
          "type": "string"
        },
        "transitionalMSISDN": {
          "description": "The temporary MSISDN used to give the subscriber service while waiting for the port to complete.",
          "type": "string"
        },
        "contactName": {
          "description": "reference contact name to call in case of port in concerns.",
          "type": "string"
        },
        "contactPhone": {
          "description": "reference number to call in case of port in concerns.",
          "type": "string"
        },
        "oldServiceAccountNumber": {
          "description": "Old service provider account number.",
          "type": "string"
        },
        "eligibilityIndicator": {
          "description": "Flag indicating whether the determination is eligible or ineligible.",
          "type": "boolean"
        },
        "eligibilityStatus": {
          "description": "Code identifying the status of eligibility that was determined.",
          "type": "string"
        },
        "eligibilityType": {
          "description": "The type of eligibility being established.",
          "type": "string"
        },
        "ineligibleReasons": {
          "description": "The reason for ineligibility.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeIneligibleReasons"
          }
        }
      }
    },
    "ExchangePriceComponents": {
      "type": "object",
      "properties": {
        "priceComponentId": {
          "description": "Identifier of price component, or charge sequence number",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "description": "Description of price component",
          "type": "string"
        },
        "productChargeType": {
          "description": "Type of price component",
          "type": "string"
        },
        "amount": {
          "description": "Dollar amount of price to be charged",
          "type": "number",
          "format": "double"
        },
        "basisAmount": {
          "type": "number",
          "format": "double"
        },
        "usageMeasurementUnit": {
          "type": "string"
        },
        "discountAmount": {
          "type": "number",
          "format": "double"
        },
        "frequency": {
          "description": "Categorizes the price component frequency as one time or recurring.",
          "type": "string"
        },
        "promotionId": {
          "type": "string"
        },
        "expirationDate": {
          "description": "Expiration date",
          "type": "string",
          "format": "date"
        }
      }
    },
    "ExchangePriceComponents_1": {
      "type": "object",
      "properties": {
        "priceComponentId": {
          "description": "Identifier of price component, or charge sequence number",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "description": "Description of price component",
          "type": "string"
        },
        "productChargeType": {
          "description": "Type of price component",
          "type": "string"
        },
        "amount": {
          "description": "Dollar amount of price to be charged",
          "type": "number",
          "format": "double"
        },
        "basisAmount": {
          "type": "number",
          "format": "double"
        },
        "usageMeasurementUnit": {
          "type": "string"
        },
        "discountAmount": {
          "type": "number",
          "format": "double"
        },
        "frequency": {
          "description": "Categorizes the price component frequency as one time or recurring.",
          "type": "string"
        },
        "promotionId": {
          "type": "string"
        },
        "expirationDate": {
          "description": "Expiration date",
          "type": "string",
          "format": "date"
        }
      }
    },
    "ExchangePriceComponents_2": {
      "type": "object",
      "properties": {
        "priceComponentId": {
          "description": "Identifier of price component, or charge sequence number",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "description": "Description of price component",
          "type": "string"
        },
        "productChargeType": {
          "description": "Type of price component",
          "type": "string"
        },
        "amount": {
          "description": "Dollar amount of price to be charged",
          "type": "number",
          "format": "double"
        },
        "basisAmount": {
          "type": "number",
          "format": "double"
        },
        "usageMeasurementUnit": {
          "type": "string"
        },
        "discountAmount": {
          "type": "number",
          "format": "double"
        },
        "frequency": {
          "description": "Categorizes the price component frequency as one time or recurring.",
          "type": "string"
        },
        "promotionId": {
          "type": "string"
        },
        "expirationDate": {
          "description": "Expiration date",
          "type": "string",
          "format": "date"
        }
      }
    },
    "ExchangePriceComponents_3": {
      "type": "object",
      "properties": {
        "priceComponentId": {
          "description": "Identifier of price component, or charge sequence number",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "description": "Description of price component",
          "type": "string"
        },
        "productChargeType": {
          "description": "Type of price component",
          "type": "string"
        },
        "amount": {
          "description": "Dollar amount of price to be charged",
          "type": "number",
          "format": "double"
        },
        "basisAmount": {
          "type": "number",
          "format": "double"
        },
        "usageMeasurementUnit": {
          "type": "string"
        },
        "discountAmount": {
          "type": "number",
          "format": "double"
        },
        "frequency": {
          "description": "Categorizes the price component frequency as one time or recurring.",
          "type": "string"
        },
        "promotionId": {
          "type": "string"
        },
        "expirationDate": {
          "description": "Expiration date",
          "type": "string",
          "format": "date"
        }
      }
    },
    "ExchangePriceComponents_4": {
      "type": "object",
      "properties": {
        "priceComponentId": {
          "description": "Identifier of price component, or charge sequence number",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "description": "Description of price component",
          "type": "string"
        },
        "productChargeType": {
          "description": "Type of price component",
          "type": "string"
        },
        "amount": {
          "description": "Dollar amount of price to be charged",
          "type": "number",
          "format": "double"
        },
        "basisAmount": {
          "type": "number",
          "format": "double"
        },
        "usageMeasurementUnit": {
          "type": "string"
        },
        "discountAmount": {
          "type": "number",
          "format": "double"
        },
        "frequency": {
          "description": "Categorizes the price component frequency as one time or recurring.",
          "type": "string"
        },
        "promotionId": {
          "type": "string"
        },
        "expirationDate": {
          "description": "Expiration date",
          "type": "string",
          "format": "date"
        }
      }
    },
    "ExchangePriceComponents_5": {
      "type": "object",
      "properties": {
        "priceComponentId": {
          "description": "Identifier of price component, or charge sequence number",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "description": "Description of price component",
          "type": "string"
        },
        "productChargeType": {
          "description": "Type of price component",
          "type": "string"
        },
        "amount": {
          "description": "Dollar amount of price to be charged",
          "type": "number",
          "format": "double"
        },
        "basisAmount": {
          "type": "number",
          "format": "double"
        },
        "usageMeasurementUnit": {
          "type": "string"
        },
        "discountAmount": {
          "type": "number",
          "format": "double"
        },
        "frequency": {
          "description": "Categorizes the price component frequency as one time or recurring.",
          "type": "string"
        },
        "promotionId": {
          "type": "string"
        },
        "expirationDate": {
          "description": "Expiration date",
          "type": "string",
          "format": "date"
        }
      }
    },
    "ExchangePricePointCriteria": {
      "type": "object",
      "properties": {
        "allowedOrderTypes": {
          "description": "Upgrade, New Activation, etc..",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowedOrderSubTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "additionalRequiredOffers": {
          "description": "Other offers that must be purchased in the same transaction for this price point.  Example:   An EIP offer or equipment lease offer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeAdditionalRequiredOffers"
          }
        },
        "offerCategory": {
          "description": "The category of plan offer that a line of service must have in order to qualify for this multi-line price point.",
          "type": "string"
        },
        "offerSubCategory1": {
          "description": "The second-level category of plan offer that a line of service must have in order to qualify for this multi-line price point.",
          "type": "string"
        },
        "beginningLineOfServiceNumber": {
          "description": "For network service offers that have tiered pricing, the beginning line number for this price point.  For example if a service costs $10 for the first 2 lines, the beginning value is 1 and the ending value is 2.",
          "type": "integer",
          "format": "int32"
        },
        "endingLineOfServiceNumber": {
          "description": "For network service offers that have tiered pricing, the ending line number for this price point.  For example if a service costs $10 for the first 2 lines, the beginning value is 1 and the ending value is 2.",
          "type": "integer",
          "format": "int32"
        },
        "financingProgramType": {
          "description": "Financing program type, such as loan or lease.  Same as the productSubType in offer.",
          "type": "string"
        },
        "creditRiskProfileId": {
          "description": "Unique identifier generated from risk system which is derived from multple business inputs -creditscore, tenure and payment history etc.",
          "type": "string"
        }
      }
    },
    "ExchangePricePointCriteria_1": {
      "type": "object",
      "properties": {
        "allowedOrderTypes": {
          "description": "Upgrade, New Activation, etc..",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowedOrderSubTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "additionalRequiredOffers": {
          "description": "Other offers that must be purchased in the same transaction for this price point.  Example:   An EIP offer or equipment lease offer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeAdditionalRequiredOffers_1"
          }
        },
        "offerCategory": {
          "description": "The category of plan offer that a line of service must have in order to qualify for this multi-line price point.",
          "type": "string"
        },
        "offerSubCategory1": {
          "description": "The second-level category of plan offer that a line of service must have in order to qualify for this multi-line price point.",
          "type": "string"
        },
        "beginningLineOfServiceNumber": {
          "description": "For network service offers that have tiered pricing, the beginning line number for this price point.  For example if a service costs $10 for the first 2 lines, the beginning value is 1 and the ending value is 2.",
          "type": "integer",
          "format": "int32"
        },
        "endingLineOfServiceNumber": {
          "description": "For network service offers that have tiered pricing, the ending line number for this price point.  For example if a service costs $10 for the first 2 lines, the beginning value is 1 and the ending value is 2.",
          "type": "integer",
          "format": "int32"
        },
        "financingProgramType": {
          "description": "Financing program type, such as loan or lease.  Same as the productSubType in offer.",
          "type": "string"
        },
        "creditRiskProfileId": {
          "description": "Unique identifier generated from risk system which is derived from multple business inputs -creditscore, tenure and payment history etc.",
          "type": "string"
        }
      }
    },
    "ExchangePricePointCriteria_2": {
      "type": "object",
      "properties": {
        "allowedOrderTypes": {
          "description": "Upgrade, New Activation, etc..",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowedOrderSubTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "additionalRequiredOffers": {
          "description": "Other offers that must be purchased in the same transaction for this price point.  Example:   An EIP offer or equipment lease offer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeAdditionalRequiredOffers_2"
          }
        },
        "offerCategory": {
          "description": "The category of plan offer that a line of service must have in order to qualify for this multi-line price point.",
          "type": "string"
        },
        "offerSubCategory1": {
          "description": "The second-level category of plan offer that a line of service must have in order to qualify for this multi-line price point.",
          "type": "string"
        },
        "beginningLineOfServiceNumber": {
          "description": "For network service offers that have tiered pricing, the beginning line number for this price point.  For example if a service costs $10 for the first 2 lines, the beginning value is 1 and the ending value is 2.",
          "type": "integer",
          "format": "int32"
        },
        "endingLineOfServiceNumber": {
          "description": "For network service offers that have tiered pricing, the ending line number for this price point.  For example if a service costs $10 for the first 2 lines, the beginning value is 1 and the ending value is 2.",
          "type": "integer",
          "format": "int32"
        },
        "financingProgramType": {
          "description": "Financing program type, such as loan or lease.  Same as the productSubType in offer.",
          "type": "string"
        },
        "creditRiskProfileId": {
          "description": "Unique identifier generated from risk system which is derived from multple business inputs -creditscore, tenure and payment history etc.",
          "type": "string"
        }
      }
    },
    "ExchangePrices": {
      "type": "object",
      "properties": {
        "priceListLineId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "offeringPriceType": {
          "description": "Categorization of the price point.",
          "type": "string"
        },
        "oneTimeCharges": {
          "description": "One-time charges/discounts for the price point are listed here.  Examples: charges for an on-demand data pass or equipment purchase.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeOneTimeCharges"
          }
        },
        "recurringChargeDetail": {
          "description": "For type of recurring charge, the schedule of amounts and discounts of the price point are listed here.  Examples:  monthly MRC charges, or equipment lease/finance.",
          "type": "object",
          "$ref": "#/definitions/ExchangeRecurringChargeDetail"
        },
        "pricePointCriteria": {
          "type": "object",
          "$ref": "#/definitions/ExchangePricePointCriteria"
        },
        "canModifyPrice": {
          "description": "When fales, the price can never be overridden even by representatives with the appropriate authority.",
          "type": "boolean"
        },
        "taxInclusiveIndicator": {
          "description": "When true indicates the price reflects the total after tax.",
          "type": "boolean"
        },
        "specifications": {
          "description": "Named value pair",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeSpecifications_1"
          }
        },
        "futureDatedPaymentIndicator": {
          "description": "To indicate if the payment can be made in the future.",
          "type": "boolean"
        }
      }
    },
    "ExchangePrices_1": {
      "type": "object",
      "properties": {
        "priceListLineId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "offeringPriceType": {
          "description": "Categorization of the price point.",
          "type": "string"
        },
        "oneTimeCharges": {
          "description": "One-time charges/discounts for the price point are listed here.  Examples: charges for an on-demand data pass or equipment purchase.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeOneTimeCharges_1"
          }
        },
        "recurringChargeDetail": {
          "description": "For type of recurring charge, the schedule of amounts and discounts of the price point are listed here.  Examples:  monthly MRC charges, or equipment lease/finance.",
          "type": "object",
          "$ref": "#/definitions/ExchangeRecurringChargeDetail_1"
        },
        "pricePointCriteria": {
          "type": "object",
          "$ref": "#/definitions/ExchangePricePointCriteria_1"
        },
        "canModifyPrice": {
          "description": "When fales, the price can never be overridden even by representatives with the appropriate authority.",
          "type": "boolean"
        },
        "taxInclusiveIndicator": {
          "description": "When true indicates the price reflects the total after tax.",
          "type": "boolean"
        },
        "specifications": {
          "description": "Named value pair",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeSpecifications_2"
          }
        },
        "futureDatedPaymentIndicator": {
          "description": "To indicate if the payment can be made in the future.",
          "type": "boolean"
        }
      }
    },
    "ExchangeProductConflicts": {
      "type": "object",
      "properties": {
        "orderLineId": {
          "description": "Identifier of order line",
          "type": "string"
        },
        "conflictLevel": {
          "description": "Level of the product conflict.  ACCOUNT, LINE, PRODUCT.",
          "type": "string"
        },
        "conflictType": {
          "description": "Type of conflict",
          "type": "string"
        },
        "autoResolvableIndicator": {
          "description": "Indicates whether the conflict can be resolve automatically by the backend.",
          "type": "boolean"
        },
        "offerId": {
          "description": "Unique identifier of the offer that has a conflicting product.",
          "type": "string"
        },
        "offerSequenceNumber": {
          "description": "For postpaid accounts, required to correctly identify the conflicting product on a customers account or line of service.",
          "type": "integer",
          "format": "int32"
        },
        "offerDescription": {
          "description": "Description of the conflicting offer.",
          "type": "string"
        },
        "productType": {
          "description": "Product type of the conflicting product.",
          "type": "string"
        },
        "productSubTypes": {
          "description": "Product sub type of the conflicting product.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "specifications": {
          "description": "Named value pairs. Additional details about the conflicting product.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeSpecifications_6"
          }
        },
        "accountNumber": {
          "description": "Account number that has the conflicting product.  Used when there is not a cart item for the conflicting product.",
          "type": "string"
        },
        "phoneNumber": {
          "description": "Used to identify the line of service (phone number) that has the conflicting product.  Used when there is not a cart item for the conflicting product.",
          "type": "string"
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "errors": {
      "type": "object",
      "properties": {
        "error": {
          "description": "Used to pass error information in a response.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseError"
          }
        }
      }
    },
    "ResponseError": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "userMessage": {
          "type": "string"
        },
        "systemMessage": {
          "type": "string"
        }
      }
    },
    "ExchangeProducts": {
      "type": "object",
      "properties": {
        "productId": {
          "description": "Uniquely identifies a known product.",
          "type": "string"
        },
        "productName": {
          "description": "The common name of the product, as defined in the product catalog.",
          "type": "string"
        },
        "productKeywords": {
          "description": "Words used in searches for the product.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "description": "Description of the product",
          "type": "string"
        },
        "shortDescription": {
          "description": "Short description of the product",
          "type": "string"
        },
        "longDescription": {
          "description": "Long description of the product",
          "type": "string"
        },
        "serviceProvider": {
          "description": "Service provider for the device",
          "type": "string"
        },
        "manufacturer": {
          "description": "Device manufacturer name",
          "type": "string"
        },
        "model": {
          "description": "Device model name",
          "type": "string"
        },
        "variants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeVariants"
          }
        },
        "images": {
          "description": "Images associated with one or more variants of the product.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeImages"
          }
        },
        "tacCodes": {
          "description": "The Type Allocation Code (TAC) is the initial eight-digit portion of the 15-digit IMEI and 16-digit IMEISV codes used to uniquely identify wireless devices.  Each TAC code can be used by one or more variant of the equipment product.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeTacCodes"
          }
        },
        "marketingFeatures": {
          "description": "An organized list of capabilities and functionality that T-Mobile wants to highlight for sales and marketing purposes.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeMarketingFeatures"
          }
        },
        "equipmentSpecifications": {
          "description": "Groups of physical and operational details that are usually provided by the equipment manufacturer.  For example, physical dimensions, operating system specs.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeEquipmentSpecifications"
          }
        },
        "specifications": {
          "description": "Product named value pairs",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeSpecifications_4"
          }
        }
      }
    },
    "ExchangePromotionalBenefits": {
      "type": "object",
      "properties": {
        "benefitCategory": {
          "description": "Benefit category,  such as discount, free feature etc.",
          "type": "string"
        },
        "numberOfOccurrences": {
          "description": "Number of times this promotional benefit can be claimed by customer.",
          "type": "integer",
          "format": "int32"
        },
        "unlimitedOccurrenceIndicator": {
          "description": "Indicates that promotional benefit can be availed unlimited number of times.",
          "type": "boolean"
        },
        "scope": {
          "description": "Defines if the occurrence of the promotion apply to line, account, or customer",
          "type": "string"
        },
        "currentOccurrence": {
          "description": "Specify the number of times a specific customer has already received the promotional benefit.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ExchangePromotionEffectivePeriod": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ExchangePromotionEffectivePeriod_1": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ExchangePromotionEffectivePeriod_2": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ExchangePromotionEffectivePeriod_3": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ExchangePromotions": {
      "type": "object",
      "properties": {
        "promotionId": {
          "description": "The unique id of the promotion.",
          "type": "string"
        },
        "shortDescription": {
          "description": "Short description",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "promotionEffectivePeriod": {
          "description": "The time period where the Promotion is effective.",
          "type": "object",
          "$ref": "#/definitions/ExchangePromotionEffectivePeriod"
        },
        "name": {
          "description": "Commonly used name of the Promotion, as defined in the Product Catalog.",
          "type": "string"
        },
        "link": {
          "description": "Link to the promotion object.",
          "type": "string"
        },
        "code": {
          "description": "Code for this promotion. It is different from promotion ID.",
          "type": "string"
        },
        "type": {
          "description": "Defines whether the promotion is manually or automatically added to a cart/order.",
          "type": "string"
        },
        "displayOrder": {
          "description": "Order or sequence to display",
          "type": "integer",
          "format": "int32"
        },
        "oneTimeOnlyIndicator": {
          "description": "Indicates whether this promotion may be applied more than once for the same customer. True if it may only be used once.",
          "type": "boolean"
        },
        "legalDisclosure": {
          "description": "Disclaimers or any other textual information that must be displayed to customers for legal reasons.",
          "type": "string"
        },
        "serializedCouponAllowedIndicator": {
          "description": "True when a customer can use a serialized coupon code to fulfill eligibilty requirements for the promotion.",
          "type": "boolean"
        },
        "realizationMethod": {
          "description": "The way that the promotion is delivered to the customer.",
          "type": "string"
        },
        "realizationSubMethod": {
          "description": "The detailed catagory on how the promotion is delivered to the customer.",
          "type": "string"
        },
        "promotionalBenefits": {
          "description": "Describes the consideration given to the customer with the promotion.  For example a discount or free product.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangePromotionalBenefits"
          }
        },
        "discount": {
          "description": "Discount of the promotion",
          "type": "object",
          "$ref": "#/definitions/ExchangeDiscount"
        },
        "conflictingPromotions": {
          "description": "Conflicting promotions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeConflictingPromotions"
          }
        },
        "eligibleAccessories": {
          "description": "Eligible accessories to receive the promotion",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeEligibleAccessories"
          }
        },
        "eligibleDevices": {
          "description": "Eligible devices for the promotion",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeEligibleDevices"
          }
        }
      }
    },
    "ExchangePromotions_1": {
      "type": "object",
      "properties": {
        "actionCode": {
          "type": "string"
        },
        "promotionId": {
          "description": "The unique id of the promotion.",
          "type": "string"
        },
        "shortDescription": {
          "description": "Short description",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "promotionEffectivePeriod": {
          "description": "The time period where the Promotion is effective.",
          "type": "object",
          "$ref": "#/definitions/ExchangePromotionEffectivePeriod_2"
        },
        "customerSpecificDetails": {
          "description": "Named value pairs specific to the customer",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeCustomerSpecificDetails"
          }
        }
      }
    },
    "ExchangeProvisioningMessages": {
      "type": "object",
      "properties": {
        "level": {
          "description": "Validation level",
          "type": "string"
        },
        "code": {
          "description": "Validation code",
          "type": "string"
        },
        "category": {
          "description": "Validation category",
          "type": "string"
        },
        "message": {
          "description": "Validation message",
          "type": "string"
        },
        "entityIdentifier": {
          "type": "string"
        },
        "entityName": {
          "type": "string"
        },
        "identiferName": {
          "type": "string"
        },
        "relationshipType": {
          "type": "string"
        }
      }
    },
    "ExchangeRecurringChargeDetail": {
      "type": "object",
      "properties": {
        "periodType": {
          "description": "Monthly, daily, etc...",
          "type": "string"
        },
        "recurringCharges": {
          "description": "List of recurring charge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeRecurringCharges"
          }
        }
      }
    },
    "ExchangeRecurringChargeDetail_1": {
      "type": "object",
      "properties": {
        "periodType": {
          "description": "Monthly, daily, etc...",
          "type": "string"
        },
        "recurringCharges": {
          "description": "List of recurring charge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeRecurringCharges_1"
          }
        }
      }
    },
    "ExchangeRecurringChargeDetail_2": {
      "type": "object",
      "properties": {
        "periodType": {
          "description": "Monthly, daily, etc...",
          "type": "string"
        },
        "recurringCharges": {
          "description": "List of recurring charge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeRecurringCharges_2"
          }
        }
      }
    },
    "ExchangeRecurringCharges": {
      "type": "object",
      "properties": {
        "startingPeriodNumber": {
          "type": "integer",
          "format": "int32"
        },
        "endingPeriodNumber": {
          "type": "integer",
          "format": "int32"
        },
        "amount": {
          "description": "The price to be charged in dollars, inclusive of all discount(s).  periodicAmount = basisPeriodicAmount minus discountAmount(s)",
          "type": "number",
          "format": "double"
        },
        "basisAmount": {
          "description": "The price to be charged in dollars, before any discount(s).",
          "type": "number",
          "format": "double"
        },
        "discountAmount": {
          "description": "Total amount of discounts, in dollars, that is included in the periodicAmount.",
          "type": "number",
          "format": "double"
        },
        "productChargeIncurredType": {
          "description": "Specifies the timing for when the first charge is incurred for the product: immediate, on usage, or on demand.",
          "type": "string"
        },
        "proratedAmount": {
          "description": "This is the cost that the customer would need to pay in order to add this feature to their current account effective immediately. it is prorated from the current date until the end of the current cycle.",
          "type": "number",
          "format": "double"
        },
        "priceComponents": {
          "description": "The details of charges and deductions that comprise the recurring charge.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangePriceComponents_1"
          }
        },
        "adjustedNumberOfInstallaments": {
          "description": "Number of payment installments adjusted by client.",
          "type": "integer",
          "format": "int32"
        },
        "originalNumberOfInstallaments": {
          "description": "Number of payment installments before it is adjusted.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ExchangeRecurringCharges_1": {
      "type": "object",
      "properties": {
        "startingPeriodNumber": {
          "type": "integer",
          "format": "int32"
        },
        "endingPeriodNumber": {
          "type": "integer",
          "format": "int32"
        },
        "amount": {
          "description": "The price to be charged in dollars, inclusive of all discount(s).  periodicAmount = basisPeriodicAmount minus discountAmount(s)",
          "type": "number",
          "format": "double"
        },
        "basisAmount": {
          "description": "The price to be charged in dollars, before any discount(s).",
          "type": "number",
          "format": "double"
        },
        "discountAmount": {
          "description": "Total amount of discounts, in dollars, that is included in the periodicAmount.",
          "type": "number",
          "format": "double"
        },
        "productChargeIncurredType": {
          "description": "Specifies the timing for when the first charge is incurred for the product: immediate, on usage, or on demand.",
          "type": "string"
        },
        "proratedAmount": {
          "description": "This is the cost that the customer would need to pay in order to add this feature to their current account effective immediately. it is prorated from the current date until the end of the current cycle.",
          "type": "number",
          "format": "double"
        },
        "priceComponents": {
          "description": "The details of charges and deductions that comprise the recurring charge.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangePriceComponents_3"
          }
        },
        "adjustedNumberOfInstallaments": {
          "description": "Number of payment installments adjusted by client.",
          "type": "integer",
          "format": "int32"
        },
        "originalNumberOfInstallaments": {
          "description": "Number of payment installments before it is adjusted.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ExchangeRecurringCharges_2": {
      "type": "object",
      "properties": {
        "startingPeriodNumber": {
          "type": "integer",
          "format": "int32"
        },
        "endingPeriodNumber": {
          "type": "integer",
          "format": "int32"
        },
        "amount": {
          "description": "The price to be charged in dollars, inclusive of all discount(s).  periodicAmount = basisPeriodicAmount minus discountAmount(s)",
          "type": "number",
          "format": "double"
        },
        "basisAmount": {
          "description": "The price to be charged in dollars, before any discount(s).",
          "type": "number",
          "format": "double"
        },
        "discountAmount": {
          "description": "Total amount of discounts, in dollars, that is included in the periodicAmount.",
          "type": "number",
          "format": "double"
        },
        "productChargeIncurredType": {
          "description": "Specifies the timing for when the first charge is incurred for the product: immediate, on usage, or on demand.",
          "type": "string"
        },
        "proratedAmount": {
          "description": "This is the cost that the customer would need to pay in order to add this feature to their current account effective immediately. it is prorated from the current date until the end of the current cycle.",
          "type": "number",
          "format": "double"
        },
        "priceComponents": {
          "description": "The details of charges and deductions that comprise the recurring charge.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangePriceComponents_5"
          }
        },
        "adjustedNumberOfInstallaments": {
          "description": "Number of payment installments adjusted by client.",
          "type": "integer",
          "format": "int32"
        },
        "originalNumberOfInstallaments": {
          "description": "Number of payment installments before it is adjusted.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ExchangeRelatedLines": {
      "type": "object",
      "properties": {
        "orderLineId": {
          "description": "Identifier of order line",
          "type": "string"
        },
        "relationshipType": {
          "type": "string"
        },
        "offerId": {
          "description": "Unique identifier of the related offer item.",
          "type": "string"
        },
        "offerDescription": {
          "description": "Description of the related  offer item.",
          "type": "string"
        }
      }
    },
    "ExchangeRequestedDelivery": {
      "type": "object",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "ExchangeRequiredOffers": {
      "type": "object",
      "properties": {
        "relationshipType": {
          "description": "The type of relationship between the two offers.",
          "type": "string"
        },
        "link": {
          "description": "A link to the offer that is related to this one.",
          "type": "string"
        },
        "relatedOfferId": {
          "description": "The id of the offer that is related to this one.",
          "type": "string"
        },
        "relatedOfferName": {
          "description": "The name of the offer that is related to this one.",
          "type": "string"
        },
        "displayPriority": {
          "description": "Display priority or sequence",
          "type": "integer",
          "format": "int32"
        },
        "minimumNumberOfLines": {
          "description": "Minimum number of lines needed for eligibility.",
          "type": "integer",
          "format": "int32"
        },
        "maximumNumberOfLines": {
          "description": "Maximum number of lines allowed to be eligible.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ExchangeShipFrom": {
      "type": "object",
      "properties": {
        "fullName": {
          "description": "The full name of the person, including first, middle, and family names.",
          "type": "string"
        },
        "firstName": {
          "description": "The given name or first name of the person",
          "type": "string"
        },
        "middleName": {
          "description": "The middle name or middle initial of the person.",
          "type": "string"
        },
        "familyName": {
          "description": "The family name or surname or last name of the person.",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        },
        "suffix": {
          "type": "string"
        },
        "addressId": {
          "description": "Identifier of address.",
          "type": "string"
        },
        "purposes": {
          "description": "The purpose or usage context for which the address should be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addressLine1": {
          "description": "The first line of the address, required.",
          "type": "string"
        },
        "addressLine2": {
          "description": "The second line of the address, optional.",
          "type": "string"
        },
        "addressLine3": {
          "description": "The third line of the address, optional.",
          "type": "string"
        },
        "cityName": {
          "description": "The name of the city in the mailing address. For military or diplomatic addresses should contain FPO, APO, or DPO.",
          "type": "string"
        },
        "stateCode": {
          "description": "The two letter state code.",
          "type": "string"
        },
        "zip": {
          "description": "The 5 digit zip or postal delivery code.",
          "type": "string"
        },
        "zipExt": {
          "description": "The zip or postal delivery extension.",
          "type": "string"
        },
        "countryCode": {
          "description": "Country code",
          "type": "string"
        },
        "geoCode": {
          "description": "A unique code that represents a geospatial coordinate measurement of an exact geographic location and time at, below, or above the surface of the earth",
          "type": "string"
        },
        "addressFormatType": {
          "type": "string"
        }
      }
    },
    "ExchangeShippingAddress": {
      "type": "object",
      "properties": {
        "addressId": {
          "description": "Identifier of address.",
          "type": "string"
        },
        "purposes": {
          "description": "The purpose or usage context for which the address should be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addressLine1": {
          "description": "The first line of the address, required.",
          "type": "string"
        },
        "addressLine2": {
          "description": "The second line of the address, optional.",
          "type": "string"
        },
        "addressLine3": {
          "description": "The third line of the address, optional.",
          "type": "string"
        },
        "cityName": {
          "description": "The name of the city in the mailing address. For military or diplomatic addresses should contain FPO, APO, or DPO.",
          "type": "string"
        },
        "stateCode": {
          "description": "The two letter state code.",
          "type": "string"
        },
        "zip": {
          "description": "The 5 digit zip or postal delivery code.",
          "type": "string"
        },
        "zipExt": {
          "description": "The zip or postal delivery extension.",
          "type": "string"
        },
        "countryCode": {
          "description": "Country code",
          "type": "string"
        },
        "geoCode": {
          "description": "A unique code that represents a geospatial coordinate measurement of an exact geographic location and time at, below, or above the surface of the earth",
          "type": "string"
        },
        "addressFormatType": {
          "type": "string"
        },
        "default": {
          "description": "Flags the address to be used for default communications.",
          "type": "string"
        },
        "validationStatus": {
          "description": "Specifies whether the address is VALIDATED, NONVALIDATED, or UNDELIVERABLE.",
          "type": "string"
        },
        "overwritten": {
          "description": "Flags whether the provided address has been overwritten by the system.",
          "type": "boolean"
        },
        "classification": {
          "description": "Classification of the address",
          "type": "string"
        },
        "label": {
          "description": "Address label",
          "type": "string"
        },
        "addressLine4": {
          "description": "The fourth free form line, expressed as text, of an address",
          "type": "string"
        },
        "stateName": {
          "description": "Name of the state",
          "type": "string"
        },
        "provinceName": {
          "description": "Name of the province",
          "type": "string"
        },
        "provinceCode": {
          "description": "Province code",
          "type": "string"
        },
        "countyName": {
          "description": "Name of the county",
          "type": "string"
        },
        "countyCode": {
          "description": "County code",
          "type": "string"
        },
        "attention": {
          "description": "Attention of the address",
          "type": "string"
        },
        "careOf": {
          "description": "The name, expressed as text, of a person or organization at this address to whom incoming mail is marked with words such as care of or C/O",
          "type": "string"
        },
        "postalCode": {
          "description": "A code specifying the postal code of the address",
          "type": "string"
        },
        "uncertaintyIndicator": {
          "description": "To indicate if the address is uncertain or not",
          "type": "boolean"
        },
        "geographicCoordinate": {
          "description": "The latitude and longitude of the geographic location that corresponds to the address.",
          "type": "object",
          "$ref": "#/definitions/ExchangeGeographicCoordinate"
        },
        "urbanization": {
          "description": "Urbanization name or code",
          "type": "string"
        }
      }
    },
    "ExchangeShippingDetail": {
      "type": "object",
      "properties": {
        "shippingId": {
          "description": "Uniquely identifies a shipping details record.",
          "type": "string"
        },
        "trackingNumber": {
          "description": "Tracking number provided by the freight carrier.",
          "type": "string"
        },
        "shippingDate": {
          "description": "Date of the shipment.",
          "type": "string",
          "format": "date"
        },
        "trackingUrl": {
          "description": "URL provided by the freight carrier to track the progress of the shipment.",
          "type": "string"
        },
        "freightCarrier": {
          "description": "Name of the freight carrier.",
          "type": "string"
        },
        "description": {
          "description": "Brief description of the shipping option, eg: UPS Ground (5-7 business days)",
          "type": "string"
        },
        "serviceLevelCode": {
          "description": "Shipping carrier priority code such as 2nd day, next day, priority, etc.",
          "type": "string"
        },
        "shippingCharge": {
          "description": "Charge for the shipping option.",
          "type": "number",
          "format": "double"
        },
        "waiverIndicator": {
          "description": "To indicate if shipping charges can be waived by client, or if shaiiping charge is waived in actual order.",
          "type": "boolean"
        },
        "taxExemptionIndicator": {
          "description": "To indicate if tax can be exempted for the shipping charges when overall tax is calculated, or to indicate if shipping tax is exempted in actual order.",
          "type": "boolean"
        },
        "shippingDiscountAmount": {
          "description": "Discount amount for shipping.",
          "type": "number",
          "format": "double"
        },
        "shippingDiscountPercent": {
          "description": "Discount by percentage for shipping",
          "type": "number",
          "format": "double"
        },
        "shipTo": {
          "description": "Shipping to contact information",
          "type": "object",
          "$ref": "#/definitions/ExchangeShipTo"
        },
        "shipFrom": {
          "description": "Shipping from contact information",
          "type": "object",
          "$ref": "#/definitions/ExchangeShipFrom"
        },
        "estimatedDelivery": {
          "description": "Estimated delivery date.",
          "type": "object",
          "$ref": "#/definitions/ExchangeEstimatedDelivery"
        },
        "expectedDelivery": {
          "description": "The date when the customer expect for delivery, updated from the shipper.",
          "type": "object",
          "$ref": "#/definitions/ExchangeExpectedDelivery"
        },
        "requestedDelivery": {
          "description": "Requested delivery date from customer",
          "type": "object",
          "$ref": "#/definitions/ExchangeRequestedDelivery"
        },
        "shippingLabelUrl": {
          "description": "URL that directs to the actual shipping lable.",
          "type": "string"
        },
        "estimatedShipment": {
          "description": "Estimated shipment date",
          "type": "object",
          "$ref": "#/definitions/ExchangeEstimatedShipment"
        }
      }
    },
    "ExchangeShipTo": {
      "type": "object",
      "properties": {
        "fullName": {
          "description": "The full name of the person, including first, middle, and family names.",
          "type": "string"
        },
        "firstName": {
          "description": "The given name or first name of the person",
          "type": "string"
        },
        "middleName": {
          "description": "The middle name or middle initial of the person.",
          "type": "string"
        },
        "familyName": {
          "description": "The family name or surname or last name of the person.",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        },
        "suffix": {
          "type": "string"
        },
        "addressId": {
          "description": "Identifier of address.",
          "type": "string"
        },
        "purposes": {
          "description": "The purpose or usage context for which the address should be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addressLine1": {
          "description": "The first line of the address, required.",
          "type": "string"
        },
        "addressLine2": {
          "description": "The second line of the address, optional.",
          "type": "string"
        },
        "addressLine3": {
          "description": "The third line of the address, optional.",
          "type": "string"
        },
        "cityName": {
          "description": "The name of the city in the mailing address. For military or diplomatic addresses should contain FPO, APO, or DPO.",
          "type": "string"
        },
        "stateCode": {
          "description": "The two letter state code.",
          "type": "string"
        },
        "zip": {
          "description": "The 5 digit zip or postal delivery code.",
          "type": "string"
        },
        "zipExt": {
          "description": "The zip or postal delivery extension.",
          "type": "string"
        },
        "countryCode": {
          "description": "Country code",
          "type": "string"
        },
        "geoCode": {
          "description": "A unique code that represents a geospatial coordinate measurement of an exact geographic location and time at, below, or above the surface of the earth",
          "type": "string"
        },
        "addressFormatType": {
          "type": "string"
        }
      }
    },
    "ExchangeSpecifications": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "ExchangeSpecifications_1": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "ExchangeSpecifications_2": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "ExchangeSpecifications_3": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "rank": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ExchangeSpecifications_4": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "ExchangeSpecifications_5": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "ExchangeSpecifications_6": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "ExchangeTacCodes": {
      "type": "object",
      "properties": {
        "tacCode": {
          "description": "The Type Allocation Code (TAC) is the initial eight-digit portion of the 15-digit IMEI and 16-digit IMEISV codes used to uniquely identify wireless devices.",
          "type": "string"
        },
        "skus": {
          "description": "Unique identifier of the sku that are associated with the tac.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ExchangeTaxCollection": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "$ref": "#/definitions/ExchangeMetadata"
        },
        "pagination": {
          "type": "object",
          "$ref": "#/definitions/ExchangePagination"
        },
        "taxes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeTaxes"
          }
        },
        "totalTax": {
          "description": "Aggregate of all taxes.",
          "type": "number",
          "format": "double"
        },
        "totalTaxDescription": {
          "description": "Text describing the tax to be presented with the tax amount on documents, screens, and forms.",
          "type": "string"
        }
      }
    },
    "ExchangeTaxes": {
      "type": "object",
      "properties": {
        "taxId": {
          "description": "Uniquely identifies the tax record.",
          "type": "string"
        },
        "code": {
          "description": "Tax Code",
          "type": "string"
        },
        "jurisdiction": {
          "description": "Name of the jurisdiction used to calculate the tax",
          "type": "string"
        },
        "amount": {
          "description": "Tax amount",
          "type": "number",
          "format": "double"
        },
        "typeCode": {
          "description": "Identifies the type of Tax. Could be SALES, VAT, USE, RESORT, PROPERTY, INCOME, SERVICE, E911,or Flat Rate.",
          "type": "string"
        },
        "taxExemption": {
          "description": "Indicates whether the customer is tax exempt and identifies the pertinent exemtption.",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "taxRate": {
          "description": "Tax rate",
          "type": "number",
          "format": "double"
        },
        "recurringIndicator": {
          "description": "Indicates if the tax is recurring or not",
          "type": "string"
        },
        "name": {
          "description": "Name of the tax",
          "type": "string"
        },
        "group": {
          "description": "The group of the tax that is belong to.",
          "type": "string"
        }
      }
    },
    "ExchangeValidations": {
      "type": "object",
      "properties": {
        "orderLineId": {
          "description": "Identifier of order line",
          "type": "string"
        },
        "level": {
          "description": "Validation level",
          "type": "string"
        },
        "code": {
          "description": "Validation code",
          "type": "string"
        },
        "category": {
          "description": "Validation category",
          "type": "string"
        },
        "message": {
          "description": "Validation message",
          "type": "string"
        },
        "relationshipType": {
          "type": "string"
        },
        "offerId": {
          "description": "Unique identifier of the related offer item.",
          "type": "string"
        },
        "offerDescription": {
          "description": "Description of the related  offer item.",
          "type": "string"
        },
        "promotionId": {
          "description": "The unique id of the promotion.",
          "type": "string"
        },
        "shortDescription": {
          "description": "Short description",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "promotionEffectivePeriod": {
          "description": "The time period where the Promotion is effective.",
          "type": "object",
          "$ref": "#/definitions/ExchangePromotionEffectivePeriod_3"
        },
        "productConflicts": {
          "description": "Conflict product or offer",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeProductConflicts"
          }
        }
      }
    },
    "ExchangeVariants": {
      "type": "object",
      "properties": {
        "sku": {
          "description": "Stock keeping unit (SKU).  Uniquely identifies the product in the inventory system.",
          "type": "string"
        },
        "productCondition": {
          "description": "Describes the general condition of the variant.  For example new or refurbished.",
          "type": "string"
        },
        "memory": {
          "description": "Memory size of the sku.",
          "type": "string"
        },
        "color": {
          "description": "Official name of the variant color as marketed by the manufacturer.",
          "type": "string"
        },
        "searchableColor": {
          "description": "Common color names of the variant, for searching.",
          "type": "string"
        },
        "msrp": {
          "description": "Manufacturer suggested retail price.   Provided by the device manufacturer.",
          "type": "number",
          "format": "double"
        },
        "name": {
          "description": "Name of the offer variant.",
          "type": "string"
        },
        "preOrderAvailableTime": {
          "description": "The time when the offer variant is available for pre orders.",
          "type": "string",
          "format": "date-time"
        },
        "comingSoonDate": {
          "description": "The date when T-Mobile will begin accepting requests to notify customers of the availability of the offer variant.",
          "type": "string",
          "format": "date"
        },
        "variantOfferStatus": {
          "description": "Status of the variant in the sales catalog.  Example ForSale, Grandfathered, Retired.",
          "type": "string"
        },
        "inventoryStatus": {
          "description": "Status of the variant in inventory.  Example, in stock, backordered.",
          "type": "string"
        },
        "variantDisplayOrder": {
          "description": "The order that the variant is displayed, relative to other variants of the same offer.",
          "type": "integer",
          "format": "int32"
        },
        "saleStartTime": {
          "description": "The time when the offer variant goes on sale.",
          "type": "string",
          "format": "date-time"
        },
        "saleEndTime": {
          "description": "The time when the offer variant is no longer for sale.",
          "type": "string",
          "format": "date-time"
        },
        "offerVariantId": {
          "description": "Uniquely identifies a offer variant in the sales catalog.",
          "type": "string"
        },
        "defaultDownPayment": {
          "description": "Default down payment amount",
          "type": "number",
          "format": "double"
        },
        "prices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangePrices_1"
          }
        },
        "financeEligibleIndicator": {
          "description": "If true, the variant can be financed.",
          "type": "boolean"
        },
        "canBeReturnedIndicator": {
          "description": "Indicates if it can be returned or not",
          "type": "boolean"
        }
      }
    },
    "ExpectedDelivery": {
      "type": "object",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "ExtendedCoveragePeriod": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "FeatureDetails": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "rank": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "description": "The description of the feature.",
          "type": "string"
        }
      }
    },
    "Features": {
      "type": "object",
      "properties": {
        "featureId": {
          "description": "Unique identifier of the feature.",
          "type": "string"
        },
        "featureName": {
          "description": "Name of the feature.",
          "type": "string"
        },
        "featureStatus": {
          "description": "Status of the feature.",
          "type": "string"
        },
        "recurringCharge": {
          "description": "The recurring charge amount the customer is charged for this feature.",
          "type": "number",
          "format": "double"
        }
      }
    },
    "FinancingProfileCreditReservations": {
      "type": "object",
      "properties": {
        "creditReservationId": {
          "description": "Identifier of credit reservation which may be loan, lease or poip.",
          "type": "string"
        },
        "financingProgramType": {
          "description": "Type of financing program, such as loan, lease.",
          "type": "string"
        },
        "balanceAmount": {
          "description": "The amount of loan/lease balance, or reserved amount for the proposed loan/lease.",
          "type": "number",
          "format": "double"
        },
        "statusCode": {
          "description": "Status code",
          "type": "string"
        },
        "subStatusCode": {
          "description": "Sub Status Code",
          "type": "string"
        },
        "reasonCode": {
          "description": "Status reason code",
          "type": "string"
        },
        "reasonDescription": {
          "description": "Status reason description",
          "type": "string"
        },
        "residualAmount": {
          "description": "Residual (pay out) amount, applicable for lease only.",
          "type": "number",
          "format": "double"
        },
        "productType": {
          "description": "The category of product for the financing program, Device or Accessory.",
          "type": "string"
        }
      }
    },
    "FinancingProgramDetailPromotions": {
      "type": "object",
      "properties": {
        "promotionId": {
          "description": "The unique id of the promotion.",
          "type": "string"
        },
        "promotionAmount": {
          "description": "Deduction amount for the promotion",
          "type": "number",
          "format": "double"
        }
      }
    },
    "Fulfillmentmethod": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "text": {
          "type": "string"
        }
      }
    },
    "fulfillmentMethods": {
      "type": "object",
      "properties": {
        "fulfillmentmethod": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Fulfillmentmethod"
          }
        }
      }
    },
    "GeographicCoordinate": {
      "type": "object",
      "properties": {
        "latitude": {
          "description": "Latitude",
          "type": "string"
        },
        "longitude": {
          "description": "Longitude",
          "type": "string"
        }
      }
    },
    "IdentificationDocuments": {
      "type": "object",
      "properties": {
        "nationaIdentityDocumentId": {
          "description": "Uniquely identifies the national identity document.",
          "type": "string"
        },
        "issuingCountryCode": {
          "description": "ISO standard code identifying the country that issued the document.",
          "type": "string"
        },
        "typeCode": {
          "description": "Code for the type of the persons national identity document.",
          "type": "string"
        },
        "issueDate": {
          "description": "Date when the national identity document was issued.",
          "type": "string",
          "format": "date"
        },
        "expirationDate": {
          "description": "Date when the national identity document will expire.",
          "type": "string",
          "format": "date"
        },
        "issuingAuthority": {
          "description": "Authority that issued the identification document as stated on the document, i.e. tribal council, county for voter registration, or state for state identification.",
          "type": "string"
        }
      }
    },
    "Images": {
      "type": "object",
      "properties": {
        "imageId": {
          "description": "Unique identifier for the image PATH.  This name should be changed.",
          "type": "string"
        },
        "uri": {
          "description": "Universal resource identifier pointing to the image.",
          "type": "string"
        },
        "dimensions": {
          "description": "Dimensions of the image.",
          "type": "string"
        },
        "color": {
          "description": "Official name of the color of the equipment displayed in the image.",
          "type": "string"
        },
        "searchableColors": {
          "description": "Common color name for searching.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "displayPurposes": {
          "description": "Purpose for which the image should be used in displays.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "IncludedServiceCapacities": {
      "type": "object",
      "properties": {
        "capacityType": {
          "description": "Type of service",
          "type": "string"
        },
        "size": {
          "description": "Quantity of the service.",
          "type": "number",
          "format": "double"
        },
        "measurementUnit": {
          "description": "Unit of measurement of the service.",
          "type": "string"
        },
        "duration": {
          "description": "The amount of time the customer has to use the includedServiceCapacity before it expires.",
          "type": "integer",
          "format": "int32"
        },
        "durationMeasurementUnit": {
          "description": "Unit of measurement of duration service.",
          "type": "string"
        },
        "unlimitedIndicator": {
          "description": "Indicate the capacity is unlimited",
          "type": "boolean"
        }
      }
    },
    "IneligibleReasons": {
      "type": "object",
      "properties": {
        "reasonCode": {
          "description": "Reason Code",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "helpText": {
          "description": "Additional description",
          "type": "string"
        },
        "language": {
          "description": "language used",
          "type": "object",
          "$ref": "#/definitions/LanguageCode",
          "minLength": 2,
          "maxLength": 2,
          "pattern": "[a-z][a-z]"
        }
      }
    },
    "Keys": {
      "type": "object",
      "properties": {
        "domainName": {
          "description": "Domain name",
          "type": "string"
        },
        "keyName": {
          "description": "Key name",
          "type": "string"
        },
        "keyValue": {
          "description": "Key value",
          "type": "string"
        }
      }
    },
    "LanguageCode": {
      "description": "The language per ISO 639-1 Code: en for English, es for espagnol (Spanish). Reference http://www.iso.org/iso/home/standards/language_codes.htm",
      "type": "string",
      "minLength": 2,
      "maxLength": 2,
      "pattern": "[a-z][a-z]"
    },
    "LineBalance": {
      "type": "object",
      "properties": {
        "totalAmount": {
          "description": "Total balance amount",
          "type": "number",
          "format": "double"
        },
        "expirationDate": {
          "description": "The date on which the balalce is expired.",
          "type": "string",
          "format": "date"
        }
      }
    },
    "LineOfServiceDetailLineBalance": {
      "type": "object",
      "properties": {
        "totalAmount": {
          "description": "Total balance amount",
          "type": "number",
          "format": "double"
        },
        "expirationDate": {
          "description": "The date on which the balalce is expired.",
          "type": "string",
          "format": "date"
        }
      }
    },
    "LineOfServiceDetailPrimaryPlaceOfUseAddress": {
      "type": "object",
      "properties": {
        "addressId": {
          "description": "Identifier of address.",
          "type": "string"
        },
        "purposes": {
          "description": "The purpose or usage context for which the address should be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addressLine1": {
          "description": "The first line of the address, required.",
          "type": "string"
        },
        "addressLine2": {
          "description": "The second line of the address, optional.",
          "type": "string"
        },
        "addressLine3": {
          "description": "The third line of the address, optional.",
          "type": "string"
        },
        "cityName": {
          "description": "The name of the city in the mailing address. For military or diplomatic addresses should contain FPO, APO, or DPO.",
          "type": "string"
        },
        "stateCode": {
          "description": "The two letter state code.",
          "type": "string"
        },
        "zip": {
          "description": "The 5 digit zip or postal delivery code.",
          "type": "string"
        },
        "zipExt": {
          "description": "The zip or postal delivery extension.",
          "type": "string"
        },
        "countryCode": {
          "description": "Country code",
          "type": "string"
        },
        "geoCode": {
          "description": "A unique code that represents a geospatial coordinate measurement of an exact geographic location and time at, below, or above the surface of the earth",
          "type": "string"
        },
        "addressFormatType": {
          "type": "string"
        },
        "default": {
          "description": "Flags the address to be used for default communications.",
          "type": "string"
        },
        "validationStatus": {
          "description": "Specifies whether the address is VALIDATED, NONVALIDATED, or UNDELIVERABLE.",
          "type": "string"
        },
        "overwritten": {
          "description": "Flags whether the provided address has been overwritten by the system.",
          "type": "boolean"
        }
      }
    },
    "LineOfServiceDetailPromotions": {
      "type": "object",
      "properties": {
        "promotionId": {
          "description": "The unique id of the promotion.",
          "type": "string"
        },
        "shortDescription": {
          "description": "Short description",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "promotionEffectivePeriod": {
          "description": "The time period where the Promotion is effective.",
          "type": "object",
          "$ref": "#/definitions/PromotionEffectivePeriod"
        }
      }
    },
    "LineOfServiceExtensionContact": {
      "type": "object",
      "properties": {
        "securityProfileId": {
          "description": "Unique identifier of the security profile.",
          "type": "string"
        },
        "primaryPhoneNumber": {
          "description": "Primary mobile phone number used by the customer and used to identify the customer.",
          "type": "string"
        },
        "primaryEmailAddress": {
          "type": "string"
        },
        "fullName": {
          "description": "The full name of the person, including first, middle, and family names.",
          "type": "string"
        },
        "firstName": {
          "description": "The given name or first name of the person",
          "type": "string"
        },
        "middleName": {
          "description": "The middle name or middle initial of the person.",
          "type": "string"
        },
        "familyName": {
          "description": "The family name or surname or last name of the person.",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        },
        "suffix": {
          "type": "string"
        },
        "ssn": {
          "description": "Social Security Number of the person. When used in a request, it must only be sent by secure transport.",
          "type": "string"
        },
        "ssnMasking": {
          "description": "Specifies what portion of the SSN has been provided.",
          "type": "string"
        },
        "birthDate": {
          "description": "Date of birth of the person.",
          "type": "string",
          "format": "date"
        },
        "pin": {
          "description": "Personal Identification Number",
          "type": "string"
        },
        "password": {
          "description": "Password for logging into a software system.",
          "type": "string"
        },
        "taxId": {
          "description": "Tax identification or FEIN (Federal Employer Identification Number).",
          "type": "string"
        },
        "optOut": {
          "description": "Indicates the privacy option for this communication channel. If opted out, this communication cannot be used for telemarketing calls, mails, emails...etc.",
          "type": "string"
        },
        "optOutReason": {
          "type": "string"
        },
        "optOutType": {
          "description": "Indicates the type of marketing activity that the customer has opted in/out from. If no value is provided, it is assumed that the customer has opted in/out from all activity through this communication channel.",
          "type": "string"
        },
        "addressCommunications": {
          "description": "Addresses for residence or business, to be used for deliveries or postal mail.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PersonProfileAddressCommunications"
          }
        },
        "phoneNumbers": {
          "description": "Phone numbers for voice, fax or text communication with the person.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PersonProfilePhoneNumbers"
          }
        },
        "emailCommunications": {
          "description": "Email addresses of the person.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PersonProfileEmailCommunications"
          }
        },
        "e911AcknowledgementIndicator": {
          "description": "To indicate if customer accepts the E911 service consent.",
          "type": "boolean"
        }
      }
    },
    "LineOfServiceExtensionSpecificationGroups": {
      "type": "object",
      "properties": {
        "groupName": {
          "type": "string"
        },
        "specifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SpecificationGroupSpecifications"
          }
        }
      }
    },
    "Lines": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "$ref": "#/definitions/MetaDataFragment"
        },
        "universalLineId": {
          "description": "ULID - Universal identifier of the LineofService, as defined in Customer Hub.",
          "type": "string"
        },
        "lineId": {
          "description": "Uniquely identifies a  line of service.",
          "type": "string"
        },
        "phoneNumber": {
          "description": "The phone number (MSISDN) associated with the line of service.",
          "type": "string"
        },
        "lineStatus": {
          "description": "Code giving the status of the line of service.",
          "type": "string"
        },
        "lineSubStatus": {
          "description": "Code giving the substatus of the line of service.",
          "type": "string"
        },
        "simNumber": {
          "description": "SIM number",
          "type": "string"
        },
        "nickname": {
          "description": "Alias for the line of service, as supplied by the customer.",
          "type": "string"
        },
        "firstName": {
          "description": "First name of the user of the line of service.",
          "type": "string"
        },
        "familyName": {
          "description": "Family name (last name) of the user of the line of service.",
          "type": "string"
        },
        "lineType": {
          "description": "Type of line of service: shared or individual.",
          "type": "string"
        },
        "activationDate": {
          "description": "Date when the line of service was orignially activated.",
          "type": "string",
          "format": "date"
        },
        "primaryLineIndicator": {
          "description": "Indicates if the line is the primary, secondary or additional line of service (contract).",
          "type": "string"
        },
        "dependentDesignation": {
          "description": "Indicates the line designation for employee accounts. Dependent or non-dependent",
          "type": "string"
        },
        "lineSequence": {
          "description": "Sequence or order of the line in the account.",
          "type": "integer",
          "format": "int32"
        },
        "accountAssociationDate": {
          "description": "Date when the line of service became associated with the current account. If the line has never been moved between accounts, this will have the same value as the activation date.",
          "type": "string",
          "format": "date"
        },
        "spendingLimit": {
          "description": "Dollar limit on charges for this line of service in a given month.",
          "type": "number",
          "format": "double"
        },
        "serviceCollection": {
          "description": "Soft goods products",
          "type": "object",
          "$ref": "#/definitions/ServiceCollection"
        },
        "deviceCollection": {
          "type": "object",
          "$ref": "#/definitions/DeviceCollection"
        },
        "usageCollection": {
          "type": "object",
          "$ref": "#/definitions/UsageCollection"
        },
        "daysSinceActivated": {
          "description": "Number of days since the line is activated",
          "type": "integer",
          "format": "int32"
        },
        "hasData": {
          "description": "To indicate if the line provides data capability.",
          "type": "boolean"
        },
        "hasTelematics": {
          "description": "To indicate if the line provides telematics capability.",
          "type": "boolean"
        },
        "lineBalance": {
          "description": "Line balance",
          "type": "object",
          "$ref": "#/definitions/LineOfServiceDetailLineBalance"
        },
        "primaryPlaceOfUseAddress": {
          "description": "PPU (Primary Place Of Use) Address",
          "type": "object",
          "$ref": "#/definitions/LineOfServiceDetailPrimaryPlaceOfUseAddress"
        },
        "promotions": {
          "description": "Promotions fot the line",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LineOfServiceDetailPromotions"
          }
        },
        "voiceMailLanguage": {
          "description": "The name of the language for voicemails about the account.  For example English or Spanish.",
          "type": "string"
        },
        "eipIndicator": {
          "description": "To indicate if the line of service has EIP (Equipment Installment Plan).",
          "type": "boolean"
        },
        "daysInCurrentAccount": {
          "description": "Number of days that the line has been associated with the current account. If still associated with the original account, this will have the same value as the daysSinceActivation.",
          "type": "integer",
          "format": "int32"
        },
        "accountNumber": {
          "description": "Financial account number associated with the line of service",
          "type": "string"
        },
        "contact": {
          "type": "object",
          "$ref": "#/definitions/LineOfServiceExtensionContact"
        },
        "specificationGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LineOfServiceExtensionSpecificationGroups"
          }
        },
        "actionCode": {
          "description": "Action code",
          "type": "string"
        }
      }
    },
    "Loans": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "$ref": "#/definitions/MetaDataFragment"
        },
        "loanId": {
          "description": "Loan identifier",
          "type": "string"
        },
        "oldLoanId": {
          "description": "The loan id of a related loan, such as for a change of responsibility or exercising a JUMP option on an existing loan.  For example in change of responsibilityfor an existing loan, a new loan is created and the existing loan balance moved to the new loan.  The existing loan is then closed.  The new loans oldLoanId is populated with the closed loanId.",
          "type": "string"
        },
        "lockedForMigration": {
          "description": "Indicates that the loan cannot be updated, due to migration.",
          "type": "boolean"
        },
        "account": {
          "description": "The financial account that the financing plan belongs to",
          "type": "object",
          "$ref": "#/definitions/Account"
        },
        "currentLoanSystem": {
          "description": "System of record where loan currently resides - EIP/OFSLL",
          "type": "string"
        },
        "commonCustomerId": {
          "description": "Common customer identifier (CCID)",
          "type": "string"
        },
        "balance": {
          "description": "Loan amount that is owed",
          "type": "number",
          "format": "double"
        },
        "lineId": {
          "description": "The line of service that is associated with the loan",
          "type": "string"
        },
        "financingProgramType": {
          "description": "Financing program type, such as loan or lease.  Same as the productSubType in offer.",
          "type": "string"
        },
        "phoneNumber": {
          "description": "Phone number or MSISDN",
          "type": "string"
        },
        "orderItemId": {
          "description": "External system identifier of the order item.  Used to reference an order item in an external order system.",
          "type": "string"
        },
        "fulfillmentType": {
          "description": "Describes whether the equipment was purchased in a retail store or shipped to the customer.",
          "type": "string"
        },
        "transactionType": {
          "description": "Type of transaction,  e.g. Activation, Add A Line, Upgrade etc.",
          "type": "string"
        },
        "returnAuthorizationType": {
          "description": "Return authorization type, such as JUMP, JOD, COR",
          "type": "string"
        },
        "promotions": {
          "description": "Summary of the promotions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FinancingProgramDetailPromotions"
          }
        },
        "totalAmountFinanced": {
          "description": "Total amount financed",
          "type": "number",
          "format": "double"
        },
        "totalNumberOfInstallments": {
          "description": "Total number of installment payments",
          "type": "integer",
          "format": "int32"
        },
        "nominalInterestRate": {
          "description": "Nominal interest rate",
          "type": "number",
          "format": "double"
        },
        "annualPercentageRate": {
          "description": "Annual percentage interest rate",
          "type": "number",
          "format": "double"
        },
        "downPaymentAmount": {
          "description": "Amount of down payment",
          "type": "number",
          "format": "double"
        },
        "additionalDownPaymentAmount": {
          "description": "Additional down payment amount paid along with base down payment amount.",
          "type": "number",
          "format": "double"
        },
        "downPaymentDiscountAmount": {
          "description": "An amount of discount that is to be subtracted from the base down payment",
          "type": "number",
          "format": "double"
        },
        "totalDownPaymentAmount": {
          "description": "Down payment plus additional down payments minus discount",
          "type": "number",
          "format": "double"
        },
        "recurringInstallmentAmount": {
          "description": "Recurring installment payment amount",
          "type": "number",
          "format": "double"
        },
        "recurringChargeAmount": {
          "description": "Recurring charge or bill amount after deducting any applicable promotion amount.",
          "type": "number",
          "format": "double"
        },
        "lastInstallmentAmount": {
          "description": "Last installment amount",
          "type": "number",
          "format": "double"
        },
        "lastInstallmentDueDate": {
          "description": "Due date of last installment",
          "type": "string",
          "format": "date"
        },
        "recurringTaxAmount": {
          "description": "Recurring tax amount",
          "type": "number",
          "format": "double"
        },
        "recurringTaxPercent": {
          "description": "Recurring tax percentage rate",
          "type": "number",
          "format": "double"
        },
        "remainingNumberOfInstallments": {
          "description": "Remaining number of installments",
          "type": "integer",
          "format": "int32"
        },
        "residualAmount": {
          "description": "Residual amount, applicable for lease only",
          "type": "number",
          "format": "double"
        },
        "residualPercentage": {
          "description": "Residual percentage, applicable for lease only",
          "type": "number",
          "format": "double"
        },
        "purchasedEquipment": {
          "description": "Purchased equipment",
          "type": "object",
          "$ref": "#/definitions/PurchasedEquipment"
        },
        "paymentSchedule": {
          "description": "Schedule of payments for the loan/lease.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentSchedule"
          }
        },
        "returnedEquipment": {
          "description": "Returned equipment",
          "type": "object",
          "$ref": "#/definitions/ReturnedEquipment"
        },
        "effectiveStartDate": {
          "description": "Effective start date",
          "type": "string",
          "format": "date"
        },
        "effectiveEndDate": {
          "description": "Effective end date",
          "type": "string",
          "format": "date"
        },
        "financingProgramDocumentId": {
          "description": "Document identifier for financing program",
          "type": "string"
        },
        "financingModelType": {
          "description": "The type of financing model used for loan origination.  Agency or Webbank.",
          "type": "string"
        },
        "statusCode": {
          "description": "Status code",
          "type": "string"
        },
        "subStatusCode": {
          "description": "Sub Status Code",
          "type": "string"
        },
        "reasonCode": {
          "description": "Status reason code",
          "type": "string"
        },
        "reasonDescription": {
          "description": "Status reason description",
          "type": "string"
        },
        "remorseReturnNumberOfDays": {
          "description": "Remorse return period in days",
          "type": "integer",
          "format": "int32"
        },
        "costCenterProfitCenter": {
          "description": "Cost Center / Profit Center",
          "type": "string"
        },
        "remorseReturnEligibile": {
          "description": "To indicate whether the device on the financing plan is eligible for remorse return.",
          "type": "boolean"
        },
        "originatingMasterDealerCode": {
          "description": "Master Dealer Code for the dealer who originally created the financing program..",
          "type": "string"
        },
        "originatingSalesChannel": {
          "description": "Sales channel that originally created the financing program.",
          "type": "string"
        },
        "submissionStatus": {
          "description": "Status of the loan order such as Submitted,Completed,Error",
          "type": "string"
        },
        "pendingFinancialTransactionStatus": {
          "description": "Status of all pending financial transactions. It can be INPROCESS, COMPLETE, ERROR.",
          "type": "string"
        },
        "workFlowConditions": {
          "description": "Describes workflow steps that have been completed or awaiting completion such as BalanceTransferComplete,shipmentPending.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "agreementNumber": {
          "description": "Unique Identifier for the transaction where customer agrees to the Loan/Lease.",
          "type": "string"
        },
        "clientWorkFlowType": {
          "description": "Used only by TOM/CCO. Indicates which workflow to be followed for the loan.",
          "type": "string"
        },
        "tradeInEligibility": {
          "description": "To indicate if device/accessory on the loan can be used for tradeIn credit.",
          "type": "boolean"
        },
        "recurringPromotionCreditAmount": {
          "description": "Total recurring credit amount applied from promotions.",
          "type": "number",
          "format": "double"
        },
        "acceleratedAmount": {
          "description": "Unbilled amount and any additional charges on the financing program during customer account cancellation. Once customer pays the accelerated amount, financing program can be closed.",
          "type": "number",
          "format": "double"
        },
        "acceleratedDate": {
          "description": "The date when financing program was accelerated in financing system.",
          "type": "string",
          "format": "date"
        },
        "paymentOverdueDays": {
          "description": "Number of days payment is over due on the financing program.",
          "type": "integer",
          "format": "int32"
        },
        "activityType": {
          "description": "Type of the activity, such as EQUIPMENT_UPDATE, MSISDN_UPDATE",
          "type": "string"
        },
        "activityDescription": {
          "description": "Details about the activity.",
          "type": "string"
        },
        "activityTime": {
          "description": "Date and time when the activity occurred",
          "type": "string",
          "format": "date-time"
        },
        "salesChannelId": {
          "description": "Uniquely identifies the Sales Channel.",
          "type": "string"
        },
        "userId": {
          "description": "User identification used in the system",
          "type": "string"
        },
        "orderId": {
          "type": "string"
        },
        "documentSet": {
          "type": "object",
          "$ref": "#/definitions/documentSet"
        },
        "delayPayIndicator": {
          "description": "Indicates if the pay can be delayed, applies to financing plan",
          "type": "boolean"
        },
        "orderLocationState": {
          "description": "State where store is located and where purchase of this loan/lease is carried out - in case of Retail Channel",
          "type": "string"
        },
        "orderLocationCity": {
          "description": "City where store is located and where purchase of this loan/lease is carried out - in case of Retail Channel",
          "type": "string"
        },
        "shipToState": {
          "description": "Ship to state",
          "type": "string"
        },
        "programType": {
          "description": "program type associated with the order, such as JUMP, JUMP2, JOD",
          "type": "string"
        },
        "programStatus": {
          "description": "Status of the program",
          "type": "string"
        },
        "sourceTransactionId": {
          "description": "Unique Transaction Id from frontend applications",
          "type": "string"
        },
        "sourceSubTransactionId": {
          "description": "Internal line Id created by ordering system NOT displayed to frontends for scenarios such as SHIP-TO",
          "type": "string"
        },
        "sourceTransactionTime": {
          "description": "Timestamp of the source transaction.",
          "type": "string",
          "format": "date-time"
        },
        "shippingId": {
          "description": "Uniquely identifies a shipping details record.",
          "type": "string"
        },
        "trackingNumber": {
          "description": "Tracking number provided by the freight carrier.",
          "type": "string"
        },
        "shippingDate": {
          "description": "Date of the shipment.",
          "type": "string",
          "format": "date"
        },
        "trackingUrl": {
          "description": "URL provided by the freight carrier to track the progress of the shipment.",
          "type": "string"
        },
        "freightCarrier": {
          "description": "Name of the freight carrier.",
          "type": "string"
        },
        "description": {
          "description": "Brief description of the shipping option, eg: UPS Ground (5-7 business days)",
          "type": "string"
        },
        "serviceLevelCode": {
          "description": "Shipping carrier priority code such as 2nd day, next day, priority, etc.",
          "type": "string"
        },
        "shippingCharge": {
          "description": "Charge for the shipping option.",
          "type": "number",
          "format": "double"
        },
        "waiverIndicator": {
          "description": "To indicate if shipping charges can be waived by client, or if shaiiping charge is waived in actual order.",
          "type": "boolean"
        },
        "taxExemptionIndicator": {
          "description": "To indicate if tax can be exempted for the shipping charges when overall tax is calculated, or to indicate if shipping tax is exempted in actual order.",
          "type": "boolean"
        },
        "shippingDiscountAmount": {
          "description": "Discount amount for shipping.",
          "type": "number",
          "format": "double"
        },
        "shippingDiscountPercent": {
          "description": "Discount by percentage for shipping",
          "type": "number",
          "format": "double"
        },
        "shipTo": {
          "description": "Shipping to contact information",
          "type": "object",
          "$ref": "#/definitions/ShippingDetailShipTo"
        },
        "shipFrom": {
          "description": "Shipping from contact information",
          "type": "object",
          "$ref": "#/definitions/ShippingDetailShipFrom"
        },
        "estimatedDelivery": {
          "description": "Estimated delivery date.",
          "type": "object",
          "$ref": "#/definitions/ShippingDetailEstimatedDelivery"
        },
        "expectedDelivery": {
          "description": "The date when the customer expect for delivery, updated from the shipper.",
          "type": "object",
          "$ref": "#/definitions/ShippingDetailExpectedDelivery"
        },
        "requestedDelivery": {
          "description": "Requested delivery date from customer",
          "type": "object",
          "$ref": "#/definitions/ShippingDetailRequestedDelivery"
        },
        "shippingLabelUrl": {
          "description": "URL that directs to the actual shipping lable.",
          "type": "string"
        },
        "estimatedShipment": {
          "description": "Estimated shipment date",
          "type": "object",
          "$ref": "#/definitions/ShippingDetailEstimatedShipment"
        }
      }
    },
    "ManufacturerCoveragePeriod": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "MarketingFeatures": {
      "type": "object",
      "properties": {
        "featureCategory": {
          "description": "The category of feature.",
          "type": "string"
        },
        "featureCategoryRank": {
          "description": "The order the category of features is displayed, relative to other feature categories.",
          "type": "integer",
          "format": "int32"
        },
        "featureDetails": {
          "description": "List of the feature details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FeatureDetails"
          }
        }
      }
    },
    "Metadata": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "self": {
          "type": "string"
        },
        "generated": {
          "type": "string",
          "format": "date-time"
        },
        "lastModified": {
          "type": "string",
          "format": "date-time"
        },
        "etag": {
          "type": "string"
        }
      }
    },
    "MetaDataFragment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "self": {
          "type": "string"
        },
        "generated": {
          "type": "string",
          "format": "date-time"
        },
        "lastModified": {
          "type": "string",
          "format": "date-time"
        },
        "etag": {
          "type": "string"
        }
      }
    },
    "NetworkUsePeriod": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Notes": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Uniquely identifies a note.",
          "type": "string"
        },
        "entryTime": {
          "description": "Date and time when the note was entered.",
          "type": "string",
          "format": "date-time"
        },
        "expirationTime": {
          "description": "Date and time when the note expires, and should no longer be used.",
          "type": "string",
          "format": "date-time"
        },
        "type": {
          "description": "Type of the note.",
          "type": "string"
        },
        "content": {
          "description": "Text content of the note.",
          "type": "string"
        },
        "author": {
          "description": "Identifies the author of the note.",
          "type": "string"
        },
        "updatedBy": {
          "description": "Identifies the user who updated the note.",
          "type": "string"
        },
        "updateTime": {
          "description": "Date and time when the note was updated.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Offer": {
      "type": "object",
      "properties": {
        "offerId": {
          "description": "Uniquely identifies a product offering in the sales catalog.",
          "type": "string"
        },
        "offerType": {
          "description": "Primary categorization of Product Offering.",
          "type": "string"
        },
        "offerSubType": {
          "description": "Secondary categorization of Product Offering.",
          "type": "string"
        },
        "productType": {
          "description": "The category of product included in the offer: Plan, Service, Device, Accessory, or Financial.",
          "type": "string"
        },
        "productSubTypes": {
          "description": "Secondary categorizations of the type of product included in the offer.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "offeringStatus": {
          "description": "Status of the product offering in the sales catalog.",
          "type": "string"
        },
        "offeringStatusPeriod": {
          "description": "The time period where the offeringStatus is valid.",
          "type": "object",
          "$ref": "#/definitions/OfferingStatusPeriod"
        },
        "businessUnit": {
          "description": "The different T-Mobile business units require complete separation of assets. Separate companies that comprise TMUS corporation.  The system restricts a Customer to one Business Unit.  In other words, a Customer in one Business Unit is not visible in any of the other  Business Units of the corporation. For example, a Metro PCS customers billing address cannot be looked up by a Magenta representative.  There is no capability to override this in the system.",
          "type": "string"
        },
        "billingMethod": {
          "description": "The Billing Method specifies the billing experience that the customer has qualified for and requested. A change of the billing method implies the need to create a new billing arrangement.",
          "type": "string"
        },
        "brand": {
          "description": "The business name under which a TMUS product is sold.  A Customer can have accounts in any Brand, within the same Business Unit. For example, a T-Mobile customer may also have a branded account with a national retailer.",
          "type": "string"
        },
        "unitPrice": {
          "description": "Full list price per unit as set by T-Mobile",
          "type": "number",
          "format": "double"
        },
        "offerCategory": {
          "description": "Top-level display categorization for product offers.",
          "type": "string"
        },
        "offerSubCategory1": {
          "description": "Second-level display categorization for product offers.",
          "type": "string"
        },
        "offerSubCategory2": {
          "description": "Third-level display categorization for product offers.",
          "type": "string"
        },
        "offerName": {
          "description": "The commonly used name of the Offer, as defined in the Product Catalog.",
          "type": "string"
        },
        "offerDescription": {
          "description": "The description of the offer, as defined in the product catalog.",
          "type": "string"
        },
        "offerShortDescription": {
          "description": "The brief description of the offer, as defined in the product catalog.",
          "type": "string"
        },
        "offerLongDescription": {
          "description": "The verbose description of the offer, as defined in the product catalog.",
          "type": "string"
        },
        "displayOrder": {
          "description": "The sequence in which the offer is displayed.",
          "type": "integer",
          "format": "int32"
        },
        "billingTypes": {
          "description": "The type of billing account this offer is available to.  Could be prepaid and/or postpaid.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "legalDisclosure": {
          "description": "Disclaimers or any other textual information that must be displayed to customers for legal reasons.",
          "type": "string"
        },
        "specifications": {
          "description": "Named value pairs",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OfferSummaryCommonSpecifications"
          }
        },
        "prices": {
          "description": "Prices that are applicable to the offer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OfferDetailCommonPrices"
          }
        },
        "keywords": {
          "description": "Words used in searches for the offer.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "promotions": {
          "description": "Reference to the promotions that are available with the offer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OfferDetailCommonPromotions"
          }
        },
        "conflictOffers": {
          "description": "Conflicting offers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConflictOffers"
          }
        },
        "compatibleOffers": {
          "description": "Compatible offers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompatibleOffers"
          }
        },
        "requiredOffers": {
          "description": "Required offers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RequiredOffers"
          }
        },
        "backDateAllowedIndicator": {
          "description": "Indicates whether the service can be back dated when added.",
          "type": "boolean"
        },
        "futureDateAllowedIndicator": {
          "description": "Indicates whether the service can be future dated when added.",
          "type": "boolean"
        },
        "backDateVisibleIndicator": {
          "description": "Indicates whether the services back date should be visible.",
          "type": "boolean"
        },
        "futureDateVisibleIndicator": {
          "description": "Indicates whether the services future date should be visible.",
          "type": "boolean"
        },
        "billEffectiveCode": {
          "description": "To indicate when the bill will be effective",
          "type": "string"
        },
        "billableThirdPartyServiceIndicator": {
          "description": "To indicate if T-Mobile bills the customer for third-party service.",
          "type": "boolean"
        },
        "prorateAllowedIndicator": {
          "description": "To indicate if prorate is allowed",
          "type": "boolean"
        },
        "prorateVisibleIndicator": {
          "description": "To indicate if prorate is visible",
          "type": "boolean"
        },
        "maximumOrderDelay": {
          "description": "Maximum allowed future dating for a particular offer.",
          "type": "string"
        },
        "requireAutoRenew": {
          "description": "To indicate if auto renew is required",
          "type": "boolean"
        },
        "supportAutoRenew": {
          "description": "To indicate if auto renew is available",
          "type": "boolean"
        },
        "deviceValidationRequired": {
          "description": "When true, the Client System is expected to validate the Subscribers Device against the IMEI range defined by the Business, before presenting this Data Pass as eligible for purchase.",
          "type": "boolean"
        },
        "maxOnDemandPasses": {
          "description": "Maximum number of OnDemand data passes that can be purchased with this plan.",
          "type": "integer",
          "format": "int32"
        },
        "upgradeableIndicator": {
          "description": "To indicate if the plan can be upgraded mid bill cycle",
          "type": "boolean"
        },
        "products": {
          "description": "List of product",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductOfferCartViewProducts"
          }
        },
        "minimumNumberOfLines": {
          "description": "Minimum number of lines needed for eligibility.",
          "type": "integer",
          "format": "int32"
        },
        "maximumNumberOfLines": {
          "description": "Maximum number of lines allowed to be eligible.",
          "type": "integer",
          "format": "int32"
        },
        "offerLevel": {
          "description": "Level in the customer hierarchy to which the offer should be applied.Model Note:  this is a duplicate of the element already in the ServiceOfferSummaryDelta",
          "type": "string"
        },
        "actionCode": {
          "description": "Action code such as ADD,REMOVE,CANCEL",
          "type": "string"
        }
      }
    },
    "OfferDetailCommonPrices": {
      "type": "object",
      "properties": {
        "priceListLineId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "offeringPriceType": {
          "description": "Categorization of the price point.",
          "type": "string"
        },
        "oneTimeCharges": {
          "description": "One-time charges/discounts for the price point are listed here.  Examples: charges for an on-demand data pass or equipment purchase.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OneTimeCharges"
          }
        },
        "recurringChargeDetail": {
          "description": "For type of recurring charge, the schedule of amounts and discounts of the price point are listed here.  Examples:  monthly MRC charges, or equipment lease/finance.",
          "type": "object",
          "$ref": "#/definitions/RecurringChargeDetail"
        },
        "pricePointCriteria": {
          "type": "object",
          "$ref": "#/definitions/PricePointCriteria"
        },
        "canModifyPrice": {
          "description": "When fales, the price can never be overridden even by representatives with the appropriate authority.",
          "type": "boolean"
        },
        "taxInclusiveIndicator": {
          "description": "When true indicates the price reflects the total after tax.",
          "type": "boolean"
        },
        "specifications": {
          "description": "Named value pair",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PricePointSpecifications"
          }
        },
        "futureDatedPaymentIndicator": {
          "description": "To indicate if the payment can be made in the future.",
          "type": "boolean"
        }
      }
    },
    "OfferDetailCommonPromotions": {
      "type": "object",
      "properties": {
        "promotionId": {
          "description": "The unique id of the promotion.",
          "type": "string"
        },
        "shortDescription": {
          "description": "Short description",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "promotionEffectivePeriod": {
          "description": "The time period where the Promotion is effective.",
          "type": "object",
          "$ref": "#/definitions/PromotionEffectivePeriod"
        },
        "name": {
          "description": "Commonly used name of the Promotion, as defined in the Product Catalog.",
          "type": "string"
        },
        "link": {
          "description": "Link to the promotion object.",
          "type": "string"
        },
        "code": {
          "description": "Code for this promotion. It is different from promotion ID.",
          "type": "string"
        },
        "type": {
          "description": "Defines whether the promotion is manually or automatically added to a cart/order.",
          "type": "string"
        },
        "displayOrder": {
          "description": "Order or sequence to display",
          "type": "integer",
          "format": "int32"
        },
        "oneTimeOnlyIndicator": {
          "description": "Indicates whether this promotion may be applied more than once for the same customer. True if it may only be used once.",
          "type": "boolean"
        },
        "legalDisclosure": {
          "description": "Disclaimers or any other textual information that must be displayed to customers for legal reasons.",
          "type": "string"
        },
        "serializedCouponAllowedIndicator": {
          "description": "True when a customer can use a serialized coupon code to fulfill eligibilty requirements for the promotion.",
          "type": "boolean"
        },
        "realizationMethod": {
          "description": "The way that the promotion is delivered to the customer.",
          "type": "string"
        },
        "realizationSubMethod": {
          "description": "The detailed catagory on how the promotion is delivered to the customer.",
          "type": "string"
        },
        "promotionalBenefits": {
          "description": "Describes the consideration given to the customer with the promotion.  For example a discount or free product.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PromotionalBenefits"
          }
        },
        "discount": {
          "description": "Discount of the promotion",
          "type": "object",
          "$ref": "#/definitions/Discount"
        },
        "conflictingPromotions": {
          "description": "Conflicting promotions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConflictingPromotions"
          }
        },
        "eligibleAccessories": {
          "description": "Eligible accessories to receive the promotion",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EligibleAccessories"
          }
        },
        "eligibleDevices": {
          "description": "Eligible devices for the promotion",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EligibleDevices"
          }
        }
      }
    },
    "OfferingStatusPeriod": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "OfferSummaryCommonSpecifications": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "OneTimeCharges": {
      "type": "object",
      "properties": {
        "chargeType": {
          "description": "Charge type, such as activationFee, applicationFee, firstMonthCharge,controlChargeFee",
          "type": "string"
        },
        "amount": {
          "description": "The total price to be charged in dollars, inclusive of all discount(s).  amount = basisAmount minus discountAmount minus adjustmentAmount.",
          "type": "number",
          "format": "double"
        },
        "basisAmount": {
          "description": "The price to be charged in dollars, not including any discount(s).",
          "type": "number",
          "format": "double"
        },
        "adjustmentAmount": {
          "description": "Total amount of adjustments, in dollars, that is included in the amount.",
          "type": "number",
          "format": "double"
        },
        "discountAmount": {
          "description": "Total amount of discounts, in dollars, that is included in the amount.",
          "type": "number",
          "format": "double"
        },
        "priceComponents": {
          "description": "The details of charges and deductions that comprise the one time charge.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PriceComponents"
          }
        },
        "productChargeIncurredType": {
          "description": "Specifies the timing for when the first charge is incurred for the product: immediate, on usage, or on demand.",
          "type": "string"
        },
        "proratedAmount": {
          "description": "This is the cost that the customer would need to pay in order to add this feature to their current account effective immediately. it is prorated from the current date until the end of the current cycle.",
          "type": "number",
          "format": "double"
        },
        "adjustmentReason": {
          "description": "Reason for adjustment.",
          "type": "string"
        },
        "percentageDiscount": {
          "description": "Discount by percentage",
          "type": "number",
          "format": "double"
        }
      }
    },
    "OneTimeCredits": {
      "type": "object",
      "properties": {
        "creditId": {
          "description": "Identifier of the credit",
          "type": "string"
        },
        "type": {
          "description": "Charge or tax type",
          "type": "string"
        },
        "amount": {
          "description": "Amount charged.",
          "type": "number",
          "format": "double"
        },
        "description": {
          "description": "Description of the charge",
          "type": "string"
        },
        "code": {
          "description": "Charge code",
          "type": "string"
        },
        "adjustmentReason": {
          "description": "Reason for adjustment",
          "type": "string"
        }
      }
    },
    "Order": {
      "type": "object",
      "properties": {
        "quoteId": {
          "description": "Identifier of quote",
          "type": "string"
        },
        "orderId": {
          "type": "string"
        },
        "documentSet": {
          "type": "object",
          "$ref": "#/definitions/DocumentSet"
        },
        "metadata": {
          "type": "object",
          "$ref": "#/definitions/BatchOrdersMetadata"
        },
        "keys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersKeys"
          }
        },
        "salesInfo": {
          "description": "Information about the context within which the order was placed.",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersSalesInfo"
        },
        "totalAmount": {
          "description": "The total gross value of all cart items before discounts, taxes, or other modifiers besides tradeIns.  This is the aggregate of extendedPrice of all cart items less tradeIns",
          "type": "number",
          "format": "double"
        },
        "totalDiscount": {
          "type": "number",
          "format": "double"
        },
        "totalDue": {
          "description": "Total due",
          "type": "number",
          "format": "double"
        },
        "totalDueDescription": {
          "description": "Description for totalDue",
          "type": "string"
        },
        "totalDueWithoutTax": {
          "description": "totalDue without tax",
          "type": "number",
          "format": "double"
        },
        "totalDueWithoutTaxDescription": {
          "description": "Description for totalDueWithoutTax",
          "type": "string"
        },
        "totalFee": {
          "description": "Aggregate of the fees in the cart items.",
          "type": "number",
          "format": "double"
        },
        "totalFeeDescription": {
          "description": "Description for totalFee",
          "type": "string"
        },
        "totalFeeWithOutTax": {
          "description": "Total fee without tax",
          "type": "number",
          "format": "double"
        },
        "totalFeeWithoutTaxDescription": {
          "description": "Description for totalFeeWithoutTax",
          "type": "string"
        },
        "taxCollection": {
          "type": "object",
          "$ref": "#/definitions/BatchOrdersTaxCollection"
        },
        "totalOneTimeCharge": {
          "description": "Total one time charge amount",
          "type": "number",
          "format": "double"
        },
        "totalAdjustment": {
          "description": "Total adjustment amount",
          "type": "number",
          "format": "double"
        },
        "totalShippingAmount": {
          "description": "The total shipping amount of cart, should be considered an estimate until the order is placed",
          "type": "number",
          "format": "double"
        },
        "currentMonthlyRecurringAmount": {
          "description": "Summary of the financial accounts current estimated monthly bill.",
          "type": "number",
          "format": "double"
        },
        "futureMonthlyRecurringAmount": {
          "description": "Estimate of the financial accounts monthly bill based upon changes present in the cart. This is the aggregate of futureRecurringAmount.",
          "type": "number",
          "format": "double"
        },
        "billingAddress": {
          "type": "object",
          "$ref": "#/definitions/BatchOrdersBillingAddress"
        },
        "shippingAddress": {
          "type": "object",
          "$ref": "#/definitions/BatchOrdersShippingAddress"
        },
        "shippingMethod": {
          "type": "string"
        },
        "shippingContactNumber": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "creationTime": {
          "type": "string",
          "format": "date-time"
        },
        "scheduleChange": {
          "description": "It indicates WHEN the change should occur, NOW or FUTURE",
          "type": "string"
        },
        "termsConditionsIndicator": {
          "description": "To indicate if the customer accept the trems and conditions or not.",
          "type": "boolean"
        },
        "promotions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersPromotions"
          }
        },
        "statusCode": {
          "description": "Code of status",
          "type": "string"
        },
        "overrideDateRulesIndicator": {
          "description": "To indicate if user have permission to overrider the backdate/future date plan and service effective dates.",
          "type": "boolean"
        },
        "numberOfNewLine": {
          "description": "Number of new line added.",
          "type": "integer",
          "format": "int32"
        },
        "numberOfPortIn": {
          "description": "Number of port in added.",
          "type": "integer",
          "format": "int32"
        },
        "overrideManagerId": {
          "description": "Identifier of manager who overrides the price",
          "type": "string"
        },
        "pushToBillIndicator": {
          "description": "To indicate if customer select to push charge or fee to bill (current cycle).",
          "type": "boolean"
        },
        "futurePaymentEligible": {
          "description": "To indicate if customer can make payment in the next bill cycle.",
          "type": "boolean"
        },
        "reasonForPushToBill": {
          "description": "Reason for push to bill",
          "type": "string"
        },
        "reasonCodeForPushToBill": {
          "description": "Reason code for push to bill",
          "type": "string"
        },
        "shippingDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersShippingDetails"
          }
        },
        "notes": {
          "description": "Note from representative.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersNotes"
          }
        },
        "oneTimeCharges": {
          "description": "List of one time charge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersOneTimeCharges"
          }
        },
        "recurringCharges": {
          "description": "List of recurring charge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersRecurringCharges"
          }
        },
        "oneTimeCredits": {
          "description": "One time credits",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersOneTimeCredits"
          }
        },
        "includedChargeTypes": {
          "description": "Charge types on summary level, such as Prorated Fees.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "paymentTerm": {
          "description": "Details about the payment terms for the order.",
          "type": "string"
        },
        "orderLineCollection": {
          "description": "Order line list",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersOrderLineCollection"
        },
        "validations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersValidations_1"
          }
        },
        "accounts": {
          "description": "Customer account list",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersAccounts"
          }
        },
        "lines": {
          "description": "List of line of service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersLines_1"
          }
        },
        "customerProfile": {
          "description": "Customer profile",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersCustomerProfile"
        },
        "addresses": {
          "description": "Address list",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersAddresses"
          }
        },
        "loans": {
          "description": "Loan list",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersLoans"
          }
        },
        "payments": {
          "description": "List of payment",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersPayments"
          }
        },
        "orderSummary": {
          "type": "object",
          "$ref": "#/definitions/OrderSummary"
        }
      }
    },
    "order": {
      "type": "object",
      "properties": {
        "quoteId": {
          "description": "Identifier of quote",
          "type": "string"
        },
        "orderId": {
          "type": "string"
        },
        "documentSet": {
          "type": "object",
          "$ref": "#/definitions/documentSet"
        },
        "metadata": {
          "type": "object",
          "$ref": "#/definitions/MetaDataFragment"
        },
        "keys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Keys"
          }
        },
        "salesInfo": {
          "description": "Information about the context within which the order was placed.",
          "type": "object",
          "$ref": "#/definitions/SalesInfo"
        },
        "totalAmount": {
          "description": "The total gross value of all cart items before discounts, taxes, or other modifiers besides tradeIns.  This is the aggregate of extendedPrice of all cart items less tradeIns",
          "type": "number",
          "format": "double"
        },
        "totalDiscount": {
          "type": "number",
          "format": "double"
        },
        "totalDue": {
          "description": "Total due",
          "type": "number",
          "format": "double"
        },
        "totalDueDescription": {
          "description": "Description for totalDue",
          "type": "string"
        },
        "totalDueWithoutTax": {
          "description": "totalDue without tax",
          "type": "number",
          "format": "double"
        },
        "totalDueWithoutTaxDescription": {
          "description": "Description for totalDueWithoutTax",
          "type": "string"
        },
        "totalFee": {
          "description": "Aggregate of the fees in the cart items.",
          "type": "number",
          "format": "double"
        },
        "totalFeeDescription": {
          "description": "Description for totalFee",
          "type": "string"
        },
        "totalFeeWithOutTax": {
          "description": "Total fee without tax",
          "type": "number",
          "format": "double"
        },
        "totalFeeWithoutTaxDescription": {
          "description": "Description for totalFeeWithoutTax",
          "type": "string"
        },
        "taxCollection": {
          "type": "object",
          "$ref": "#/definitions/TaxCollection"
        },
        "totalOneTimeCharge": {
          "description": "Total one time charge amount",
          "type": "number",
          "format": "double"
        },
        "totalAdjustment": {
          "description": "Total adjustment amount",
          "type": "number",
          "format": "double"
        },
        "totalShippingAmount": {
          "description": "The total shipping amount of cart, should be considered an estimate until the order is placed",
          "type": "number",
          "format": "double"
        },
        "currentMonthlyRecurringAmount": {
          "description": "Summary of the financial accounts current estimated monthly bill.",
          "type": "number",
          "format": "double"
        },
        "futureMonthlyRecurringAmount": {
          "description": "Estimate of the financial accounts monthly bill based upon changes present in the cart. This is the aggregate of futureRecurringAmount.",
          "type": "number",
          "format": "double"
        },
        "billingAddress": {
          "type": "object",
          "$ref": "#/definitions/BillingAddress"
        },
        "shippingAddress": {
          "type": "object",
          "$ref": "#/definitions/ShippingAddress"
        },
        "shippingMethod": {
          "type": "string"
        },
        "shippingContactNumber": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "creationTime": {
          "type": "string",
          "format": "date-time"
        },
        "scheduleChange": {
          "description": "It indicates WHEN the change should occur, NOW or FUTURE",
          "type": "string"
        },
        "termsConditionsIndicator": {
          "description": "To indicate if the customer accept the trems and conditions or not.",
          "type": "boolean"
        },
        "promotions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Promotions"
          }
        },
        "statusCode": {
          "description": "Code of status",
          "type": "string"
        },
        "overrideDateRulesIndicator": {
          "description": "To indicate if user have permission to overrider the backdate/future date plan and service effective dates.",
          "type": "boolean"
        },
        "numberOfNewLine": {
          "description": "Number of new line added.",
          "type": "integer",
          "format": "int32"
        },
        "numberOfPortIn": {
          "description": "Number of port in added.",
          "type": "integer",
          "format": "int32"
        },
        "overrideManagerId": {
          "description": "Identifier of manager who overrides the price",
          "type": "string"
        },
        "pushToBillIndicator": {
          "description": "To indicate if customer select to push charge or fee to bill (current cycle).",
          "type": "boolean"
        },
        "futurePaymentEligible": {
          "description": "To indicate if customer can make payment in the next bill cycle.",
          "type": "boolean"
        },
        "reasonForPushToBill": {
          "description": "Reason for push to bill",
          "type": "string"
        },
        "reasonCodeForPushToBill": {
          "description": "Reason code for push to bill",
          "type": "string"
        },
        "shippingDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShippingDetails"
          }
        },
        "notes": {
          "description": "Note from representative.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Notes"
          }
        },
        "oneTimeCharges": {
          "description": "List of one time charge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChargesOneTimeCharges"
          }
        },
        "recurringCharges": {
          "description": "List of recurring charge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChargesRecurringCharges"
          }
        },
        "oneTimeCredits": {
          "description": "One time credits",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChargesOneTimeCredits"
          }
        },
        "includedChargeTypes": {
          "description": "Charge types on summary level, such as Prorated Fees.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "paymentTerm": {
          "description": "Details about the payment terms for the order.",
          "type": "string"
        },
        "orderLineCollection": {
          "description": "Order line list",
          "type": "object",
          "$ref": "#/definitions/OrderLineCollection"
        },
        "validations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderValidations"
          }
        },
        "accounts": {
          "description": "Customer account list",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Accounts"
          }
        },
        "lines": {
          "description": "List of line of service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Lines"
          }
        },
        "customerProfile": {
          "description": "Customer profile",
          "type": "object",
          "$ref": "#/definitions/CustomerProfile"
        },
        "addresses": {
          "description": "Address list",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Addresses"
          }
        },
        "loans": {
          "description": "Loan list",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Loans"
          }
        },
        "payments": {
          "description": "List of payment",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Payments"
          }
        },
        "orderSummary": {
          "type": "object",
          "$ref": "#/definitions/OrderOrderSummary"
        }
      }
    },
    "orderCollection": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "$ref": "#/definitions/MetaDataFragment"
        },
        "pagination": {
          "type": "object",
          "$ref": "#/definitions/PaginationFragment"
        },
        "orders": {
          "description": "List of orders",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Orders"
          }
        }
      }
    },
    "OrderId": {
      "description": "Enterprise-wide unique identifier for any order.",
      "type": "string"
    },
    "OrderLine": {
      "type": "object",
      "properties": {
        "orderLineId": {
          "description": "Identifier of order line",
          "type": "string"
        },
        "offer": {
          "description": "The offering being purchased in the cart.  The offering can be bundled or simple. A bundled offering may combine multiple simple offerings into a single package.",
          "type": "object",
          "$ref": "#/definitions/ReturnOffer"
        },
        "accountNumber": {
          "description": "Customers account number",
          "type": "string"
        },
        "universalLineId": {
          "description": "ULID - Universal identifier of the LineofService, as defined in Customer Hub.",
          "type": "string"
        },
        "lineId": {
          "description": "Uniquely identifies a  line of service.",
          "type": "string"
        },
        "phoneNumber": {
          "description": "The phone number (MSISDN) associated with the line of service.",
          "type": "string"
        },
        "loanId": {
          "description": "Identifier of loan",
          "type": "string"
        },
        "quantity": {
          "description": "The quantity of the product being ordered on this line.",
          "type": "integer",
          "format": "int32"
        },
        "extendedPrice": {
          "description": "Tax included price",
          "type": "number",
          "format": "double"
        },
        "priceListLineId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "offeringPriceType": {
          "description": "Categorization of the price point.",
          "type": "string"
        },
        "oneTimeCharges": {
          "description": "One-time charges/discounts for the price point are listed here.  Examples: charges for an on-demand data pass or equipment purchase.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnOneTimeCharges_2"
          }
        },
        "recurringChargeDetail": {
          "description": "For type of recurring charge, the schedule of amounts and discounts of the price point are listed here.  Examples:  monthly MRC charges, or equipment lease/finance.",
          "type": "object",
          "$ref": "#/definitions/ReturnRecurringChargeDetail_2"
        },
        "pricePointCriteria": {
          "type": "object",
          "$ref": "#/definitions/ReturnPricePointCriteria_2"
        },
        "canModifyPrice": {
          "description": "When fales, the price can never be overridden even by representatives with the appropriate authority.",
          "type": "boolean"
        },
        "taxInclusiveIndicator": {
          "description": "When true indicates the price reflects the total after tax.",
          "type": "boolean"
        },
        "specifications": {
          "description": "Named value pair",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnSpecifications_5"
          }
        },
        "futureDatedPaymentIndicator": {
          "description": "To indicate if the payment can be made in the future.",
          "type": "boolean"
        },
        "transactionType": {
          "description": "Transaction type for the item",
          "type": "string"
        },
        "transactionSubType": {
          "description": "Transaction sub type for the item",
          "type": "string"
        },
        "status": {
          "description": "Status of the item",
          "type": "string"
        },
        "availability": {
          "description": "Inventory status of the item.",
          "type": "string"
        },
        "shippingContactNumber": {
          "description": "Shipping contact number",
          "type": "string"
        },
        "shippingMethod": {
          "description": "Shipping method as presented to the end user, including both freight carrier name and service level.",
          "type": "string"
        },
        "shippingAddress": {
          "description": "Shipping address",
          "type": "object",
          "$ref": "#/definitions/ReturnShippingAddress"
        },
        "dueTodayAmount": {
          "description": "Total amount due now",
          "type": "number",
          "format": "double"
        },
        "futureRecurringAmount": {
          "description": "Recurring amount for the future",
          "type": "number",
          "format": "double"
        },
        "totalFee": {
          "description": "Total fee charged",
          "type": "number",
          "format": "double"
        },
        "priceChangeReason": {
          "description": "Reason for price change",
          "type": "string"
        },
        "taxCollection": {
          "type": "object",
          "$ref": "#/definitions/ReturnTaxCollection"
        },
        "programType": {
          "description": "Program type associated with the item",
          "type": "string"
        },
        "imsi": {
          "description": "An International Mobile Subscriber Identifier of IMSI is a unique number associated with all GSM and UMTS network mobile phone users.  It is stored in the SIM card.",
          "type": "string"
        },
        "simNumber": {
          "description": "Identifying number of the SIM on the network.",
          "type": "string"
        },
        "csn": {
          "description": "Customer Service Number for Apple SIM.",
          "type": "string"
        },
        "statusCode": {
          "description": "Status code",
          "type": "string"
        },
        "subStatusCode": {
          "description": "Sub Status Code",
          "type": "string"
        },
        "reasonCode": {
          "description": "Status reason code",
          "type": "string"
        },
        "reasonDescription": {
          "description": "Status reason description",
          "type": "string"
        },
        "deviceId": {
          "description": "Uniquely identifies a device",
          "type": "string"
        },
        "imei": {
          "description": "International Mobile Equipment Identifier.  Unique identifier for a mobile device on a network.",
          "type": "string"
        },
        "serialNumber": {
          "description": "Serial number of the equipment (device or accessory).",
          "type": "string"
        },
        "deviceStatus": {
          "description": "Status of the device.",
          "type": "string"
        },
        "blacklist": {
          "type": "object",
          "$ref": "#/definitions/Blacklist"
        },
        "sku": {
          "description": "The sku of the device offer variant.  Only relevant if the customer purchased the device from T-Mobile.",
          "type": "string"
        },
        "portIn": {
          "type": "object",
          "$ref": "#/definitions/ReturnPortIn"
        },
        "scheduleChange": {
          "description": "It indicates WHEN the change should occur, NOW or FUTURE",
          "type": "string"
        },
        "cancelAllPendingFeatureChanges": {
          "description": "If true, cancel all pending feature changes.",
          "type": "boolean"
        },
        "promotions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnPromotions_1"
          }
        },
        "fulfillmentType": {
          "description": "Describes how the order line is fulfilled,  in a retail store or shipped to the customer.",
          "type": "string"
        },
        "effectiveStartTime": {
          "description": "Indicates date and time when the order changes should become effective",
          "type": "string",
          "format": "date-time"
        },
        "activationFeeWaiver": {
          "description": "To indicate if customer is eligible for activation fee waiver.",
          "type": "boolean"
        },
        "expirationTime": {
          "description": "Expiration time for plans and optional features",
          "type": "string",
          "format": "date-time"
        },
        "npa": {
          "description": "NPA. The first three digits of a ten digit phone number. Commonly called the area code in the United States.",
          "type": "string"
        },
        "nxx": {
          "description": "NXX. The first three digits of a seven digit phone number. Commonly called the exchange in the United States.",
          "type": "string"
        },
        "localRoutingNumber": {
          "description": "Local routing number (LRN), consists of NPA-NXX",
          "type": "string"
        },
        "oneTimeCredits": {
          "description": "One time credit",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnOneTimeCredits"
          }
        },
        "printReceiptIndicator": {
          "description": "To indicate if the quote item is eligible to print receipt.",
          "type": "boolean"
        },
        "newMsisdn": {
          "description": "New MSISDN or phone number. For phone number change or port in.",
          "type": "string"
        },
        "feeWaiveReason": {
          "description": "Reason for fee waiving.",
          "type": "string"
        },
        "tradeInQuoteId": {
          "description": "Quote identification for trade in",
          "type": "string"
        },
        "quoteStatus": {
          "description": "Status of the quote",
          "type": "string"
        },
        "quoteAmount": {
          "description": "Quote amount",
          "type": "number",
          "format": "double"
        },
        "returnAuthorizationNumber": {
          "description": "Return material authorization (RMA) number.",
          "type": "string"
        },
        "eligibilityIndicator": {
          "description": "Flag indicating whether the determination is eligible or ineligible.",
          "type": "boolean"
        },
        "eligibilityStatus": {
          "description": "Code identifying the status of eligibility that was determined.",
          "type": "string"
        },
        "eligibilityType": {
          "description": "The type of eligibility being established.",
          "type": "string"
        },
        "ineligibleReasons": {
          "description": "The reason for ineligibility.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnIneligibleReasons_1"
          }
        },
        "validations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Validations"
          }
        },
        "provisioningMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProvisioningMessages"
          }
        },
        "relatedLines": {
          "description": "Related order lines",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedLines"
          }
        },
        "shippingDetail": {
          "description": "Shipping details",
          "type": "object",
          "$ref": "#/definitions/ShippingDetail"
        }
      }
    },
    "orderLine": {
      "type": "object",
      "properties": {
        "orderLineId": {
          "description": "Identifier of order line",
          "type": "string"
        },
        "offer": {
          "description": "The offering being purchased in the cart.  The offering can be bundled or simple. A bundled offering may combine multiple simple offerings into a single package.",
          "type": "object",
          "$ref": "#/definitions/Offer"
        },
        "accountNumber": {
          "description": "Customers account number",
          "type": "string"
        },
        "universalLineId": {
          "description": "ULID - Universal identifier of the LineofService, as defined in Customer Hub.",
          "type": "string"
        },
        "lineId": {
          "description": "Uniquely identifies a  line of service.",
          "type": "string"
        },
        "phoneNumber": {
          "description": "The phone number (MSISDN) associated with the line of service.",
          "type": "string"
        },
        "loanId": {
          "description": "Identifier of loan",
          "type": "string"
        },
        "quantity": {
          "description": "The quantity of the product being ordered on this line.",
          "type": "integer",
          "format": "int32"
        },
        "extendedPrice": {
          "description": "Tax included price",
          "type": "number",
          "format": "double"
        },
        "priceListLineId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "offeringPriceType": {
          "description": "Categorization of the price point.",
          "type": "string"
        },
        "oneTimeCharges": {
          "description": "One-time charges/discounts for the price point are listed here.  Examples: charges for an on-demand data pass or equipment purchase.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OneTimeCharges"
          }
        },
        "recurringChargeDetail": {
          "description": "For type of recurring charge, the schedule of amounts and discounts of the price point are listed here.  Examples:  monthly MRC charges, or equipment lease/finance.",
          "type": "object",
          "$ref": "#/definitions/RecurringChargeDetail"
        },
        "pricePointCriteria": {
          "type": "object",
          "$ref": "#/definitions/PricePointCriteria"
        },
        "canModifyPrice": {
          "description": "When fales, the price can never be overridden even by representatives with the appropriate authority.",
          "type": "boolean"
        },
        "taxInclusiveIndicator": {
          "description": "When true indicates the price reflects the total after tax.",
          "type": "boolean"
        },
        "specifications": {
          "description": "Named value pair",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PricePointSpecifications"
          }
        },
        "futureDatedPaymentIndicator": {
          "description": "To indicate if the payment can be made in the future.",
          "type": "boolean"
        },
        "transactionType": {
          "description": "Transaction type for the item",
          "type": "string"
        },
        "transactionSubType": {
          "description": "Transaction sub type for the item",
          "type": "string"
        },
        "status": {
          "description": "Status of the item",
          "type": "string"
        },
        "availability": {
          "description": "Inventory status of the item.",
          "type": "string"
        },
        "shippingContactNumber": {
          "description": "Shipping contact number",
          "type": "string"
        },
        "shippingMethod": {
          "description": "Shipping method as presented to the end user, including both freight carrier name and service level.",
          "type": "string"
        },
        "shippingAddress": {
          "description": "Shipping address",
          "type": "object",
          "$ref": "#/definitions/CartItemBodyShippingAddress"
        },
        "dueTodayAmount": {
          "description": "Total amount due now",
          "type": "number",
          "format": "double"
        },
        "futureRecurringAmount": {
          "description": "Recurring amount for the future",
          "type": "number",
          "format": "double"
        },
        "totalFee": {
          "description": "Total fee charged",
          "type": "number",
          "format": "double"
        },
        "priceChangeReason": {
          "description": "Reason for price change",
          "type": "string"
        },
        "taxCollection": {
          "type": "object",
          "$ref": "#/definitions/TaxCollection"
        },
        "programType": {
          "description": "Program type associated with the item",
          "type": "string"
        },
        "imsi": {
          "description": "An International Mobile Subscriber Identifier of IMSI is a unique number associated with all GSM and UMTS network mobile phone users.  It is stored in the SIM card.",
          "type": "string"
        },
        "simNumber": {
          "description": "Identifying number of the SIM on the network.",
          "type": "string"
        },
        "csn": {
          "description": "Customer Service Number for Apple SIM.",
          "type": "string"
        },
        "statusCode": {
          "description": "Status code",
          "type": "string"
        },
        "subStatusCode": {
          "description": "Sub Status Code",
          "type": "string"
        },
        "reasonCode": {
          "description": "Status reason code",
          "type": "string"
        },
        "reasonDescription": {
          "description": "Status reason description",
          "type": "string"
        },
        "deviceId": {
          "description": "Uniquely identifies a device",
          "type": "string"
        },
        "imei": {
          "description": "International Mobile Equipment Identifier.  Unique identifier for a mobile device on a network.",
          "type": "string"
        },
        "serialNumber": {
          "description": "Serial number of the equipment (device or accessory).",
          "type": "string"
        },
        "deviceStatus": {
          "description": "Status of the device.",
          "type": "string"
        },
        "blacklist": {
          "type": "object",
          "$ref": "#/definitions/DeviceIdentifierBlacklist"
        },
        "sku": {
          "description": "The sku of the device offer variant.  Only relevant if the customer purchased the device from T-Mobile.",
          "type": "string"
        },
        "portIn": {
          "type": "object",
          "$ref": "#/definitions/PortIn"
        },
        "scheduleChange": {
          "description": "It indicates WHEN the change should occur, NOW or FUTURE",
          "type": "string"
        },
        "cancelAllPendingFeatureChanges": {
          "description": "If true, cancel all pending feature changes.",
          "type": "boolean"
        },
        "promotions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CartItemBodyPromotions"
          }
        },
        "fulfillmentType": {
          "description": "Describes how the order line is fulfilled,  in a retail store or shipped to the customer.",
          "type": "string"
        },
        "effectiveStartTime": {
          "description": "Indicates date and time when the order changes should become effective",
          "type": "string",
          "format": "date-time"
        },
        "activationFeeWaiver": {
          "description": "To indicate if customer is eligible for activation fee waiver.",
          "type": "boolean"
        },
        "expirationTime": {
          "description": "Expiration time for plans and optional features",
          "type": "string",
          "format": "date-time"
        },
        "npa": {
          "description": "NPA. The first three digits of a ten digit phone number. Commonly called the area code in the United States.",
          "type": "string"
        },
        "nxx": {
          "description": "NXX. The first three digits of a seven digit phone number. Commonly called the exchange in the United States.",
          "type": "string"
        },
        "localRoutingNumber": {
          "description": "Local routing number (LRN), consists of NPA-NXX",
          "type": "string"
        },
        "oneTimeCredits": {
          "description": "One time credit",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OneTimeCredits"
          }
        },
        "printReceiptIndicator": {
          "description": "To indicate if the quote item is eligible to print receipt.",
          "type": "boolean"
        },
        "newMsisdn": {
          "description": "New MSISDN or phone number. For phone number change or port in.",
          "type": "string"
        },
        "feeWaiveReason": {
          "description": "Reason for fee waiving.",
          "type": "string"
        },
        "tradeInQuoteId": {
          "description": "Quote identification for trade in",
          "type": "string"
        },
        "quoteStatus": {
          "description": "Status of the quote",
          "type": "string"
        },
        "quoteAmount": {
          "description": "Quote amount",
          "type": "number",
          "format": "double"
        },
        "returnAuthorizationNumber": {
          "description": "Return material authorization (RMA) number.",
          "type": "string"
        },
        "eligibilityIndicator": {
          "description": "Flag indicating whether the determination is eligible or ineligible.",
          "type": "boolean"
        },
        "eligibilityStatus": {
          "description": "Code identifying the status of eligibility that was determined.",
          "type": "string"
        },
        "eligibilityType": {
          "description": "The type of eligibility being established.",
          "type": "string"
        },
        "ineligibleReasons": {
          "description": "The reason for ineligibility.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IneligibleReasons"
          }
        },
        "validations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderLineValidations"
          }
        },
        "provisioningMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderLineProvisioningMessages"
          }
        },
        "relatedLines": {
          "description": "Related order lines",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedLinesRelatedLines"
          }
        },
        "shippingDetail": {
          "description": "Shipping details",
          "type": "object",
          "$ref": "#/definitions/OrderLineShippingDetail"
        }
      }
    },
    "OrderLineCollection": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "$ref": "#/definitions/MetaDataFragment"
        },
        "pagination": {
          "type": "object",
          "$ref": "#/definitions/PaginationFragment"
        },
        "orderLines": {
          "description": "Order lines",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderLineCollectionOrderLines"
          }
        }
      }
    },
    "OrderLineCollectionOrderLines": {
      "type": "object",
      "properties": {
        "orderLineId": {
          "description": "Identifier of order line",
          "type": "string"
        },
        "offer": {
          "description": "The offering being purchased in the cart.  The offering can be bundled or simple. A bundled offering may combine multiple simple offerings into a single package.",
          "type": "object",
          "$ref": "#/definitions/Offer"
        },
        "accountNumber": {
          "description": "Customers account number",
          "type": "string"
        },
        "universalLineId": {
          "description": "ULID - Universal identifier of the LineofService, as defined in Customer Hub.",
          "type": "string"
        },
        "lineId": {
          "description": "Uniquely identifies a  line of service.",
          "type": "string"
        },
        "phoneNumber": {
          "description": "The phone number (MSISDN) associated with the line of service.",
          "type": "string"
        },
        "loanId": {
          "description": "Identifier of loan",
          "type": "string"
        },
        "quantity": {
          "description": "The quantity of the product being ordered on this line.",
          "type": "integer",
          "format": "int32"
        },
        "extendedPrice": {
          "description": "Tax included price",
          "type": "number",
          "format": "double"
        },
        "priceListLineId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "offeringPriceType": {
          "description": "Categorization of the price point.",
          "type": "string"
        },
        "oneTimeCharges": {
          "description": "One-time charges/discounts for the price point are listed here.  Examples: charges for an on-demand data pass or equipment purchase.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OneTimeCharges"
          }
        },
        "recurringChargeDetail": {
          "description": "For type of recurring charge, the schedule of amounts and discounts of the price point are listed here.  Examples:  monthly MRC charges, or equipment lease/finance.",
          "type": "object",
          "$ref": "#/definitions/RecurringChargeDetail"
        },
        "pricePointCriteria": {
          "type": "object",
          "$ref": "#/definitions/PricePointCriteria"
        },
        "canModifyPrice": {
          "description": "When fales, the price can never be overridden even by representatives with the appropriate authority.",
          "type": "boolean"
        },
        "taxInclusiveIndicator": {
          "description": "When true indicates the price reflects the total after tax.",
          "type": "boolean"
        },
        "specifications": {
          "description": "Named value pair",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PricePointSpecifications"
          }
        },
        "futureDatedPaymentIndicator": {
          "description": "To indicate if the payment can be made in the future.",
          "type": "boolean"
        },
        "transactionType": {
          "description": "Transaction type for the item",
          "type": "string"
        },
        "transactionSubType": {
          "description": "Transaction sub type for the item",
          "type": "string"
        },
        "status": {
          "description": "Status of the item",
          "type": "string"
        },
        "availability": {
          "description": "Inventory status of the item.",
          "type": "string"
        },
        "shippingContactNumber": {
          "description": "Shipping contact number",
          "type": "string"
        },
        "shippingMethod": {
          "description": "Shipping method as presented to the end user, including both freight carrier name and service level.",
          "type": "string"
        },
        "shippingAddress": {
          "description": "Shipping address",
          "type": "object",
          "$ref": "#/definitions/CartItemBodyShippingAddress"
        },
        "dueTodayAmount": {
          "description": "Total amount due now",
          "type": "number",
          "format": "double"
        },
        "futureRecurringAmount": {
          "description": "Recurring amount for the future",
          "type": "number",
          "format": "double"
        },
        "totalFee": {
          "description": "Total fee charged",
          "type": "number",
          "format": "double"
        },
        "priceChangeReason": {
          "description": "Reason for price change",
          "type": "string"
        },
        "taxCollection": {
          "type": "object",
          "$ref": "#/definitions/TaxCollection"
        },
        "programType": {
          "description": "Program type associated with the item",
          "type": "string"
        },
        "imsi": {
          "description": "An International Mobile Subscriber Identifier of IMSI is a unique number associated with all GSM and UMTS network mobile phone users.  It is stored in the SIM card.",
          "type": "string"
        },
        "simNumber": {
          "description": "Identifying number of the SIM on the network.",
          "type": "string"
        },
        "csn": {
          "description": "Customer Service Number for Apple SIM.",
          "type": "string"
        },
        "statusCode": {
          "description": "Status code",
          "type": "string"
        },
        "subStatusCode": {
          "description": "Sub Status Code",
          "type": "string"
        },
        "reasonCode": {
          "description": "Status reason code",
          "type": "string"
        },
        "reasonDescription": {
          "description": "Status reason description",
          "type": "string"
        },
        "deviceId": {
          "description": "Uniquely identifies a device",
          "type": "string"
        },
        "imei": {
          "description": "International Mobile Equipment Identifier.  Unique identifier for a mobile device on a network.",
          "type": "string"
        },
        "serialNumber": {
          "description": "Serial number of the equipment (device or accessory).",
          "type": "string"
        },
        "deviceStatus": {
          "description": "Status of the device.",
          "type": "string"
        },
        "blacklist": {
          "type": "object",
          "$ref": "#/definitions/DeviceIdentifierBlacklist"
        },
        "sku": {
          "description": "The sku of the device offer variant.  Only relevant if the customer purchased the device from T-Mobile.",
          "type": "string"
        },
        "portIn": {
          "type": "object",
          "$ref": "#/definitions/PortIn"
        },
        "scheduleChange": {
          "description": "It indicates WHEN the change should occur, NOW or FUTURE",
          "type": "string"
        },
        "cancelAllPendingFeatureChanges": {
          "description": "If true, cancel all pending feature changes.",
          "type": "boolean"
        },
        "promotions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CartItemBodyPromotions"
          }
        },
        "fulfillmentType": {
          "description": "Describes how the order line is fulfilled,  in a retail store or shipped to the customer.",
          "type": "string"
        },
        "effectiveStartTime": {
          "description": "Indicates date and time when the order changes should become effective",
          "type": "string",
          "format": "date-time"
        },
        "activationFeeWaiver": {
          "description": "To indicate if customer is eligible for activation fee waiver.",
          "type": "boolean"
        },
        "expirationTime": {
          "description": "Expiration time for plans and optional features",
          "type": "string",
          "format": "date-time"
        },
        "npa": {
          "description": "NPA. The first three digits of a ten digit phone number. Commonly called the area code in the United States.",
          "type": "string"
        },
        "nxx": {
          "description": "NXX. The first three digits of a seven digit phone number. Commonly called the exchange in the United States.",
          "type": "string"
        },
        "localRoutingNumber": {
          "description": "Local routing number (LRN), consists of NPA-NXX",
          "type": "string"
        },
        "oneTimeCredits": {
          "description": "One time credit",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OneTimeCredits"
          }
        },
        "printReceiptIndicator": {
          "description": "To indicate if the quote item is eligible to print receipt.",
          "type": "boolean"
        },
        "newMsisdn": {
          "description": "New MSISDN or phone number. For phone number change or port in.",
          "type": "string"
        },
        "feeWaiveReason": {
          "description": "Reason for fee waiving.",
          "type": "string"
        },
        "tradeInQuoteId": {
          "description": "Quote identification for trade in",
          "type": "string"
        },
        "quoteStatus": {
          "description": "Status of the quote",
          "type": "string"
        },
        "quoteAmount": {
          "description": "Quote amount",
          "type": "number",
          "format": "double"
        },
        "returnAuthorizationNumber": {
          "description": "Return material authorization (RMA) number.",
          "type": "string"
        },
        "eligibilityIndicator": {
          "description": "Flag indicating whether the determination is eligible or ineligible.",
          "type": "boolean"
        },
        "eligibilityStatus": {
          "description": "Code identifying the status of eligibility that was determined.",
          "type": "string"
        },
        "eligibilityType": {
          "description": "The type of eligibility being established.",
          "type": "string"
        },
        "ineligibleReasons": {
          "description": "The reason for ineligibility.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IneligibleReasons"
          }
        },
        "validations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderLineValidations"
          }
        },
        "provisioningMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderLineProvisioningMessages"
          }
        },
        "relatedLines": {
          "description": "Related order lines",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedLinesRelatedLines"
          }
        },
        "shippingDetail": {
          "description": "Shipping details",
          "type": "object",
          "$ref": "#/definitions/OrderLineShippingDetail"
        }
      }
    },
    "OrderLineProvisioningMessages": {
      "type": "object",
      "properties": {
        "level": {
          "description": "Validation level",
          "type": "string"
        },
        "code": {
          "description": "Validation code",
          "type": "string"
        },
        "category": {
          "description": "Validation category",
          "type": "string"
        },
        "message": {
          "description": "Validation message",
          "type": "string"
        },
        "entityIdentifier": {
          "type": "string"
        },
        "entityName": {
          "type": "string"
        },
        "identiferName": {
          "type": "string"
        },
        "relationshipType": {
          "type": "string"
        }
      }
    },
    "OrderLines": {
      "type": "object",
      "properties": {
        "orderLineId": {
          "description": "Identifier of order line",
          "type": "string"
        },
        "offer": {
          "description": "The offering being purchased in the cart.  The offering can be bundled or simple. A bundled offering may combine multiple simple offerings into a single package.",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersOffer"
        },
        "accountNumber": {
          "description": "Customers account number",
          "type": "string"
        },
        "universalLineId": {
          "description": "ULID - Universal identifier of the LineofService, as defined in Customer Hub.",
          "type": "string"
        },
        "lineId": {
          "description": "Uniquely identifies a  line of service.",
          "type": "string"
        },
        "phoneNumber": {
          "description": "The phone number (MSISDN) associated with the line of service.",
          "type": "string"
        },
        "loanId": {
          "description": "Identifier of loan",
          "type": "string"
        },
        "quantity": {
          "description": "The quantity of the product being ordered on this line.",
          "type": "integer",
          "format": "int32"
        },
        "extendedPrice": {
          "description": "Tax included price",
          "type": "number",
          "format": "double"
        },
        "priceListLineId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "offeringPriceType": {
          "description": "Categorization of the price point.",
          "type": "string"
        },
        "oneTimeCharges": {
          "description": "One-time charges/discounts for the price point are listed here.  Examples: charges for an on-demand data pass or equipment purchase.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersOneTimeCharges_3"
          }
        },
        "recurringChargeDetail": {
          "description": "For type of recurring charge, the schedule of amounts and discounts of the price point are listed here.  Examples:  monthly MRC charges, or equipment lease/finance.",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersRecurringChargeDetail_2"
        },
        "pricePointCriteria": {
          "type": "object",
          "$ref": "#/definitions/BatchOrdersPricePointCriteria_2"
        },
        "canModifyPrice": {
          "description": "When fales, the price can never be overridden even by representatives with the appropriate authority.",
          "type": "boolean"
        },
        "taxInclusiveIndicator": {
          "description": "When true indicates the price reflects the total after tax.",
          "type": "boolean"
        },
        "specifications": {
          "description": "Named value pair",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersSpecifications_5"
          }
        },
        "futureDatedPaymentIndicator": {
          "description": "To indicate if the payment can be made in the future.",
          "type": "boolean"
        },
        "transactionType": {
          "description": "Transaction type for the item",
          "type": "string"
        },
        "transactionSubType": {
          "description": "Transaction sub type for the item",
          "type": "string"
        },
        "status": {
          "description": "Status of the item",
          "type": "string"
        },
        "availability": {
          "description": "Inventory status of the item.",
          "type": "string"
        },
        "shippingContactNumber": {
          "description": "Shipping contact number",
          "type": "string"
        },
        "shippingMethod": {
          "description": "Shipping method as presented to the end user, including both freight carrier name and service level.",
          "type": "string"
        },
        "shippingAddress": {
          "description": "Shipping address",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersShippingAddress_1"
        },
        "dueTodayAmount": {
          "description": "Total amount due now",
          "type": "number",
          "format": "double"
        },
        "futureRecurringAmount": {
          "description": "Recurring amount for the future",
          "type": "number",
          "format": "double"
        },
        "totalFee": {
          "description": "Total fee charged",
          "type": "number",
          "format": "double"
        },
        "priceChangeReason": {
          "description": "Reason for price change",
          "type": "string"
        },
        "taxCollection": {
          "type": "object",
          "$ref": "#/definitions/BatchOrdersTaxCollection_1"
        },
        "programType": {
          "description": "Program type associated with the item",
          "type": "string"
        },
        "imsi": {
          "description": "An International Mobile Subscriber Identifier of IMSI is a unique number associated with all GSM and UMTS network mobile phone users.  It is stored in the SIM card.",
          "type": "string"
        },
        "simNumber": {
          "description": "Identifying number of the SIM on the network.",
          "type": "string"
        },
        "csn": {
          "description": "Customer Service Number for Apple SIM.",
          "type": "string"
        },
        "statusCode": {
          "description": "Status code",
          "type": "string"
        },
        "subStatusCode": {
          "description": "Sub Status Code",
          "type": "string"
        },
        "reasonCode": {
          "description": "Status reason code",
          "type": "string"
        },
        "reasonDescription": {
          "description": "Status reason description",
          "type": "string"
        },
        "deviceId": {
          "description": "Uniquely identifies a device",
          "type": "string"
        },
        "imei": {
          "description": "International Mobile Equipment Identifier.  Unique identifier for a mobile device on a network.",
          "type": "string"
        },
        "serialNumber": {
          "description": "Serial number of the equipment (device or accessory).",
          "type": "string"
        },
        "deviceStatus": {
          "description": "Status of the device.",
          "type": "string"
        },
        "blacklist": {
          "type": "object",
          "$ref": "#/definitions/BatchOrdersBlacklist"
        },
        "sku": {
          "description": "The sku of the device offer variant.  Only relevant if the customer purchased the device from T-Mobile.",
          "type": "string"
        },
        "portIn": {
          "type": "object",
          "$ref": "#/definitions/BatchOrdersPortIn"
        },
        "scheduleChange": {
          "description": "It indicates WHEN the change should occur, NOW or FUTURE",
          "type": "string"
        },
        "cancelAllPendingFeatureChanges": {
          "description": "If true, cancel all pending feature changes.",
          "type": "boolean"
        },
        "promotions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersPromotions_2"
          }
        },
        "fulfillmentType": {
          "description": "Describes how the order line is fulfilled,  in a retail store or shipped to the customer.",
          "type": "string"
        },
        "effectiveStartTime": {
          "description": "Indicates date and time when the order changes should become effective",
          "type": "string",
          "format": "date-time"
        },
        "activationFeeWaiver": {
          "description": "To indicate if customer is eligible for activation fee waiver.",
          "type": "boolean"
        },
        "expirationTime": {
          "description": "Expiration time for plans and optional features",
          "type": "string",
          "format": "date-time"
        },
        "npa": {
          "description": "NPA. The first three digits of a ten digit phone number. Commonly called the area code in the United States.",
          "type": "string"
        },
        "nxx": {
          "description": "NXX. The first three digits of a seven digit phone number. Commonly called the exchange in the United States.",
          "type": "string"
        },
        "localRoutingNumber": {
          "description": "Local routing number (LRN), consists of NPA-NXX",
          "type": "string"
        },
        "oneTimeCredits": {
          "description": "One time credit",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersOneTimeCredits_1"
          }
        },
        "printReceiptIndicator": {
          "description": "To indicate if the quote item is eligible to print receipt.",
          "type": "boolean"
        },
        "newMsisdn": {
          "description": "New MSISDN or phone number. For phone number change or port in.",
          "type": "string"
        },
        "feeWaiveReason": {
          "description": "Reason for fee waiving.",
          "type": "string"
        },
        "tradeInQuoteId": {
          "description": "Quote identification for trade in",
          "type": "string"
        },
        "quoteStatus": {
          "description": "Status of the quote",
          "type": "string"
        },
        "quoteAmount": {
          "description": "Quote amount",
          "type": "number",
          "format": "double"
        },
        "returnAuthorizationNumber": {
          "description": "Return material authorization (RMA) number.",
          "type": "string"
        },
        "eligibilityIndicator": {
          "description": "Flag indicating whether the determination is eligible or ineligible.",
          "type": "boolean"
        },
        "eligibilityStatus": {
          "description": "Code identifying the status of eligibility that was determined.",
          "type": "string"
        },
        "eligibilityType": {
          "description": "The type of eligibility being established.",
          "type": "string"
        },
        "ineligibleReasons": {
          "description": "The reason for ineligibility.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersIneligibleReasons_1"
          }
        },
        "validations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersValidations"
          }
        },
        "provisioningMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersProvisioningMessages"
          }
        },
        "relatedLines": {
          "description": "Related order lines",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersRelatedLines"
          }
        },
        "shippingDetail": {
          "description": "Shipping details",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersShippingDetail"
        }
      }
    },
    "OrderLineShippingDetail": {
      "type": "object",
      "properties": {
        "shippingId": {
          "description": "Uniquely identifies a shipping details record.",
          "type": "string"
        },
        "trackingNumber": {
          "description": "Tracking number provided by the freight carrier.",
          "type": "string"
        },
        "shippingDate": {
          "description": "Date of the shipment.",
          "type": "string",
          "format": "date"
        },
        "trackingUrl": {
          "description": "URL provided by the freight carrier to track the progress of the shipment.",
          "type": "string"
        },
        "freightCarrier": {
          "description": "Name of the freight carrier.",
          "type": "string"
        },
        "description": {
          "description": "Brief description of the shipping option, eg: UPS Ground (5-7 business days)",
          "type": "string"
        },
        "serviceLevelCode": {
          "description": "Shipping carrier priority code such as 2nd day, next day, priority, etc.",
          "type": "string"
        },
        "shippingCharge": {
          "description": "Charge for the shipping option.",
          "type": "number",
          "format": "double"
        },
        "waiverIndicator": {
          "description": "To indicate if shipping charges can be waived by client, or if shaiiping charge is waived in actual order.",
          "type": "boolean"
        },
        "taxExemptionIndicator": {
          "description": "To indicate if tax can be exempted for the shipping charges when overall tax is calculated, or to indicate if shipping tax is exempted in actual order.",
          "type": "boolean"
        },
        "shippingDiscountAmount": {
          "description": "Discount amount for shipping.",
          "type": "number",
          "format": "double"
        },
        "shippingDiscountPercent": {
          "description": "Discount by percentage for shipping",
          "type": "number",
          "format": "double"
        },
        "shipTo": {
          "description": "Shipping to contact information",
          "type": "object",
          "$ref": "#/definitions/ShippingDetailShipTo"
        },
        "shipFrom": {
          "description": "Shipping from contact information",
          "type": "object",
          "$ref": "#/definitions/ShippingDetailShipFrom"
        },
        "estimatedDelivery": {
          "description": "Estimated delivery date.",
          "type": "object",
          "$ref": "#/definitions/ShippingDetailEstimatedDelivery"
        },
        "expectedDelivery": {
          "description": "The date when the customer expect for delivery, updated from the shipper.",
          "type": "object",
          "$ref": "#/definitions/ShippingDetailExpectedDelivery"
        },
        "requestedDelivery": {
          "description": "Requested delivery date from customer",
          "type": "object",
          "$ref": "#/definitions/ShippingDetailRequestedDelivery"
        },
        "shippingLabelUrl": {
          "description": "URL that directs to the actual shipping lable.",
          "type": "string"
        },
        "estimatedShipment": {
          "description": "Estimated shipment date",
          "type": "object",
          "$ref": "#/definitions/ShippingDetailEstimatedShipment"
        }
      }
    },
    "OrderLineValidationProductConflicts": {
      "type": "object",
      "properties": {
        "orderLineId": {
          "description": "Identifier of order line",
          "type": "string"
        },
        "conflictLevel": {
          "description": "Level of the product conflict.  ACCOUNT, LINE, PRODUCT.",
          "type": "string"
        },
        "conflictType": {
          "description": "Type of conflict",
          "type": "string"
        },
        "autoResolvableIndicator": {
          "description": "Indicates whether the conflict can be resolve automatically by the backend.",
          "type": "boolean"
        },
        "offerId": {
          "description": "Unique identifier of the offer that has a conflicting product.",
          "type": "string"
        },
        "offerSequenceNumber": {
          "description": "For postpaid accounts, required to correctly identify the conflicting product on a customers account or line of service.",
          "type": "integer",
          "format": "int32"
        },
        "offerDescription": {
          "description": "Description of the conflicting offer.",
          "type": "string"
        },
        "productType": {
          "description": "Product type of the conflicting product.",
          "type": "string"
        },
        "productSubTypes": {
          "description": "Product sub type of the conflicting product.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "specifications": {
          "description": "Named value pairs. Additional details about the conflicting product.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConflictItemReferenceSpecifications"
          }
        },
        "accountNumber": {
          "description": "Account number that has the conflicting product.  Used when there is not a cart item for the conflicting product.",
          "type": "string"
        },
        "phoneNumber": {
          "description": "Used to identify the line of service (phone number) that has the conflicting product.  Used when there is not a cart item for the conflicting product.",
          "type": "string"
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "OrderLineValidations": {
      "type": "object",
      "properties": {
        "orderLineId": {
          "description": "Identifier of order line",
          "type": "string"
        },
        "level": {
          "description": "Validation level",
          "type": "string"
        },
        "code": {
          "description": "Validation code",
          "type": "string"
        },
        "category": {
          "description": "Validation category",
          "type": "string"
        },
        "message": {
          "description": "Validation message",
          "type": "string"
        },
        "relationshipType": {
          "type": "string"
        },
        "offerId": {
          "description": "Unique identifier of the related offer item.",
          "type": "string"
        },
        "offerDescription": {
          "description": "Description of the related  offer item.",
          "type": "string"
        },
        "promotionId": {
          "description": "The unique id of the promotion.",
          "type": "string"
        },
        "shortDescription": {
          "description": "Short description",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "promotionEffectivePeriod": {
          "description": "The time period where the Promotion is effective.",
          "type": "object",
          "$ref": "#/definitions/PromotionEffectivePeriod"
        },
        "productConflicts": {
          "description": "Conflict product or offer",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderLineValidationProductConflicts"
          }
        }
      }
    },
    "OrderOrderSummary": {
      "type": "object",
      "properties": {
        "accounts": {
          "description": "Account level data",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderSummaryAccounts"
          }
        },
        "lines": {
          "description": "Line level data",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderSummaryLines"
          }
        }
      }
    },
    "Orders": {
      "type": "object",
      "properties": {
        "quoteId": {
          "description": "Identifier of quote",
          "type": "string"
        },
        "orderId": {
          "type": "string"
        },
        "documentSet": {
          "type": "object",
          "$ref": "#/definitions/documentSet"
        },
        "metadata": {
          "type": "object",
          "$ref": "#/definitions/MetaDataFragment"
        },
        "keys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Keys"
          }
        },
        "salesInfo": {
          "description": "Information about the context within which the order was placed.",
          "type": "object",
          "$ref": "#/definitions/SalesInfo"
        },
        "totalAmount": {
          "description": "The total gross value of all cart items before discounts, taxes, or other modifiers besides tradeIns.  This is the aggregate of extendedPrice of all cart items less tradeIns",
          "type": "number",
          "format": "double"
        },
        "totalDiscount": {
          "type": "number",
          "format": "double"
        },
        "totalDue": {
          "description": "Total due",
          "type": "number",
          "format": "double"
        },
        "totalDueDescription": {
          "description": "Description for totalDue",
          "type": "string"
        },
        "totalDueWithoutTax": {
          "description": "totalDue without tax",
          "type": "number",
          "format": "double"
        },
        "totalDueWithoutTaxDescription": {
          "description": "Description for totalDueWithoutTax",
          "type": "string"
        },
        "totalFee": {
          "description": "Aggregate of the fees in the cart items.",
          "type": "number",
          "format": "double"
        },
        "totalFeeDescription": {
          "description": "Description for totalFee",
          "type": "string"
        },
        "totalFeeWithOutTax": {
          "description": "Total fee without tax",
          "type": "number",
          "format": "double"
        },
        "totalFeeWithoutTaxDescription": {
          "description": "Description for totalFeeWithoutTax",
          "type": "string"
        },
        "taxCollection": {
          "type": "object",
          "$ref": "#/definitions/TaxCollection"
        },
        "totalOneTimeCharge": {
          "description": "Total one time charge amount",
          "type": "number",
          "format": "double"
        },
        "totalAdjustment": {
          "description": "Total adjustment amount",
          "type": "number",
          "format": "double"
        },
        "totalShippingAmount": {
          "description": "The total shipping amount of cart, should be considered an estimate until the order is placed",
          "type": "number",
          "format": "double"
        },
        "currentMonthlyRecurringAmount": {
          "description": "Summary of the financial accounts current estimated monthly bill.",
          "type": "number",
          "format": "double"
        },
        "futureMonthlyRecurringAmount": {
          "description": "Estimate of the financial accounts monthly bill based upon changes present in the cart. This is the aggregate of futureRecurringAmount.",
          "type": "number",
          "format": "double"
        },
        "billingAddress": {
          "type": "object",
          "$ref": "#/definitions/BillingAddress"
        },
        "shippingAddress": {
          "type": "object",
          "$ref": "#/definitions/ShippingAddress"
        },
        "shippingMethod": {
          "type": "string"
        },
        "shippingContactNumber": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "creationTime": {
          "type": "string",
          "format": "date-time"
        },
        "scheduleChange": {
          "description": "It indicates WHEN the change should occur, NOW or FUTURE",
          "type": "string"
        },
        "termsConditionsIndicator": {
          "description": "To indicate if the customer accept the trems and conditions or not.",
          "type": "boolean"
        },
        "promotions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Promotions"
          }
        },
        "statusCode": {
          "description": "Code of status",
          "type": "string"
        },
        "overrideDateRulesIndicator": {
          "description": "To indicate if user have permission to overrider the backdate/future date plan and service effective dates.",
          "type": "boolean"
        },
        "numberOfNewLine": {
          "description": "Number of new line added.",
          "type": "integer",
          "format": "int32"
        },
        "numberOfPortIn": {
          "description": "Number of port in added.",
          "type": "integer",
          "format": "int32"
        },
        "overrideManagerId": {
          "description": "Identifier of manager who overrides the price",
          "type": "string"
        },
        "pushToBillIndicator": {
          "description": "To indicate if customer select to push charge or fee to bill (current cycle).",
          "type": "boolean"
        },
        "futurePaymentEligible": {
          "description": "To indicate if customer can make payment in the next bill cycle.",
          "type": "boolean"
        },
        "reasonForPushToBill": {
          "description": "Reason for push to bill",
          "type": "string"
        },
        "reasonCodeForPushToBill": {
          "description": "Reason code for push to bill",
          "type": "string"
        },
        "shippingDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShippingDetails"
          }
        },
        "notes": {
          "description": "Note from representative.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Notes"
          }
        },
        "oneTimeCharges": {
          "description": "List of one time charge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChargesOneTimeCharges"
          }
        },
        "recurringCharges": {
          "description": "List of recurring charge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChargesRecurringCharges"
          }
        },
        "oneTimeCredits": {
          "description": "One time credits",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChargesOneTimeCredits"
          }
        },
        "includedChargeTypes": {
          "description": "Charge types on summary level, such as Prorated Fees.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "paymentTerm": {
          "description": "Details about the payment terms for the order.",
          "type": "string"
        },
        "orderLineCollection": {
          "description": "Order line list",
          "type": "object",
          "$ref": "#/definitions/OrderLineCollection"
        },
        "validations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderValidations"
          }
        },
        "accounts": {
          "description": "Customer account list",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Accounts"
          }
        },
        "lines": {
          "description": "List of line of service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Lines"
          }
        },
        "customerProfile": {
          "description": "Customer profile",
          "type": "object",
          "$ref": "#/definitions/CustomerProfile"
        },
        "addresses": {
          "description": "Address list",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Addresses"
          }
        },
        "loans": {
          "description": "Loan list",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Loans"
          }
        },
        "payments": {
          "description": "List of payment",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Payments"
          }
        },
        "orderSummary": {
          "type": "object",
          "$ref": "#/definitions/OrderOrderSummary"
        }
      }
    },
    "OrderStatusCode": {
      "description": "A short hand identifier for the state of the Order, at the point in time specified by the effectivePeriod.",
      "type": "string",
      "enum": [
        "NEW",
        "INPROCESS",
        "CANCELED",
        "COMPLETE",
        "PROVISIONED",
        "RECEIVED",
        "ERROR",
        "INPROGRESSBEFOREPNR",
        "CANCELINPROGRESS",
        "LOCKEDFORUPDATE",
        "LOCKEDFORCANCEL",
        "POSTVOIDED"
      ]
    },
    "OrderSummary": {
      "type": "object",
      "properties": {
        "accounts": {
          "description": "Account level data",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersAccounts_2"
          }
        },
        "lines": {
          "description": "Line level data",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersLines_2"
          }
        }
      }
    },
    "OrderSummaryAccounts": {
      "type": "object",
      "properties": {
        "accountNumber": {
          "description": "Account Number",
          "type": "string"
        },
        "oneTimeCharges": {
          "description": "List of one time charge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChargesOneTimeCharges"
          }
        },
        "recurringCharges": {
          "description": "List of recurring charge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChargesRecurringCharges"
          }
        },
        "oneTimeCredits": {
          "description": "One time credits",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChargesOneTimeCredits"
          }
        },
        "taxCollection": {
          "type": "object",
          "$ref": "#/definitions/TaxCollection"
        },
        "totalDue": {
          "description": "Total due",
          "type": "number",
          "format": "double"
        },
        "totalDueDescription": {
          "description": "Description for totalDue",
          "type": "string"
        },
        "totalDueWithoutTax": {
          "description": "totalDue without tax",
          "type": "number",
          "format": "double"
        },
        "totalDueWithoutTaxDescription": {
          "description": "Description for totalDueWithoutTax",
          "type": "string"
        }
      }
    },
    "OrderSummaryLines": {
      "type": "object",
      "properties": {
        "universalLineId": {
          "description": "ULID - Universal identifier of the LineofService, as defined in Customer Hub.",
          "type": "string"
        },
        "lineId": {
          "description": "Uniquely identifies a  line of service.",
          "type": "string"
        },
        "phoneNumber": {
          "description": "The phone number (MSISDN) associated with the line of service.",
          "type": "string"
        },
        "oneTimeCharges": {
          "description": "List of one time charge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChargesOneTimeCharges"
          }
        },
        "recurringCharges": {
          "description": "List of recurring charge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChargesRecurringCharges"
          }
        },
        "oneTimeCredits": {
          "description": "One time credits",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChargesOneTimeCredits"
          }
        },
        "totalAmount": {
          "description": "Total amount for the item/line",
          "type": "number",
          "format": "double"
        },
        "taxCollection": {
          "type": "object",
          "$ref": "#/definitions/TaxCollection"
        },
        "totalDue": {
          "description": "Total due",
          "type": "number",
          "format": "double"
        },
        "totalDueDescription": {
          "description": "Description for totalDue",
          "type": "string"
        },
        "totalDueWithoutTax": {
          "description": "totalDue without tax",
          "type": "number",
          "format": "double"
        },
        "totalDueWithoutTaxDescription": {
          "description": "Description for totalDueWithoutTax",
          "type": "string"
        }
      }
    },
    "OrderValidationRelatedLineCollection": {
      "type": "object",
      "properties": {
        "relatedLines": {
          "description": "Related order lines",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedLinesRelatedLines"
          }
        }
      }
    },
    "OrderValidations": {
      "type": "object",
      "properties": {
        "level": {
          "description": "Validation level",
          "type": "string"
        },
        "code": {
          "description": "Validation code",
          "type": "string"
        },
        "category": {
          "description": "Validation category",
          "type": "string"
        },
        "message": {
          "description": "Validation message",
          "type": "string"
        },
        "relatedLineCollection": {
          "type": "object",
          "$ref": "#/definitions/OrderValidationRelatedLineCollection"
        }
      }
    },
    "Pagination": {
      "type": "object",
      "properties": {
        "pageNumber": {
          "description": "Page number",
          "type": "integer",
          "format": "int32"
        },
        "totalRecordCount": {
          "description": "Total number of records",
          "type": "integer",
          "format": "int32"
        },
        "totalPage": {
          "description": "Total number of pages",
          "type": "integer",
          "format": "int32"
        },
        "currentPageItem": {
          "description": "Number of items in this page",
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "description": "Page size",
          "type": "integer",
          "format": "int32"
        },
        "current": {
          "description": "Link to current page",
          "type": "string"
        },
        "next": {
          "description": "Link to next page",
          "type": "string"
        },
        "previous": {
          "description": "Link to previous page",
          "type": "string"
        }
      }
    },
    "PaginationFragment": {
      "type": "object",
      "properties": {
        "pageNumber": {
          "description": "Page number",
          "type": "integer",
          "format": "int32"
        },
        "totalRecordCount": {
          "description": "Total number of records",
          "type": "integer",
          "format": "int32"
        },
        "totalPage": {
          "description": "Total number of pages",
          "type": "integer",
          "format": "int32"
        },
        "currentPageItem": {
          "description": "Number of items in this page",
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "description": "Page size",
          "type": "integer",
          "format": "int32"
        },
        "current": {
          "description": "Link to current page",
          "type": "string"
        },
        "next": {
          "description": "Link to next page",
          "type": "string"
        },
        "previous": {
          "description": "Link to previous page",
          "type": "string"
        }
      }
    },
    "PaymentArrangementCollection": {
      "type": "object",
      "properties": {
        "paymentArrangements": {
          "description": "Payment arrangement",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentArrangements"
          }
        },
        "termsAgreementIndicator": {
          "description": "To indicate if the customer accept the agreement or not.",
          "type": "boolean"
        },
        "termsAndConditions": {
          "description": "Terms & Conditions",
          "type": "string"
        }
      }
    },
    "PaymentArrangementPaymentInstrument": {
      "type": "object",
      "properties": {
        "bankPayment": {
          "description": "Payment from bank, such as check, ETF, draft",
          "type": "object",
          "$ref": "#/definitions/PaymentInstrumentBankPayment"
        },
        "creditCard": {
          "description": "Credit card",
          "type": "object",
          "$ref": "#/definitions/PaymentInstrumentCreditCard"
        },
        "debitCard": {
          "description": "Debit card",
          "type": "object",
          "$ref": "#/definitions/PaymentInstrumentDebitCard"
        },
        "chargeAccountNumberType": {
          "description": "The type of charge account number format.",
          "type": "string"
        }
      }
    },
    "PaymentArrangementPlannedPayments": {
      "type": "object",
      "properties": {
        "plannedPaymentId": {
          "description": "Identifier of planned payment",
          "type": "string"
        },
        "plannedPaymentAmount": {
          "description": "The monetary amount to be paid in this payment installment.",
          "type": "number",
          "format": "double"
        },
        "plannedPaymentDate": {
          "description": "Date on which the planned payment is to be made.",
          "type": "string",
          "format": "date"
        },
        "status": {
          "description": "Status of planned payment. ( ‘P’ – Pending, ‘E’ – Extracted, ‘R’ - Rejected, C - Cancelled, I - In Process, A- Automatic Payment, V - Success with AVS Error, T - Technical Error, S - Settled, D - Deleted, X - Excluded, O - Reprocess)",
          "type": "string"
        },
        "statusReason": {
          "description": "The status reason of the planned payment.",
          "type": "string"
        },
        "creationTime": {
          "description": "When the planned payment is created.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PaymentArrangements": {
      "type": "object",
      "properties": {
        "paymentArrangementId": {
          "description": "Identifier of payment arrangement.",
          "type": "string"
        },
        "paymentArrangementType": {
          "description": "The payment arrangement type (Regular, Recurring, Proof of Payment, Late Billed)",
          "type": "string"
        },
        "status": {
          "description": "The status of payment arrangements.(O = Open,C = Closed,D = Deleted,F = Failed Payment,M = Missed Payment)",
          "type": "string"
        },
        "totalAmount": {
          "description": "Total amount for payment arrangement set up.",
          "type": "number",
          "format": "double"
        },
        "currentDueAmount": {
          "description": "The payment arrangement amount that is currently due or billed.",
          "type": "number",
          "format": "double"
        },
        "dueDate": {
          "description": "When the payment arranangement amount is due",
          "type": "string",
          "format": "date"
        },
        "pastDueExpectedAmount": {
          "description": "Expected past due amount",
          "type": "number",
          "format": "double"
        },
        "pastDueActualAmount": {
          "description": "Actual past due amount",
          "type": "number",
          "format": "double"
        },
        "paymentArrangementFee": {
          "description": "The fee charged for payment arrangement setup.",
          "type": "number",
          "format": "double"
        },
        "futureDatedPaymentIndicator": {
          "description": "To indicate if the future dated payment is on file",
          "type": "boolean"
        },
        "actionCode": {
          "description": "Action code",
          "type": "string"
        },
        "paymentArrangementCategory": {
          "description": "Further classifies the payment arrangement.",
          "type": "string"
        },
        "specificationGroups": {
          "description": "named value pairs",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SpecificationGroups"
          }
        },
        "paymentInstrument": {
          "description": "How the payment is made",
          "type": "object",
          "$ref": "#/definitions/PaymentInstrument"
        },
        "plannedPayments": {
          "description": "Planned payment",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlannedPayments"
          }
        },
        "channelId": {
          "description": "Identifier for the channel, such as WEB, CARE, RETAIL etc.",
          "type": "string"
        },
        "authorizationTime": {
          "description": "The time when the customer authorizes the payment arrangement",
          "type": "string",
          "format": "date-time"
        },
        "creationTime": {
          "description": "The time when the customer set up the payment arrangement",
          "type": "string",
          "format": "date-time"
        },
        "autoRestoreIndicator": {
          "description": "If TRUE, then involuntary suspended Account will automatically be restored by billing system after Payment Arrangement is set up, else billing system will not restore the Account automatically.",
          "type": "boolean"
        }
      }
    },
    "PaymentArrangementSpecificationGroups": {
      "type": "object",
      "properties": {
        "groupName": {
          "type": "string"
        },
        "specifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SpecificationGroupSpecifications"
          }
        }
      }
    },
    "PaymentCard": {
      "type": "object",
      "properties": {
        "last4CardNumber": {
          "description": "Last four digits of the card used for payment",
          "type": "string"
        },
        "cardNumber": {
          "description": "Payment card number",
          "type": "string"
        },
        "typeCode": {
          "description": "Type of payment Card. Examples are Visa, MasterCard, Debit etc",
          "type": "string"
        },
        "cardHolderName": {
          "description": "Name of the Card Holder",
          "type": "string"
        },
        "cardHolderFirstName": {
          "description": "First name of the card holder",
          "type": "string"
        },
        "cardHolderLastName": {
          "description": "Last name of the card holder",
          "type": "string"
        },
        "companyName": {
          "description": "Business Name identified for the card if applicable",
          "type": "string"
        },
        "expirationMonthYear": {
          "description": "Expiration month and year of the card",
          "type": "string"
        },
        "cardHolderAddress": {
          "type": "object",
          "$ref": "#/definitions/BatchOrdersCardHolderAddress_3"
        },
        "cardImage": {
          "description": "Image of the card",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersCardImage_3"
        },
        "cvv": {
          "description": "Card Verification Value",
          "type": "string"
        },
        "maskingType": {
          "description": "The type of masking to be applied to the credit card number for security and privacy.",
          "type": "string"
        },
        "paymentCardAlias": {
          "description": "A nickname assigned by the customer as an alternative way to identify a stored payment card.",
          "type": "string"
        },
        "expirationTime": {
          "description": "The time when the card is expired to use.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PaymentCardCardHolderAddress": {
      "type": "object",
      "properties": {
        "addressId": {
          "description": "Identifier of address.",
          "type": "string"
        },
        "purposes": {
          "description": "The purpose or usage context for which the address should be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addressLine1": {
          "description": "The first line of the address, required.",
          "type": "string"
        },
        "addressLine2": {
          "description": "The second line of the address, optional.",
          "type": "string"
        },
        "addressLine3": {
          "description": "The third line of the address, optional.",
          "type": "string"
        },
        "cityName": {
          "description": "The name of the city in the mailing address. For military or diplomatic addresses should contain FPO, APO, or DPO.",
          "type": "string"
        },
        "stateCode": {
          "description": "The two letter state code.",
          "type": "string"
        },
        "zip": {
          "description": "The 5 digit zip or postal delivery code.",
          "type": "string"
        },
        "zipExt": {
          "description": "The zip or postal delivery extension.",
          "type": "string"
        },
        "countryCode": {
          "description": "Country code",
          "type": "string"
        },
        "geoCode": {
          "description": "A unique code that represents a geospatial coordinate measurement of an exact geographic location and time at, below, or above the surface of the earth",
          "type": "string"
        },
        "addressFormatType": {
          "type": "string"
        },
        "default": {
          "description": "Flags the address to be used for default communications.",
          "type": "string"
        },
        "validationStatus": {
          "description": "Specifies whether the address is VALIDATED, NONVALIDATED, or UNDELIVERABLE.",
          "type": "string"
        },
        "overwritten": {
          "description": "Flags whether the provided address has been overwritten by the system.",
          "type": "boolean"
        }
      }
    },
    "PaymentCardCardImage": {
      "type": "object",
      "properties": {
        "attachmentReferenceId": {
          "description": "Uniquely identifies the attachment record in the context of the cart or other parent object.",
          "type": "string"
        },
        "mimeType": {
          "description": "Mime type of the encoded document.  Mime type construction will conform to RFC 2045, and will use accepted mime types per the IANA mime type  listings.  Specific supported document types at the time of this writing are: application/pdf, image/png, text/plain, text/x-url, text/html, text/xml, image/jpeg.",
          "type": "string"
        },
        "description": {
          "description": "Description of the attachment",
          "type": "string"
        },
        "embeddedData": {
          "description": "Element holding data embedded directly in the BOD instance.",
          "type": "string"
        }
      }
    },
    "PaymentInstrument": {
      "type": "object",
      "properties": {
        "bankPayment": {
          "description": "Payment from bank, such as check, ETF, draft",
          "type": "object",
          "$ref": "#/definitions/BankPayment"
        },
        "creditCard": {
          "description": "Credit card",
          "type": "object",
          "$ref": "#/definitions/CreditCard"
        },
        "debitCard": {
          "description": "Debit card",
          "type": "object",
          "$ref": "#/definitions/DebitCard"
        },
        "chargeAccountNumberType": {
          "description": "The type of charge account number format.",
          "type": "string"
        }
      }
    },
    "PaymentInstrumentBankPayment": {
      "type": "object",
      "properties": {
        "transferTypeCode": {
          "description": "Bank account payment transfer type",
          "type": "string"
        },
        "referenceCode": {
          "description": "Payment system-provided reference code for this payment.",
          "type": "string"
        },
        "bankName": {
          "description": "Name of the bank",
          "type": "string"
        },
        "accountHolderNames": {
          "description": "Name of the account holder.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "accountType": {
          "description": "Type of account, Saving or Checking.",
          "type": "string"
        },
        "accountNumber": {
          "description": "Account number in the bank",
          "type": "string"
        },
        "routingNumber": {
          "description": "Routing Number of the bank on whom the payment instrument is drawn",
          "type": "string"
        },
        "accountHolderAddress": {
          "description": "Address of the account holder",
          "type": "object",
          "$ref": "#/definitions/BankPaymentAccountHolderAddress"
        },
        "checkNumber": {
          "description": "The number uniquely identifying the check within the the set of checks written against the customers bank account.",
          "type": "string"
        },
        "bankAccountAlias": {
          "description": "Bank account alias used by the customer.",
          "type": "string"
        }
      }
    },
    "PaymentInstrumentCreditCard": {
      "type": "object",
      "properties": {
        "last4CardNumber": {
          "description": "Last four digits of the card used for payment",
          "type": "string"
        },
        "cardNumber": {
          "description": "Payment card number",
          "type": "string"
        },
        "typeCode": {
          "description": "Type of payment Card. Examples are Visa, MasterCard, Debit etc",
          "type": "string"
        },
        "cardHolderName": {
          "description": "Name of the Card Holder",
          "type": "string"
        },
        "cardHolderFirstName": {
          "description": "First name of the card holder",
          "type": "string"
        },
        "cardHolderLastName": {
          "description": "Last name of the card holder",
          "type": "string"
        },
        "companyName": {
          "description": "Business Name identified for the card if applicable",
          "type": "string"
        },
        "expirationMonthYear": {
          "description": "Expiration month and year of the card",
          "type": "string"
        },
        "cardHolderAddress": {
          "type": "object",
          "$ref": "#/definitions/PaymentCardCardHolderAddress"
        },
        "cardImage": {
          "description": "Image of the card",
          "type": "object",
          "$ref": "#/definitions/PaymentCardCardImage"
        },
        "cvv": {
          "description": "Card Verification Value",
          "type": "string"
        },
        "maskingType": {
          "description": "The type of masking to be applied to the credit card number for security and privacy.",
          "type": "string"
        },
        "paymentCardAlias": {
          "description": "A nickname assigned by the customer as an alternative way to identify a stored payment card.",
          "type": "string"
        },
        "expirationTime": {
          "description": "The time when the card is expired to use.",
          "type": "string",
          "format": "date-time"
        },
        "securityCode": {
          "description": "Security code of the credit card",
          "type": "string"
        }
      }
    },
    "PaymentInstrumentDebitCard": {
      "type": "object",
      "properties": {
        "last4CardNumber": {
          "description": "Last four digits of the card used for payment",
          "type": "string"
        },
        "cardNumber": {
          "description": "Payment card number",
          "type": "string"
        },
        "typeCode": {
          "description": "Type of payment Card. Examples are Visa, MasterCard, Debit etc",
          "type": "string"
        },
        "cardHolderName": {
          "description": "Name of the Card Holder",
          "type": "string"
        },
        "cardHolderFirstName": {
          "description": "First name of the card holder",
          "type": "string"
        },
        "cardHolderLastName": {
          "description": "Last name of the card holder",
          "type": "string"
        },
        "companyName": {
          "description": "Business Name identified for the card if applicable",
          "type": "string"
        },
        "expirationMonthYear": {
          "description": "Expiration month and year of the card",
          "type": "string"
        },
        "cardHolderAddress": {
          "type": "object",
          "$ref": "#/definitions/PaymentCardCardHolderAddress"
        },
        "cardImage": {
          "description": "Image of the card",
          "type": "object",
          "$ref": "#/definitions/PaymentCardCardImage"
        },
        "cvv": {
          "description": "Card Verification Value",
          "type": "string"
        },
        "maskingType": {
          "description": "The type of masking to be applied to the credit card number for security and privacy.",
          "type": "string"
        },
        "paymentCardAlias": {
          "description": "A nickname assigned by the customer as an alternative way to identify a stored payment card.",
          "type": "string"
        },
        "expirationTime": {
          "description": "The time when the card is expired to use.",
          "type": "string",
          "format": "date-time"
        },
        "PIN": {
          "description": "PIN code of the card",
          "type": "string"
        }
      }
    },
    "PaymentPaymentCard": {
      "type": "object",
      "properties": {
        "last4CardNumber": {
          "description": "Last four digits of the card used for payment",
          "type": "string"
        },
        "cardNumber": {
          "description": "Payment card number",
          "type": "string"
        },
        "typeCode": {
          "description": "Type of payment Card. Examples are Visa, MasterCard, Debit etc",
          "type": "string"
        },
        "cardHolderName": {
          "description": "Name of the Card Holder",
          "type": "string"
        },
        "cardHolderFirstName": {
          "description": "First name of the card holder",
          "type": "string"
        },
        "cardHolderLastName": {
          "description": "Last name of the card holder",
          "type": "string"
        },
        "companyName": {
          "description": "Business Name identified for the card if applicable",
          "type": "string"
        },
        "expirationMonthYear": {
          "description": "Expiration month and year of the card",
          "type": "string"
        },
        "cardHolderAddress": {
          "type": "object",
          "$ref": "#/definitions/PaymentCardCardHolderAddress"
        },
        "cardImage": {
          "description": "Image of the card",
          "type": "object",
          "$ref": "#/definitions/PaymentCardCardImage"
        },
        "cvv": {
          "description": "Card Verification Value",
          "type": "string"
        },
        "maskingType": {
          "description": "The type of masking to be applied to the credit card number for security and privacy.",
          "type": "string"
        },
        "paymentCardAlias": {
          "description": "A nickname assigned by the customer as an alternative way to identify a stored payment card.",
          "type": "string"
        },
        "expirationTime": {
          "description": "The time when the card is expired to use.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PaymentPaymentInstrument": {
      "type": "object",
      "properties": {
        "bankPayment": {
          "description": "Payment from bank, such as check, ETF, draft",
          "type": "object",
          "$ref": "#/definitions/PaymentInstrumentBankPayment"
        },
        "creditCard": {
          "description": "Credit card",
          "type": "object",
          "$ref": "#/definitions/PaymentInstrumentCreditCard"
        },
        "debitCard": {
          "description": "Debit card",
          "type": "object",
          "$ref": "#/definitions/PaymentInstrumentDebitCard"
        },
        "chargeAccountNumberType": {
          "description": "The type of charge account number format.",
          "type": "string"
        }
      }
    },
    "Payments": {
      "type": "object",
      "properties": {
        "paymentTransactionId": {
          "description": "A value assigned by the merchant to uniquely reference a transaction and any subsequent related transactions",
          "type": "string"
        },
        "chargeAmount": {
          "description": "The total amount of the transaction inclusive of all additional amounts.",
          "type": "number",
          "format": "double"
        },
        "authorizedAmount": {
          "description": "Amount authorized by the financial institution.",
          "type": "number",
          "format": "double"
        },
        "statusCode": {
          "description": "Status code",
          "type": "string"
        },
        "subStatusCode": {
          "description": "Sub Status Code",
          "type": "string"
        },
        "reasonCode": {
          "description": "Status reason code",
          "type": "string"
        },
        "reasonDescription": {
          "description": "Status reason description",
          "type": "string"
        },
        "paymentId": {
          "description": "Identifier of payment",
          "type": "string"
        },
        "sourceId": {
          "description": "To identify where the payment is originated from.",
          "type": "string"
        },
        "authorizationId": {
          "description": "Identifier or code of the transaction authorization.",
          "type": "string"
        },
        "paymentChannelCode": {
          "description": "The channel in which the payment was originally performed.",
          "type": "string"
        },
        "transactionType": {
          "description": "The type of transaction being performed, such as onetimePayment,activation",
          "type": "string"
        },
        "businessTransactionType": {
          "description": "Type of transaction with business process, such as OTP_SPM for onetime payment with stored payment in iHAPS.",
          "type": "string"
        },
        "orderNumber": {
          "description": "The order number this payment is associated with.",
          "type": "string"
        },
        "merchantId": {
          "description": "A unique ID used to identify the Merchant.",
          "type": "string"
        },
        "merchantCategoryCode": {
          "description": "The merchant category code (MCC) is an industry standard four-digit number used to classify a business by the type of goods or services it provides.",
          "type": "string"
        },
        "accountNumberEntryMode": {
          "description": "Indicates how the account number was entered on the transaction at Point of Sale (POS).",
          "type": "string"
        },
        "electronicAuthenticationCapability": {
          "description": "A code indicating the electronic (PIN) authentication capability at the Point of Sale (POS).",
          "type": "string"
        },
        "terminalType": {
          "description": "An identifier used to describe the type of terminal being used for the transaction.",
          "type": "string"
        },
        "terminalId": {
          "description": "Identifier of terminal.",
          "type": "string"
        },
        "terminalEntryCapability": {
          "description": "An identifier used to indicate the entry mode capability of the terminal.",
          "type": "string"
        },
        "settlementIndicator": {
          "description": "This field indicates a type of settlement other than Host Capture.",
          "type": "string"
        },
        "customerPresentIndicator": {
          "description": "To indicate if the customer is presented when the transaction happens.",
          "type": "boolean"
        },
        "phoneNumber": {
          "description": "Customers phone number",
          "type": "string"
        },
        "accountNumber": {
          "description": "The financial account number that identifies the account.",
          "type": "string"
        },
        "customerId": {
          "description": "Uniquely identifies the customer party.",
          "type": "string"
        },
        "taxAmount": {
          "description": "Amount of tax included in the payment transaction.",
          "type": "number",
          "format": "double"
        },
        "creationTime": {
          "description": "Time when the Payment request was created.",
          "type": "string",
          "format": "date-time"
        },
        "termsAgreementIndicator": {
          "description": "To indicate if the customer accept the agreement or not.",
          "type": "boolean"
        },
        "termsAgreementTime": {
          "description": "Time when the customer accepts the terms agreement.",
          "type": "string",
          "format": "date-time"
        },
        "paymentMethodId": {
          "description": "Uniquely identifies a stored payment method.",
          "type": "string"
        },
        "defaultPaymentMethodIndicator": {
          "description": "To indicate if this payment method is default",
          "type": "boolean"
        },
        "paymentMethodCode": {
          "description": "Code identifying the current payment method specified for the payment instrument.",
          "type": "string"
        },
        "storedPaymentMethodId": {
          "description": "Identifer of stored payment method",
          "type": "string"
        },
        "storePaymentMethodIndicator": {
          "description": "To identify if the current payment method needs to be stored in payment gateway.",
          "type": "boolean"
        },
        "enrolledInAutoRenewIndicator": {
          "description": "To indicate if the payment method is enrolled in automated renew payment.",
          "type": "boolean"
        },
        "swipeData": {
          "description": "Data read from card.",
          "type": "object",
          "$ref": "#/definitions/PaymentSwipeData"
        },
        "paymentInstrument": {
          "description": "How the payment is made",
          "type": "object",
          "$ref": "#/definitions/PaymentPaymentInstrument"
        },
        "currency": {
          "description": "Currency code",
          "type": "string"
        },
        "paymentCard": {
          "type": "object",
          "$ref": "#/definitions/PaymentPaymentCard"
        },
        "voucherRedemption": {
          "description": "Payment is made by redeeming a voucher.",
          "type": "object",
          "$ref": "#/definitions/PaymentVoucherRedemption"
        },
        "tillNumber": {
          "description": "Till number on the receipt.",
          "type": "string"
        },
        "cardPresentIndicator": {
          "description": "To indicate if the credit card is presented",
          "type": "boolean"
        },
        "specifications": {
          "description": "Named value pair",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentSpecifications"
          }
        },
        "authorizationTime": {
          "description": "The time when the customer authorizes the payment.",
          "type": "string",
          "format": "date-time"
        },
        "processingFeeWaiveIndicator": {
          "description": "To indicate if the payment processing fee can be waived or not by manager or representative.",
          "type": "boolean"
        },
        "previousBalance": {
          "description": "Balance before payment is applied.",
          "type": "number",
          "format": "double"
        },
        "newBalance": {
          "description": "Balance after payment is applied.",
          "type": "number",
          "format": "double"
        }
      }
    },
    "PaymentSchedule": {
      "type": "object",
      "properties": {
        "paymentDueDate": {
          "description": "Due date of payment in a month",
          "type": "string",
          "format": "date"
        },
        "installmentNumber": {
          "description": "Installment number of the scheduled payment",
          "type": "integer",
          "format": "int32"
        },
        "paymentAmount": {
          "description": "Payment amount",
          "type": "number",
          "format": "double"
        }
      }
    },
    "PaymentSpecifications": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "PaymentSwipeData": {
      "type": "object",
      "properties": {
        "macAddress": {
          "description": "A media access control address (MAC address) is a unique identifier assigned to network interfaces for communications on the physical network segment.",
          "type": "string"
        },
        "encryptionTarget": {
          "description": "The type of data that is being encrypted.",
          "type": "string"
        },
        "encryptedContent": {
          "description": "The track data or card number provided in an encrypted block.",
          "type": "string"
        },
        "keySequenceNumber": {
          "description": "Encripted key sequence number",
          "type": "string"
        },
        "track1Data": {
          "description": "This field contains the unaltered track 1 data from the magnetic stripe of the card.",
          "type": "string"
        },
        "track2Data": {
          "description": "This field contains the unaltered track 2 data from the magnetic stripe of the card.",
          "type": "string"
        },
        "securityLevel": {
          "description": "This field indicates the security level used on a TransArmor transaction.",
          "type": "string"
        },
        "token": {
          "description": "This field contains the Multi-pay token which can be used to replace the PAN. The Multi-pay token is the same length as the card number and contains the same last four digits. Multi-pay tokens can be used to initiate subsequent transactions that would normally be submitted using a PAN (e.g. recurring transactions).",
          "type": "string"
        },
        "tokenType": {
          "description": "This field indicates the Multi-pay token type identifier used in a transaction.",
          "type": "string"
        }
      }
    },
    "PaymentVoucherRedemption": {
      "type": "object",
      "properties": {
        "serialNumber": {
          "description": "The serial number uniquely identifies the Voucher document.",
          "type": "string"
        },
        "issuerId": {
          "description": "Identifies the issuer of the Voucher document.",
          "type": "string"
        },
        "pin": {
          "description": "Personal identification number for the Voucher.",
          "type": "string"
        },
        "voucherRedemptionType": {
          "description": "Categorizes the type of voucher redemption: refill or activation.",
          "type": "string"
        }
      }
    },
    "PersonProfileAddressCommunications": {
      "type": "object",
      "properties": {
        "addressId": {
          "description": "Identifier of address.",
          "type": "string"
        },
        "purposes": {
          "description": "The purpose or usage context for which the address should be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addressLine1": {
          "description": "The first line of the address, required.",
          "type": "string"
        },
        "addressLine2": {
          "description": "The second line of the address, optional.",
          "type": "string"
        },
        "addressLine3": {
          "description": "The third line of the address, optional.",
          "type": "string"
        },
        "cityName": {
          "description": "The name of the city in the mailing address. For military or diplomatic addresses should contain FPO, APO, or DPO.",
          "type": "string"
        },
        "stateCode": {
          "description": "The two letter state code.",
          "type": "string"
        },
        "zip": {
          "description": "The 5 digit zip or postal delivery code.",
          "type": "string"
        },
        "zipExt": {
          "description": "The zip or postal delivery extension.",
          "type": "string"
        },
        "countryCode": {
          "description": "Country code",
          "type": "string"
        },
        "geoCode": {
          "description": "A unique code that represents a geospatial coordinate measurement of an exact geographic location and time at, below, or above the surface of the earth",
          "type": "string"
        },
        "addressFormatType": {
          "type": "string"
        },
        "default": {
          "description": "Flags the address to be used for default communications.",
          "type": "string"
        },
        "validationStatus": {
          "description": "Specifies whether the address is VALIDATED, NONVALIDATED, or UNDELIVERABLE.",
          "type": "string"
        },
        "overwritten": {
          "description": "Flags whether the provided address has been overwritten by the system.",
          "type": "boolean"
        },
        "classification": {
          "description": "Classification of the address",
          "type": "string"
        },
        "label": {
          "description": "Address label",
          "type": "string"
        },
        "addressLine4": {
          "description": "The fourth free form line, expressed as text, of an address",
          "type": "string"
        },
        "stateName": {
          "description": "Name of the state",
          "type": "string"
        },
        "provinceName": {
          "description": "Name of the province",
          "type": "string"
        },
        "provinceCode": {
          "description": "Province code",
          "type": "string"
        },
        "countyName": {
          "description": "Name of the county",
          "type": "string"
        },
        "countyCode": {
          "description": "County code",
          "type": "string"
        },
        "attention": {
          "description": "Attention of the address",
          "type": "string"
        },
        "careOf": {
          "description": "The name, expressed as text, of a person or organization at this address to whom incoming mail is marked with words such as care of or C/O",
          "type": "string"
        },
        "postalCode": {
          "description": "A code specifying the postal code of the address",
          "type": "string"
        },
        "uncertaintyIndicator": {
          "description": "To indicate if the address is uncertain or not",
          "type": "boolean"
        },
        "geographicCoordinate": {
          "description": "The latitude and longitude of the geographic location that corresponds to the address.",
          "type": "object",
          "$ref": "#/definitions/GeographicCoordinate"
        },
        "urbanization": {
          "description": "Urbanization name or code",
          "type": "string"
        },
        "optOut": {
          "description": "Indicates the privacy option for this communication channel. If opted out, this communication cannot be used for telemarketing calls, mails, emails...etc.",
          "type": "string"
        },
        "optOutReason": {
          "type": "string"
        },
        "optOutType": {
          "description": "Indicates the type of marketing activity that the customer has opted in/out from. If no value is provided, it is assumed that the customer has opted in/out from all activity through this communication channel.",
          "type": "string"
        }
      }
    },
    "PersonProfileEmailCommunications": {
      "type": "object",
      "properties": {
        "purposes": {
          "description": "The purpose for which this email address should be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "emailAddress": {
          "description": "The email address used for the given purpose.",
          "type": "string"
        },
        "validationStatus": {
          "description": "Specifies the validation status of the email address: VALIDATED, NONVALIDATED, DELIVERED, or UNDELIVERABLE.",
          "type": "string"
        }
      }
    },
    "PersonProfilePhoneNumbers": {
      "type": "object",
      "properties": {
        "phoneType": {
          "description": "Type of the phone",
          "type": "string"
        },
        "phoneNumber": {
          "description": "Phone number",
          "type": "string"
        },
        "phoneExtension": {
          "description": "Phone extension number",
          "type": "string"
        },
        "purposes": {
          "description": "The purpose for which this phone number should be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "validationStatus": {
          "description": "Specifies the validation status of the phone number: INSERVICE, FORWARDED, DISCONNECTED, or NONVALIDATED.",
          "type": "string"
        },
        "optOut": {
          "description": "Indicates the privacy option for this communication channel. If opted out, this communication cannot be used for telemarketing calls, mails, emails...etc.",
          "type": "string"
        },
        "optOutReason": {
          "type": "string"
        },
        "optOutType": {
          "description": "Indicates the type of marketing activity that the customer has opted in/out from. If no value is provided, it is assumed that the customer has opted in/out from all activity through this communication channel.",
          "type": "string"
        }
      }
    },
    "phoneNumber": {
      "type": "string"
    },
    "PhoneNumbers": {
      "type": "object",
      "properties": {
        "phoneType": {
          "description": "Type of the phone",
          "type": "string"
        },
        "phoneNumber": {
          "description": "Phone number",
          "type": "string"
        },
        "phoneExtension": {
          "description": "Phone extension number",
          "type": "string"
        },
        "purposes": {
          "description": "The purpose for which this phone number should be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "validationStatus": {
          "description": "Specifies the validation status of the phone number: INSERVICE, FORWARDED, DISCONNECTED, or NONVALIDATED.",
          "type": "string"
        },
        "optOut": {
          "description": "Indicates the privacy option for this communication channel. If opted out, this communication cannot be used for telemarketing calls, mails, emails...etc.",
          "type": "string"
        },
        "optOutReason": {
          "type": "string"
        },
        "optOutType": {
          "description": "Indicates the type of marketing activity that the customer has opted in/out from. If no value is provided, it is assumed that the customer has opted in/out from all activity through this communication channel.",
          "type": "string"
        }
      }
    },
    "PlannedPayments": {
      "type": "object",
      "properties": {
        "plannedPaymentId": {
          "description": "Identifier of planned payment",
          "type": "string"
        },
        "plannedPaymentAmount": {
          "description": "The monetary amount to be paid in this payment installment.",
          "type": "number",
          "format": "double"
        },
        "plannedPaymentDate": {
          "description": "Date on which the planned payment is to be made.",
          "type": "string",
          "format": "date"
        },
        "status": {
          "description": "Status of planned payment. ( ‘P’ – Pending, ‘E’ – Extracted, ‘R’ - Rejected, C - Cancelled, I - In Process, A- Automatic Payment, V - Success with AVS Error, T - Technical Error, S - Settled, D - Deleted, X - Excluded, O - Reprocess)",
          "type": "string"
        },
        "statusReason": {
          "description": "The status reason of the planned payment.",
          "type": "string"
        },
        "creationTime": {
          "description": "When the planned payment is created.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PortIn": {
      "type": "object",
      "properties": {
        "portRequestId": {
          "description": "The unique identifier for port request.",
          "type": "string"
        },
        "msisdn": {
          "type": "string"
        },
        "portDueTime": {
          "type": "string",
          "format": "date-time"
        },
        "oldServiceProvider": {
          "description": "The actual carrier that is giving up the number.",
          "type": "string"
        },
        "oldServiceProviderName": {
          "type": "string"
        },
        "oldVirtualServiceProvider": {
          "description": "The organization that was carrying the customers contract for the phone number that is being moved, if it was not the actual service provider.",
          "type": "string"
        },
        "oldVirtualServiceProviderId": {
          "type": "string"
        },
        "oldVirtualServiceProviderName": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "portStatus": {
          "description": "Status of port",
          "type": "string"
        },
        "transitionalMSISDN": {
          "description": "The temporary MSISDN used to give the subscriber service while waiting for the port to complete.",
          "type": "string"
        },
        "contactName": {
          "description": "reference contact name to call in case of port in concerns.",
          "type": "string"
        },
        "contactPhone": {
          "description": "reference number to call in case of port in concerns.",
          "type": "string"
        },
        "oldServiceAccountNumber": {
          "description": "Old service provider account number.",
          "type": "string"
        },
        "eligibilityIndicator": {
          "description": "Flag indicating whether the determination is eligible or ineligible.",
          "type": "boolean"
        },
        "eligibilityStatus": {
          "description": "Code identifying the status of eligibility that was determined.",
          "type": "string"
        },
        "eligibilityType": {
          "description": "The type of eligibility being established.",
          "type": "string"
        },
        "ineligibleReasons": {
          "description": "The reason for ineligibility.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IneligibleReasons"
          }
        }
      }
    },
    "PossibleStatusCodes": {
      "type": "object",
      "properties": {
        "OrderStatusCode": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/OrderStatusCode",
            "enum": [
              "NEW",
              "INPROCESS",
              "CANCELED",
              "COMPLETE",
              "PROVISIONED",
              "RECEIVED",
              "ERROR",
              "INPROGRESSBEFOREPNR",
              "CANCELINPROGRESS",
              "LOCKEDFORUPDATE",
              "LOCKEDFORCANCEL",
              "POSTVOIDED"
            ]
          }
        }
      }
    },
    "PriceComponents": {
      "type": "object",
      "properties": {
        "priceComponentId": {
          "description": "Identifier of price component, or charge sequence number",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "description": "Description of price component",
          "type": "string"
        },
        "productChargeType": {
          "description": "Type of price component",
          "type": "string"
        },
        "amount": {
          "description": "Dollar amount of price to be charged",
          "type": "number",
          "format": "double"
        },
        "basisAmount": {
          "type": "number",
          "format": "double"
        },
        "usageMeasurementUnit": {
          "type": "string"
        },
        "discountAmount": {
          "type": "number",
          "format": "double"
        },
        "frequency": {
          "description": "Categorizes the price component frequency as one time or recurring.",
          "type": "string"
        },
        "promotionId": {
          "type": "string"
        },
        "expirationDate": {
          "description": "Expiration date",
          "type": "string",
          "format": "date"
        }
      }
    },
    "PricePointCriteria": {
      "type": "object",
      "properties": {
        "allowedOrderTypes": {
          "description": "Upgrade, New Activation, etc..",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowedOrderSubTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "additionalRequiredOffers": {
          "description": "Other offers that must be purchased in the same transaction for this price point.  Example:   An EIP offer or equipment lease offer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdditionalRequiredOffers"
          }
        },
        "offerCategory": {
          "description": "The category of plan offer that a line of service must have in order to qualify for this multi-line price point.",
          "type": "string"
        },
        "offerSubCategory1": {
          "description": "The second-level category of plan offer that a line of service must have in order to qualify for this multi-line price point.",
          "type": "string"
        },
        "beginningLineOfServiceNumber": {
          "description": "For network service offers that have tiered pricing, the beginning line number for this price point.  For example if a service costs $10 for the first 2 lines, the beginning value is 1 and the ending value is 2.",
          "type": "integer",
          "format": "int32"
        },
        "endingLineOfServiceNumber": {
          "description": "For network service offers that have tiered pricing, the ending line number for this price point.  For example if a service costs $10 for the first 2 lines, the beginning value is 1 and the ending value is 2.",
          "type": "integer",
          "format": "int32"
        },
        "financingProgramType": {
          "description": "Financing program type, such as loan or lease.  Same as the productSubType in offer.",
          "type": "string"
        },
        "creditRiskProfileId": {
          "description": "Unique identifier generated from risk system which is derived from multple business inputs -creditscore, tenure and payment history etc.",
          "type": "string"
        }
      }
    },
    "PricePointSpecifications": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "Prices": {
      "type": "object",
      "properties": {
        "priceListLineId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "offeringPriceType": {
          "description": "Categorization of the price point.",
          "type": "string"
        },
        "oneTimeCharges": {
          "description": "One-time charges/discounts for the price point are listed here.  Examples: charges for an on-demand data pass or equipment purchase.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OneTimeCharges"
          }
        },
        "recurringChargeDetail": {
          "description": "For type of recurring charge, the schedule of amounts and discounts of the price point are listed here.  Examples:  monthly MRC charges, or equipment lease/finance.",
          "type": "object",
          "$ref": "#/definitions/RecurringChargeDetail"
        },
        "pricePointCriteria": {
          "type": "object",
          "$ref": "#/definitions/PricePointCriteria"
        },
        "canModifyPrice": {
          "description": "When fales, the price can never be overridden even by representatives with the appropriate authority.",
          "type": "boolean"
        },
        "taxInclusiveIndicator": {
          "description": "When true indicates the price reflects the total after tax.",
          "type": "boolean"
        },
        "specifications": {
          "description": "Named value pair",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PricePointSpecifications"
          }
        },
        "futureDatedPaymentIndicator": {
          "description": "To indicate if the payment can be made in the future.",
          "type": "boolean"
        }
      }
    },
    "PrimaryHolder": {
      "type": "object",
      "properties": {
        "fullName": {
          "description": "The full name of the person, including first, middle, and family names.",
          "type": "string"
        },
        "firstName": {
          "description": "The given name or first name of the person",
          "type": "string"
        },
        "middleName": {
          "description": "The middle name or middle initial of the person.",
          "type": "string"
        },
        "familyName": {
          "description": "The family name or surname or last name of the person.",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        },
        "suffix": {
          "type": "string"
        },
        "phoneNumber": {
          "description": "The phone number that identifies the primary line of service on the account.",
          "type": "string"
        }
      }
    },
    "PrimaryPlaceOfUseAddress": {
      "type": "object",
      "properties": {
        "addressId": {
          "description": "Identifier of address.",
          "type": "string"
        },
        "purposes": {
          "description": "The purpose or usage context for which the address should be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addressLine1": {
          "description": "The first line of the address, required.",
          "type": "string"
        },
        "addressLine2": {
          "description": "The second line of the address, optional.",
          "type": "string"
        },
        "addressLine3": {
          "description": "The third line of the address, optional.",
          "type": "string"
        },
        "cityName": {
          "description": "The name of the city in the mailing address. For military or diplomatic addresses should contain FPO, APO, or DPO.",
          "type": "string"
        },
        "stateCode": {
          "description": "The two letter state code.",
          "type": "string"
        },
        "zip": {
          "description": "The 5 digit zip or postal delivery code.",
          "type": "string"
        },
        "zipExt": {
          "description": "The zip or postal delivery extension.",
          "type": "string"
        },
        "countryCode": {
          "description": "Country code",
          "type": "string"
        },
        "geoCode": {
          "description": "A unique code that represents a geospatial coordinate measurement of an exact geographic location and time at, below, or above the surface of the earth",
          "type": "string"
        },
        "addressFormatType": {
          "type": "string"
        },
        "default": {
          "description": "Flags the address to be used for default communications.",
          "type": "string"
        },
        "validationStatus": {
          "description": "Specifies whether the address is VALIDATED, NONVALIDATED, or UNDELIVERABLE.",
          "type": "string"
        },
        "overwritten": {
          "description": "Flags whether the provided address has been overwritten by the system.",
          "type": "boolean"
        }
      }
    },
    "ProductCartViewSpecifications": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "ProductCartViewVariants": {
      "type": "object",
      "properties": {
        "sku": {
          "description": "Stock keeping unit (SKU).  Uniquely identifies the product in the inventory system.",
          "type": "string"
        },
        "productCondition": {
          "description": "Describes the general condition of the variant.  For example new or refurbished.",
          "type": "string"
        },
        "memory": {
          "description": "Memory size of the sku.",
          "type": "string"
        },
        "color": {
          "description": "Official name of the variant color as marketed by the manufacturer.",
          "type": "string"
        },
        "searchableColor": {
          "description": "Common color names of the variant, for searching.",
          "type": "string"
        },
        "msrp": {
          "description": "Manufacturer suggested retail price.   Provided by the device manufacturer.",
          "type": "number",
          "format": "double"
        },
        "name": {
          "description": "Name of the offer variant.",
          "type": "string"
        },
        "preOrderAvailableTime": {
          "description": "The time when the offer variant is available for pre orders.",
          "type": "string",
          "format": "date-time"
        },
        "comingSoonDate": {
          "description": "The date when T-Mobile will begin accepting requests to notify customers of the availability of the offer variant.",
          "type": "string",
          "format": "date"
        },
        "variantOfferStatus": {
          "description": "Status of the variant in the sales catalog.  Example ForSale, Grandfathered, Retired.",
          "type": "string"
        },
        "inventoryStatus": {
          "description": "Status of the variant in inventory.  Example, in stock, backordered.",
          "type": "string"
        },
        "variantDisplayOrder": {
          "description": "The order that the variant is displayed, relative to other variants of the same offer.",
          "type": "integer",
          "format": "int32"
        },
        "saleStartTime": {
          "description": "The time when the offer variant goes on sale.",
          "type": "string",
          "format": "date-time"
        },
        "saleEndTime": {
          "description": "The time when the offer variant is no longer for sale.",
          "type": "string",
          "format": "date-time"
        },
        "offerVariantId": {
          "description": "Uniquely identifies a offer variant in the sales catalog.",
          "type": "string"
        },
        "defaultDownPayment": {
          "description": "Default down payment amount",
          "type": "number",
          "format": "double"
        },
        "prices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Prices"
          }
        },
        "financeEligibleIndicator": {
          "description": "If true, the variant can be financed.",
          "type": "boolean"
        },
        "canBeReturnedIndicator": {
          "description": "Indicates if it can be returned or not",
          "type": "boolean"
        }
      }
    },
    "ProductConflicts": {
      "type": "object",
      "properties": {
        "orderLineId": {
          "description": "Identifier of order line",
          "type": "string"
        },
        "conflictLevel": {
          "description": "Level of the product conflict.  ACCOUNT, LINE, PRODUCT.",
          "type": "string"
        },
        "conflictType": {
          "description": "Type of conflict",
          "type": "string"
        },
        "autoResolvableIndicator": {
          "description": "Indicates whether the conflict can be resolve automatically by the backend.",
          "type": "boolean"
        },
        "offerId": {
          "description": "Unique identifier of the offer that has a conflicting product.",
          "type": "string"
        },
        "offerSequenceNumber": {
          "description": "For postpaid accounts, required to correctly identify the conflicting product on a customers account or line of service.",
          "type": "integer",
          "format": "int32"
        },
        "offerDescription": {
          "description": "Description of the conflicting offer.",
          "type": "string"
        },
        "productType": {
          "description": "Product type of the conflicting product.",
          "type": "string"
        },
        "productSubTypes": {
          "description": "Product sub type of the conflicting product.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "specifications": {
          "description": "Named value pairs. Additional details about the conflicting product.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnSpecifications_6"
          }
        },
        "accountNumber": {
          "description": "Account number that has the conflicting product.  Used when there is not a cart item for the conflicting product.",
          "type": "string"
        },
        "phoneNumber": {
          "description": "Used to identify the line of service (phone number) that has the conflicting product.  Used when there is not a cart item for the conflicting product.",
          "type": "string"
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ProductOfferCartViewProducts": {
      "type": "object",
      "properties": {
        "productId": {
          "description": "Uniquely identifies a known product.",
          "type": "string"
        },
        "productName": {
          "description": "The common name of the product, as defined in the product catalog.",
          "type": "string"
        },
        "productKeywords": {
          "description": "Words used in searches for the product.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "description": "Description of the product",
          "type": "string"
        },
        "shortDescription": {
          "description": "Short description of the product",
          "type": "string"
        },
        "longDescription": {
          "description": "Long description of the product",
          "type": "string"
        },
        "serviceProvider": {
          "description": "Service provider for the device",
          "type": "string"
        },
        "manufacturer": {
          "description": "Device manufacturer name",
          "type": "string"
        },
        "model": {
          "description": "Device model name",
          "type": "string"
        },
        "variants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductCartViewVariants"
          }
        },
        "images": {
          "description": "Images associated with one or more variants of the product.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Images"
          }
        },
        "tacCodes": {
          "description": "The Type Allocation Code (TAC) is the initial eight-digit portion of the 15-digit IMEI and 16-digit IMEISV codes used to uniquely identify wireless devices.  Each TAC code can be used by one or more variant of the equipment product.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TacCodes"
          }
        },
        "marketingFeatures": {
          "description": "An organized list of capabilities and functionality that T-Mobile wants to highlight for sales and marketing purposes.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MarketingFeatures"
          }
        },
        "equipmentSpecifications": {
          "description": "Groups of physical and operational details that are usually provided by the equipment manufacturer.  For example, physical dimensions, operating system specs.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EquipmentSpecifications"
          }
        },
        "specifications": {
          "description": "Product named value pairs",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductCartViewSpecifications"
          }
        }
      }
    },
    "Products": {
      "type": "object",
      "properties": {
        "productId": {
          "description": "Uniquely identifies a known product.",
          "type": "string"
        },
        "productName": {
          "description": "The common name of the product, as defined in the product catalog.",
          "type": "string"
        },
        "productKeywords": {
          "description": "Words used in searches for the product.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "description": "Description of the product",
          "type": "string"
        },
        "shortDescription": {
          "description": "Short description of the product",
          "type": "string"
        },
        "longDescription": {
          "description": "Long description of the product",
          "type": "string"
        },
        "serviceProvider": {
          "description": "Service provider for the device",
          "type": "string"
        },
        "manufacturer": {
          "description": "Device manufacturer name",
          "type": "string"
        },
        "model": {
          "description": "Device model name",
          "type": "string"
        },
        "variants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Variants"
          }
        },
        "images": {
          "description": "Images associated with one or more variants of the product.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnImages"
          }
        },
        "tacCodes": {
          "description": "The Type Allocation Code (TAC) is the initial eight-digit portion of the 15-digit IMEI and 16-digit IMEISV codes used to uniquely identify wireless devices.  Each TAC code can be used by one or more variant of the equipment product.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnTacCodes"
          }
        },
        "marketingFeatures": {
          "description": "An organized list of capabilities and functionality that T-Mobile wants to highlight for sales and marketing purposes.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnMarketingFeatures"
          }
        },
        "equipmentSpecifications": {
          "description": "Groups of physical and operational details that are usually provided by the equipment manufacturer.  For example, physical dimensions, operating system specs.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnEquipmentSpecifications"
          }
        },
        "specifications": {
          "description": "Product named value pairs",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnSpecifications_4"
          }
        }
      }
    },
    "PromotionalBenefits": {
      "type": "object",
      "properties": {
        "benefitCategory": {
          "description": "Benefit category,  such as discount, free feature etc.",
          "type": "string"
        },
        "numberOfOccurrences": {
          "description": "Number of times this promotional benefit can be claimed by customer.",
          "type": "integer",
          "format": "int32"
        },
        "unlimitedOccurrenceIndicator": {
          "description": "Indicates that promotional benefit can be availed unlimited number of times.",
          "type": "boolean"
        },
        "scope": {
          "description": "Defines if the occurrence of the promotion apply to line, account, or customer",
          "type": "string"
        },
        "currentOccurrence": {
          "description": "Specify the number of times a specific customer has already received the promotional benefit.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PromotionEffectivePeriod": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Promotions": {
      "type": "object",
      "properties": {
        "actionCode": {
          "type": "string"
        },
        "promotionId": {
          "description": "The unique id of the promotion.",
          "type": "string"
        },
        "shortDescription": {
          "description": "Short description",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "promotionEffectivePeriod": {
          "description": "The time period where the Promotion is effective.",
          "type": "object",
          "$ref": "#/definitions/PromotionEffectivePeriod"
        },
        "customerSpecificDetails": {
          "description": "Named value pairs specific to the customer",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerSpecificDetails"
          }
        }
      }
    },
    "ProvisioningMessages": {
      "type": "object",
      "properties": {
        "level": {
          "description": "Validation level",
          "type": "string"
        },
        "code": {
          "description": "Validation code",
          "type": "string"
        },
        "category": {
          "description": "Validation category",
          "type": "string"
        },
        "message": {
          "description": "Validation message",
          "type": "string"
        },
        "entityIdentifier": {
          "type": "string"
        },
        "entityName": {
          "type": "string"
        },
        "identiferName": {
          "type": "string"
        },
        "relationshipType": {
          "type": "string"
        }
      }
    },
    "PurchasedEquipment": {
      "type": "object",
      "properties": {
        "deviceId": {
          "description": "Uniquely identifies a device",
          "type": "string"
        },
        "imei": {
          "description": "International Mobile Equipment Identifier.  Unique identifier for a mobile device on a network.",
          "type": "string"
        },
        "serialNumber": {
          "description": "Serial number of the equipment (device or accessory).",
          "type": "string"
        },
        "deviceStatus": {
          "description": "Status of the device.",
          "type": "string"
        },
        "blacklist": {
          "type": "object",
          "$ref": "#/definitions/DeviceIdentifierBlacklist"
        },
        "sku": {
          "description": "The sku of the device offer variant.  Only relevant if the customer purchased the device from T-Mobile.",
          "type": "string"
        },
        "description": {
          "description": "Description of the offer variant",
          "type": "string"
        },
        "fullRetailPrice": {
          "description": "Full retail price",
          "type": "number",
          "format": "double"
        },
        "productType": {
          "description": "The category of product included in the offer: Plan, Service, Device, Accessory, or Financial.",
          "type": "string"
        },
        "productSubType": {
          "description": "Secondary categorizations of the type of product included in the offer.",
          "type": "string"
        },
        "salePrice": {
          "description": "Actual price customer paid for the equipment",
          "type": "number",
          "format": "double"
        }
      }
    },
    "ReasonCode": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "text": {
          "type": "string"
        }
      }
    },
    "reasonCodes": {
      "type": "object",
      "properties": {
        "reasonCode": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReasonCode"
          }
        }
      }
    },
    "RecurringChargeDetail": {
      "type": "object",
      "properties": {
        "periodType": {
          "description": "Monthly, daily, etc...",
          "type": "string"
        },
        "recurringCharges": {
          "description": "List of recurring charge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecurringCharges"
          }
        }
      }
    },
    "RecurringChargePriceComponents": {
      "type": "object",
      "properties": {
        "priceComponentId": {
          "description": "Identifier of price component, or charge sequence number",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "description": "Description of price component",
          "type": "string"
        },
        "productChargeType": {
          "description": "Type of price component",
          "type": "string"
        },
        "amount": {
          "description": "Dollar amount of price to be charged",
          "type": "number",
          "format": "double"
        },
        "basisAmount": {
          "type": "number",
          "format": "double"
        },
        "usageMeasurementUnit": {
          "type": "string"
        },
        "discountAmount": {
          "type": "number",
          "format": "double"
        },
        "frequency": {
          "description": "Categorizes the price component frequency as one time or recurring.",
          "type": "string"
        },
        "promotionId": {
          "type": "string"
        },
        "expirationDate": {
          "description": "Expiration date",
          "type": "string",
          "format": "date"
        }
      }
    },
    "RecurringCharges": {
      "type": "object",
      "properties": {
        "startingPeriodNumber": {
          "type": "integer",
          "format": "int32"
        },
        "endingPeriodNumber": {
          "type": "integer",
          "format": "int32"
        },
        "amount": {
          "description": "The price to be charged in dollars, inclusive of all discount(s).  periodicAmount = basisPeriodicAmount minus discountAmount(s)",
          "type": "number",
          "format": "double"
        },
        "basisAmount": {
          "description": "The price to be charged in dollars, before any discount(s).",
          "type": "number",
          "format": "double"
        },
        "discountAmount": {
          "description": "Total amount of discounts, in dollars, that is included in the periodicAmount.",
          "type": "number",
          "format": "double"
        },
        "productChargeIncurredType": {
          "description": "Specifies the timing for when the first charge is incurred for the product: immediate, on usage, or on demand.",
          "type": "string"
        },
        "proratedAmount": {
          "description": "This is the cost that the customer would need to pay in order to add this feature to their current account effective immediately. it is prorated from the current date until the end of the current cycle.",
          "type": "number",
          "format": "double"
        },
        "priceComponents": {
          "description": "The details of charges and deductions that comprise the recurring charge.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RecurringChargePriceComponents"
          }
        },
        "adjustedNumberOfInstallaments": {
          "description": "Number of payment installments adjusted by client.",
          "type": "integer",
          "format": "int32"
        },
        "originalNumberOfInstallaments": {
          "description": "Number of payment installments before it is adjusted.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "refund": {
      "type": "object",
      "properties": {
        "orderLine": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/orderLine"
          }
        }
      }
    },
    "RelatedLineCollection": {
      "type": "object",
      "properties": {
        "relatedLines": {
          "description": "Related order lines",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersRelatedLines_1"
          }
        }
      }
    },
    "RelatedLines": {
      "type": "object",
      "properties": {
        "orderLineId": {
          "description": "Identifier of order line",
          "type": "string"
        },
        "relationshipType": {
          "type": "string"
        },
        "offerId": {
          "description": "Unique identifier of the related offer item.",
          "type": "string"
        },
        "offerDescription": {
          "description": "Description of the related  offer item.",
          "type": "string"
        }
      }
    },
    "RelatedLinesRelatedLines": {
      "type": "object",
      "properties": {
        "orderLineId": {
          "description": "Identifier of order line",
          "type": "string"
        },
        "relationshipType": {
          "type": "string"
        },
        "offerId": {
          "description": "Unique identifier of the related offer item.",
          "type": "string"
        },
        "offerDescription": {
          "description": "Description of the related  offer item.",
          "type": "string"
        }
      }
    },
    "RequestedDelivery": {
      "type": "object",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "RequiredOffers": {
      "type": "object",
      "properties": {
        "relationshipType": {
          "description": "The type of relationship between the two offers.",
          "type": "string"
        },
        "link": {
          "description": "A link to the offer that is related to this one.",
          "type": "string"
        },
        "relatedOfferId": {
          "description": "The id of the offer that is related to this one.",
          "type": "string"
        },
        "relatedOfferName": {
          "description": "The name of the offer that is related to this one.",
          "type": "string"
        },
        "displayPriority": {
          "description": "Display priority or sequence",
          "type": "integer",
          "format": "int32"
        },
        "minimumNumberOfLines": {
          "description": "Minimum number of lines needed for eligibility.",
          "type": "integer",
          "format": "int32"
        },
        "maximumNumberOfLines": {
          "description": "Maximum number of lines allowed to be eligible.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "return": {
      "type": "object",
      "properties": {
        "orderLine": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderLine"
          }
        }
      }
    },
    "ReturnAdditionalRequiredOffers": {
      "type": "object",
      "properties": {
        "productOfferingId": {
          "description": "The id of the required offer.",
          "type": "string"
        },
        "variantIds": {
          "description": "Variants of the required offer.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "link": {
          "type": "string"
        }
      }
    },
    "ReturnAdditionalRequiredOffers_1": {
      "type": "object",
      "properties": {
        "productOfferingId": {
          "description": "The id of the required offer.",
          "type": "string"
        },
        "variantIds": {
          "description": "Variants of the required offer.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "link": {
          "type": "string"
        }
      }
    },
    "ReturnAdditionalRequiredOffers_2": {
      "type": "object",
      "properties": {
        "productOfferingId": {
          "description": "The id of the required offer.",
          "type": "string"
        },
        "variantIds": {
          "description": "Variants of the required offer.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "link": {
          "type": "string"
        }
      }
    },
    "ReturnCompatibleOffers": {
      "type": "object",
      "properties": {
        "relationshipType": {
          "description": "The type of relationship between the two offers.",
          "type": "string"
        },
        "link": {
          "description": "A link to the offer that is related to this one.",
          "type": "string"
        },
        "relatedOfferId": {
          "description": "The id of the offer that is related to this one.",
          "type": "string"
        },
        "relatedOfferName": {
          "description": "The name of the offer that is related to this one.",
          "type": "string"
        },
        "displayPriority": {
          "description": "Display priority or sequence",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ReturnConflictingPromotions": {
      "type": "object",
      "properties": {
        "promotionId": {
          "description": "The unique id of the promotion.",
          "type": "string"
        },
        "shortDescription": {
          "description": "Short description",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "promotionEffectivePeriod": {
          "description": "The time period where the Promotion is effective.",
          "type": "object",
          "$ref": "#/definitions/ReturnPromotionEffectivePeriod_1"
        }
      }
    },
    "ReturnConflictOffers": {
      "type": "object",
      "properties": {
        "relationshipType": {
          "description": "The type of relationship between the two offers.",
          "type": "string"
        },
        "link": {
          "description": "A link to the offer that is related to this one.",
          "type": "string"
        },
        "relatedOfferId": {
          "description": "The id of the offer that is related to this one.",
          "type": "string"
        },
        "relatedOfferName": {
          "description": "The name of the offer that is related to this one.",
          "type": "string"
        },
        "displayPriority": {
          "description": "Display priority or sequence",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ReturnCustomerSpecificDetails": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "ReturnDiscount": {
      "type": "object",
      "properties": {
        "type": {
          "description": "Type of amount, actual or percentage",
          "type": "string"
        },
        "amount": {
          "description": "Value of amount.",
          "type": "number",
          "format": "double"
        }
      }
    },
    "ReturnedEquipment": {
      "type": "object",
      "properties": {
        "deviceId": {
          "description": "Uniquely identifies a device",
          "type": "string"
        },
        "imei": {
          "description": "International Mobile Equipment Identifier.  Unique identifier for a mobile device on a network.",
          "type": "string"
        },
        "serialNumber": {
          "description": "Serial number of the equipment (device or accessory).",
          "type": "string"
        },
        "deviceStatus": {
          "description": "Status of the device.",
          "type": "string"
        },
        "blacklist": {
          "type": "object",
          "$ref": "#/definitions/DeviceIdentifierBlacklist"
        },
        "sku": {
          "description": "The sku of the device offer variant.  Only relevant if the customer purchased the device from T-Mobile.",
          "type": "string"
        },
        "phoneNumber": {
          "description": "Phone number",
          "type": "string"
        },
        "acceptanceType": {
          "description": "Indicates the customer’s response to the trade-in quotation.",
          "type": "string"
        },
        "deviceRecoveryType": {
          "description": "When the trade in equipment is expected to be returned in the context of a transaction.  Accept if the equipment is returned during the transaction, Deferred if the equipment is returned after the transaction, Accept-Deferred if no equipment is required to be returned during the transaction.",
          "type": "string"
        },
        "tradeInAmount": {
          "description": "Amount applied from a Device traded in by Customer.",
          "type": "number",
          "format": "double"
        }
      }
    },
    "ReturnEligibleAccessories": {
      "type": "object",
      "properties": {
        "sku": {
          "description": "Stock keeping unit (SKU).  Uniquely identifies the product in the inventory system.",
          "type": "string"
        },
        "productCondition": {
          "description": "Describes the general condition of the variant.  For example new or refurbished.",
          "type": "string"
        },
        "memory": {
          "description": "Memory size of the sku.",
          "type": "string"
        },
        "color": {
          "description": "Official name of the variant color as marketed by the manufacturer.",
          "type": "string"
        },
        "searchableColor": {
          "description": "Common color names of the variant, for searching.",
          "type": "string"
        },
        "msrp": {
          "description": "Manufacturer suggested retail price.   Provided by the device manufacturer.",
          "type": "number",
          "format": "double"
        },
        "name": {
          "description": "Name of the offer variant.",
          "type": "string"
        },
        "preOrderAvailableTime": {
          "description": "The time when the offer variant is available for pre orders.",
          "type": "string",
          "format": "date-time"
        },
        "comingSoonDate": {
          "description": "The date when T-Mobile will begin accepting requests to notify customers of the availability of the offer variant.",
          "type": "string",
          "format": "date"
        },
        "variantOfferStatus": {
          "description": "Status of the variant in the sales catalog.  Example ForSale, Grandfathered, Retired.",
          "type": "string"
        },
        "inventoryStatus": {
          "description": "Status of the variant in inventory.  Example, in stock, backordered.",
          "type": "string"
        },
        "variantDisplayOrder": {
          "description": "The order that the variant is displayed, relative to other variants of the same offer.",
          "type": "integer",
          "format": "int32"
        },
        "saleStartTime": {
          "description": "The time when the offer variant goes on sale.",
          "type": "string",
          "format": "date-time"
        },
        "saleEndTime": {
          "description": "The time when the offer variant is no longer for sale.",
          "type": "string",
          "format": "date-time"
        },
        "offerVariantId": {
          "description": "Uniquely identifies a offer variant in the sales catalog.",
          "type": "string"
        },
        "defaultDownPayment": {
          "description": "Default down payment amount",
          "type": "number",
          "format": "double"
        }
      }
    },
    "ReturnEligibleDevices": {
      "type": "object",
      "properties": {
        "sku": {
          "description": "Stock keeping unit (SKU).  Uniquely identifies the product in the inventory system.",
          "type": "string"
        },
        "productCondition": {
          "description": "Describes the general condition of the variant.  For example new or refurbished.",
          "type": "string"
        },
        "memory": {
          "description": "Memory size of the sku.",
          "type": "string"
        },
        "color": {
          "description": "Official name of the variant color as marketed by the manufacturer.",
          "type": "string"
        },
        "searchableColor": {
          "description": "Common color names of the variant, for searching.",
          "type": "string"
        },
        "msrp": {
          "description": "Manufacturer suggested retail price.   Provided by the device manufacturer.",
          "type": "number",
          "format": "double"
        },
        "name": {
          "description": "Name of the offer variant.",
          "type": "string"
        },
        "preOrderAvailableTime": {
          "description": "The time when the offer variant is available for pre orders.",
          "type": "string",
          "format": "date-time"
        },
        "comingSoonDate": {
          "description": "The date when T-Mobile will begin accepting requests to notify customers of the availability of the offer variant.",
          "type": "string",
          "format": "date"
        },
        "variantOfferStatus": {
          "description": "Status of the variant in the sales catalog.  Example ForSale, Grandfathered, Retired.",
          "type": "string"
        },
        "inventoryStatus": {
          "description": "Status of the variant in inventory.  Example, in stock, backordered.",
          "type": "string"
        },
        "variantDisplayOrder": {
          "description": "The order that the variant is displayed, relative to other variants of the same offer.",
          "type": "integer",
          "format": "int32"
        },
        "saleStartTime": {
          "description": "The time when the offer variant goes on sale.",
          "type": "string",
          "format": "date-time"
        },
        "saleEndTime": {
          "description": "The time when the offer variant is no longer for sale.",
          "type": "string",
          "format": "date-time"
        },
        "offerVariantId": {
          "description": "Uniquely identifies a offer variant in the sales catalog.",
          "type": "string"
        },
        "defaultDownPayment": {
          "description": "Default down payment amount",
          "type": "number",
          "format": "double"
        }
      }
    },
    "ReturnEquipmentSpecifications": {
      "type": "object",
      "properties": {
        "groupName": {
          "type": "string"
        },
        "groupRanking": {
          "type": "integer",
          "format": "int32"
        },
        "specifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnSpecifications_3"
          }
        }
      }
    },
    "ReturnFeatureDetails": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "rank": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "description": "The description of the feature.",
          "type": "string"
        }
      }
    },
    "ReturnGeographicCoordinate": {
      "type": "object",
      "properties": {
        "latitude": {
          "description": "Latitude",
          "type": "string"
        },
        "longitude": {
          "description": "Longitude",
          "type": "string"
        }
      }
    },
    "ReturnImages": {
      "type": "object",
      "properties": {
        "imageId": {
          "description": "Unique identifier for the image PATH.  This name should be changed.",
          "type": "string"
        },
        "uri": {
          "description": "Universal resource identifier pointing to the image.",
          "type": "string"
        },
        "dimensions": {
          "description": "Dimensions of the image.",
          "type": "string"
        },
        "color": {
          "description": "Official name of the color of the equipment displayed in the image.",
          "type": "string"
        },
        "searchableColors": {
          "description": "Common color name for searching.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "displayPurposes": {
          "description": "Purpose for which the image should be used in displays.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ReturnIneligibleReasons": {
      "type": "object",
      "properties": {
        "reasonCode": {
          "description": "Reason Code",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "helpText": {
          "description": "Additional description",
          "type": "string"
        },
        "language": {
          "description": "language used",
          "type": "string",
          "minLength": 2,
          "maxLength": 2,
          "pattern": "[a-z][a-z]"
        }
      }
    },
    "ReturnIneligibleReasons_1": {
      "type": "object",
      "properties": {
        "reasonCode": {
          "description": "Reason Code",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "helpText": {
          "description": "Additional description",
          "type": "string"
        },
        "language": {
          "description": "language used",
          "type": "string",
          "minLength": 2,
          "maxLength": 2,
          "pattern": "[a-z][a-z]"
        }
      }
    },
    "ReturnMarketingFeatures": {
      "type": "object",
      "properties": {
        "featureCategory": {
          "description": "The category of feature.",
          "type": "string"
        },
        "featureCategoryRank": {
          "description": "The order the category of features is displayed, relative to other feature categories.",
          "type": "integer",
          "format": "int32"
        },
        "featureDetails": {
          "description": "List of the feature details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnFeatureDetails"
          }
        }
      }
    },
    "ReturnOffer": {
      "type": "object",
      "properties": {
        "offerId": {
          "description": "Uniquely identifies a product offering in the sales catalog.",
          "type": "string"
        },
        "offerType": {
          "description": "Primary categorization of Product Offering.",
          "type": "string"
        },
        "offerSubType": {
          "description": "Secondary categorization of Product Offering.",
          "type": "string"
        },
        "productType": {
          "description": "The category of product included in the offer: Plan, Service, Device, Accessory, or Financial.",
          "type": "string"
        },
        "productSubTypes": {
          "description": "Secondary categorizations of the type of product included in the offer.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "offeringStatus": {
          "description": "Status of the product offering in the sales catalog.",
          "type": "string"
        },
        "offeringStatusPeriod": {
          "description": "The time period where the offeringStatus is valid.",
          "type": "object",
          "$ref": "#/definitions/ReturnOfferingStatusPeriod"
        },
        "businessUnit": {
          "description": "The different T-Mobile business units require complete separation of assets. Separate companies that comprise TMUS corporation.  The system restricts a Customer to one Business Unit.  In other words, a Customer in one Business Unit is not visible in any of the other  Business Units of the corporation. For example, a Metro PCS customers billing address cannot be looked up by a Magenta representative.  There is no capability to override this in the system.",
          "type": "string"
        },
        "billingMethod": {
          "description": "The Billing Method specifies the billing experience that the customer has qualified for and requested. A change of the billing method implies the need to create a new billing arrangement.",
          "type": "string"
        },
        "brand": {
          "description": "The business name under which a TMUS product is sold.  A Customer can have accounts in any Brand, within the same Business Unit. For example, a T-Mobile customer may also have a branded account with a national retailer.",
          "type": "string"
        },
        "unitPrice": {
          "description": "Full list price per unit as set by T-Mobile",
          "type": "number",
          "format": "double"
        },
        "offerCategory": {
          "description": "Top-level display categorization for product offers.",
          "type": "string"
        },
        "offerSubCategory1": {
          "description": "Second-level display categorization for product offers.",
          "type": "string"
        },
        "offerSubCategory2": {
          "description": "Third-level display categorization for product offers.",
          "type": "string"
        },
        "offerName": {
          "description": "The commonly used name of the Offer, as defined in the Product Catalog.",
          "type": "string"
        },
        "offerDescription": {
          "description": "The description of the offer, as defined in the product catalog.",
          "type": "string"
        },
        "offerShortDescription": {
          "description": "The brief description of the offer, as defined in the product catalog.",
          "type": "string"
        },
        "offerLongDescription": {
          "description": "The verbose description of the offer, as defined in the product catalog.",
          "type": "string"
        },
        "displayOrder": {
          "description": "The sequence in which the offer is displayed.",
          "type": "integer",
          "format": "int32"
        },
        "billingTypes": {
          "description": "The type of billing account this offer is available to.  Could be prepaid and/or postpaid.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "legalDisclosure": {
          "description": "Disclaimers or any other textual information that must be displayed to customers for legal reasons.",
          "type": "string"
        },
        "specifications": {
          "description": "Named value pairs",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnSpecifications"
          }
        },
        "prices": {
          "description": "Prices that are applicable to the offer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnPrices"
          }
        },
        "keywords": {
          "description": "Words used in searches for the offer.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "promotions": {
          "description": "Reference to the promotions that are available with the offer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnPromotions"
          }
        },
        "conflictOffers": {
          "description": "Conflicting offers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnConflictOffers"
          }
        },
        "compatibleOffers": {
          "description": "Compatible offers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnCompatibleOffers"
          }
        },
        "requiredOffers": {
          "description": "Required offers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnRequiredOffers"
          }
        },
        "backDateAllowedIndicator": {
          "description": "Indicates whether the service can be back dated when added.",
          "type": "boolean"
        },
        "futureDateAllowedIndicator": {
          "description": "Indicates whether the service can be future dated when added.",
          "type": "boolean"
        },
        "backDateVisibleIndicator": {
          "description": "Indicates whether the services back date should be visible.",
          "type": "boolean"
        },
        "futureDateVisibleIndicator": {
          "description": "Indicates whether the services future date should be visible.",
          "type": "boolean"
        },
        "billEffectiveCode": {
          "description": "To indicate when the bill will be effective",
          "type": "string"
        },
        "billableThirdPartyServiceIndicator": {
          "description": "To indicate if T-Mobile bills the customer for third-party service.",
          "type": "boolean"
        },
        "prorateAllowedIndicator": {
          "description": "To indicate if prorate is allowed",
          "type": "boolean"
        },
        "prorateVisibleIndicator": {
          "description": "To indicate if prorate is visible",
          "type": "boolean"
        },
        "maximumOrderDelay": {
          "description": "Maximum allowed future dating for a particular offer.",
          "type": "string"
        },
        "requireAutoRenew": {
          "description": "To indicate if auto renew is required",
          "type": "boolean"
        },
        "supportAutoRenew": {
          "description": "To indicate if auto renew is available",
          "type": "boolean"
        },
        "deviceValidationRequired": {
          "description": "When true, the Client System is expected to validate the Subscribers Device against the IMEI range defined by the Business, before presenting this Data Pass as eligible for purchase.",
          "type": "boolean"
        },
        "maxOnDemandPasses": {
          "description": "Maximum number of OnDemand data passes that can be purchased with this plan.",
          "type": "integer",
          "format": "int32"
        },
        "upgradeableIndicator": {
          "description": "To indicate if the plan can be upgraded mid bill cycle",
          "type": "boolean"
        },
        "products": {
          "description": "List of product",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Products"
          }
        },
        "minimumNumberOfLines": {
          "description": "Minimum number of lines needed for eligibility.",
          "type": "integer",
          "format": "int32"
        },
        "maximumNumberOfLines": {
          "description": "Maximum number of lines allowed to be eligible.",
          "type": "integer",
          "format": "int32"
        },
        "offerLevel": {
          "description": "Level in the customer hierarchy to which the offer should be applied.Model Note:  this is a duplicate of the element already in the ServiceOfferSummaryDelta",
          "type": "string"
        },
        "actionCode": {
          "description": "Action code such as ADD,REMOVE,CANCEL",
          "type": "string"
        }
      }
    },
    "ReturnOfferingStatusPeriod": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ReturnOneTimeCharges": {
      "type": "object",
      "properties": {
        "chargeType": {
          "description": "Charge type, such as activationFee, applicationFee, firstMonthCharge,controlChargeFee",
          "type": "string"
        },
        "amount": {
          "description": "The total price to be charged in dollars, inclusive of all discount(s).  amount = basisAmount minus discountAmount minus adjustmentAmount.",
          "type": "number",
          "format": "double"
        },
        "basisAmount": {
          "description": "The price to be charged in dollars, not including any discount(s).",
          "type": "number",
          "format": "double"
        },
        "adjustmentAmount": {
          "description": "Total amount of adjustments, in dollars, that is included in the amount.",
          "type": "number",
          "format": "double"
        },
        "discountAmount": {
          "description": "Total amount of discounts, in dollars, that is included in the amount.",
          "type": "number",
          "format": "double"
        },
        "priceComponents": {
          "description": "The details of charges and deductions that comprise the one time charge.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnPriceComponents"
          }
        },
        "productChargeIncurredType": {
          "description": "Specifies the timing for when the first charge is incurred for the product: immediate, on usage, or on demand.",
          "type": "string"
        },
        "proratedAmount": {
          "description": "This is the cost that the customer would need to pay in order to add this feature to their current account effective immediately. it is prorated from the current date until the end of the current cycle.",
          "type": "number",
          "format": "double"
        },
        "adjustmentReason": {
          "description": "Reason for adjustment.",
          "type": "string"
        },
        "percentageDiscount": {
          "description": "Discount by percentage",
          "type": "number",
          "format": "double"
        }
      }
    },
    "ReturnOneTimeCharges_1": {
      "type": "object",
      "properties": {
        "chargeType": {
          "description": "Charge type, such as activationFee, applicationFee, firstMonthCharge,controlChargeFee",
          "type": "string"
        },
        "amount": {
          "description": "The total price to be charged in dollars, inclusive of all discount(s).  amount = basisAmount minus discountAmount minus adjustmentAmount.",
          "type": "number",
          "format": "double"
        },
        "basisAmount": {
          "description": "The price to be charged in dollars, not including any discount(s).",
          "type": "number",
          "format": "double"
        },
        "adjustmentAmount": {
          "description": "Total amount of adjustments, in dollars, that is included in the amount.",
          "type": "number",
          "format": "double"
        },
        "discountAmount": {
          "description": "Total amount of discounts, in dollars, that is included in the amount.",
          "type": "number",
          "format": "double"
        },
        "priceComponents": {
          "description": "The details of charges and deductions that comprise the one time charge.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnPriceComponents_2"
          }
        },
        "productChargeIncurredType": {
          "description": "Specifies the timing for when the first charge is incurred for the product: immediate, on usage, or on demand.",
          "type": "string"
        },
        "proratedAmount": {
          "description": "This is the cost that the customer would need to pay in order to add this feature to their current account effective immediately. it is prorated from the current date until the end of the current cycle.",
          "type": "number",
          "format": "double"
        },
        "adjustmentReason": {
          "description": "Reason for adjustment.",
          "type": "string"
        },
        "percentageDiscount": {
          "description": "Discount by percentage",
          "type": "number",
          "format": "double"
        }
      }
    },
    "ReturnOneTimeCharges_2": {
      "type": "object",
      "properties": {
        "chargeType": {
          "description": "Charge type, such as activationFee, applicationFee, firstMonthCharge,controlChargeFee",
          "type": "string"
        },
        "amount": {
          "description": "The total price to be charged in dollars, inclusive of all discount(s).  amount = basisAmount minus discountAmount minus adjustmentAmount.",
          "type": "number",
          "format": "double"
        },
        "basisAmount": {
          "description": "The price to be charged in dollars, not including any discount(s).",
          "type": "number",
          "format": "double"
        },
        "adjustmentAmount": {
          "description": "Total amount of adjustments, in dollars, that is included in the amount.",
          "type": "number",
          "format": "double"
        },
        "discountAmount": {
          "description": "Total amount of discounts, in dollars, that is included in the amount.",
          "type": "number",
          "format": "double"
        },
        "priceComponents": {
          "description": "The details of charges and deductions that comprise the one time charge.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnPriceComponents_4"
          }
        },
        "productChargeIncurredType": {
          "description": "Specifies the timing for when the first charge is incurred for the product: immediate, on usage, or on demand.",
          "type": "string"
        },
        "proratedAmount": {
          "description": "This is the cost that the customer would need to pay in order to add this feature to their current account effective immediately. it is prorated from the current date until the end of the current cycle.",
          "type": "number",
          "format": "double"
        },
        "adjustmentReason": {
          "description": "Reason for adjustment.",
          "type": "string"
        },
        "percentageDiscount": {
          "description": "Discount by percentage",
          "type": "number",
          "format": "double"
        }
      }
    },
    "ReturnOneTimeCredits": {
      "type": "object",
      "properties": {
        "creditId": {
          "description": "Identifier of the credit",
          "type": "string"
        },
        "type": {
          "description": "Charge or tax type",
          "type": "string"
        },
        "amount": {
          "description": "Amount charged.",
          "type": "number",
          "format": "double"
        },
        "description": {
          "description": "Description of the charge",
          "type": "string"
        },
        "code": {
          "description": "Charge code",
          "type": "string"
        },
        "adjustmentReason": {
          "description": "Reason for adjustment",
          "type": "string"
        }
      }
    },
    "ReturnPortIn": {
      "type": "object",
      "properties": {
        "portRequestId": {
          "description": "The unique identifier for port request.",
          "type": "string"
        },
        "msisdn": {
          "type": "string"
        },
        "portDueTime": {
          "type": "string",
          "format": "date-time"
        },
        "oldServiceProvider": {
          "description": "The actual carrier that is giving up the number.",
          "type": "string"
        },
        "oldServiceProviderName": {
          "type": "string"
        },
        "oldVirtualServiceProvider": {
          "description": "The organization that was carrying the customers contract for the phone number that is being moved, if it was not the actual service provider.",
          "type": "string"
        },
        "oldVirtualServiceProviderId": {
          "type": "string"
        },
        "oldVirtualServiceProviderName": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "portStatus": {
          "description": "Status of port",
          "type": "string"
        },
        "transitionalMSISDN": {
          "description": "The temporary MSISDN used to give the subscriber service while waiting for the port to complete.",
          "type": "string"
        },
        "contactName": {
          "description": "reference contact name to call in case of port in concerns.",
          "type": "string"
        },
        "contactPhone": {
          "description": "reference number to call in case of port in concerns.",
          "type": "string"
        },
        "oldServiceAccountNumber": {
          "description": "Old service provider account number.",
          "type": "string"
        },
        "eligibilityIndicator": {
          "description": "Flag indicating whether the determination is eligible or ineligible.",
          "type": "boolean"
        },
        "eligibilityStatus": {
          "description": "Code identifying the status of eligibility that was determined.",
          "type": "string"
        },
        "eligibilityType": {
          "description": "The type of eligibility being established.",
          "type": "string"
        },
        "ineligibleReasons": {
          "description": "The reason for ineligibility.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnIneligibleReasons"
          }
        }
      }
    },
    "ReturnPriceComponents": {
      "type": "object",
      "properties": {
        "priceComponentId": {
          "description": "Identifier of price component, or charge sequence number",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "description": "Description of price component",
          "type": "string"
        },
        "productChargeType": {
          "description": "Type of price component",
          "type": "string"
        },
        "amount": {
          "description": "Dollar amount of price to be charged",
          "type": "number",
          "format": "double"
        },
        "basisAmount": {
          "type": "number",
          "format": "double"
        },
        "usageMeasurementUnit": {
          "type": "string"
        },
        "discountAmount": {
          "type": "number",
          "format": "double"
        },
        "frequency": {
          "description": "Categorizes the price component frequency as one time or recurring.",
          "type": "string"
        },
        "promotionId": {
          "type": "string"
        },
        "expirationDate": {
          "description": "Expiration date",
          "type": "string",
          "format": "date"
        }
      }
    },
    "ReturnPriceComponents_1": {
      "type": "object",
      "properties": {
        "priceComponentId": {
          "description": "Identifier of price component, or charge sequence number",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "description": "Description of price component",
          "type": "string"
        },
        "productChargeType": {
          "description": "Type of price component",
          "type": "string"
        },
        "amount": {
          "description": "Dollar amount of price to be charged",
          "type": "number",
          "format": "double"
        },
        "basisAmount": {
          "type": "number",
          "format": "double"
        },
        "usageMeasurementUnit": {
          "type": "string"
        },
        "discountAmount": {
          "type": "number",
          "format": "double"
        },
        "frequency": {
          "description": "Categorizes the price component frequency as one time or recurring.",
          "type": "string"
        },
        "promotionId": {
          "type": "string"
        },
        "expirationDate": {
          "description": "Expiration date",
          "type": "string",
          "format": "date"
        }
      }
    },
    "ReturnPriceComponents_2": {
      "type": "object",
      "properties": {
        "priceComponentId": {
          "description": "Identifier of price component, or charge sequence number",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "description": "Description of price component",
          "type": "string"
        },
        "productChargeType": {
          "description": "Type of price component",
          "type": "string"
        },
        "amount": {
          "description": "Dollar amount of price to be charged",
          "type": "number",
          "format": "double"
        },
        "basisAmount": {
          "type": "number",
          "format": "double"
        },
        "usageMeasurementUnit": {
          "type": "string"
        },
        "discountAmount": {
          "type": "number",
          "format": "double"
        },
        "frequency": {
          "description": "Categorizes the price component frequency as one time or recurring.",
          "type": "string"
        },
        "promotionId": {
          "type": "string"
        },
        "expirationDate": {
          "description": "Expiration date",
          "type": "string",
          "format": "date"
        }
      }
    },
    "ReturnPriceComponents_3": {
      "type": "object",
      "properties": {
        "priceComponentId": {
          "description": "Identifier of price component, or charge sequence number",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "description": "Description of price component",
          "type": "string"
        },
        "productChargeType": {
          "description": "Type of price component",
          "type": "string"
        },
        "amount": {
          "description": "Dollar amount of price to be charged",
          "type": "number",
          "format": "double"
        },
        "basisAmount": {
          "type": "number",
          "format": "double"
        },
        "usageMeasurementUnit": {
          "type": "string"
        },
        "discountAmount": {
          "type": "number",
          "format": "double"
        },
        "frequency": {
          "description": "Categorizes the price component frequency as one time or recurring.",
          "type": "string"
        },
        "promotionId": {
          "type": "string"
        },
        "expirationDate": {
          "description": "Expiration date",
          "type": "string",
          "format": "date"
        }
      }
    },
    "ReturnPriceComponents_4": {
      "type": "object",
      "properties": {
        "priceComponentId": {
          "description": "Identifier of price component, or charge sequence number",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "description": "Description of price component",
          "type": "string"
        },
        "productChargeType": {
          "description": "Type of price component",
          "type": "string"
        },
        "amount": {
          "description": "Dollar amount of price to be charged",
          "type": "number",
          "format": "double"
        },
        "basisAmount": {
          "type": "number",
          "format": "double"
        },
        "usageMeasurementUnit": {
          "type": "string"
        },
        "discountAmount": {
          "type": "number",
          "format": "double"
        },
        "frequency": {
          "description": "Categorizes the price component frequency as one time or recurring.",
          "type": "string"
        },
        "promotionId": {
          "type": "string"
        },
        "expirationDate": {
          "description": "Expiration date",
          "type": "string",
          "format": "date"
        }
      }
    },
    "ReturnPriceComponents_5": {
      "type": "object",
      "properties": {
        "priceComponentId": {
          "description": "Identifier of price component, or charge sequence number",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "description": "Description of price component",
          "type": "string"
        },
        "productChargeType": {
          "description": "Type of price component",
          "type": "string"
        },
        "amount": {
          "description": "Dollar amount of price to be charged",
          "type": "number",
          "format": "double"
        },
        "basisAmount": {
          "type": "number",
          "format": "double"
        },
        "usageMeasurementUnit": {
          "type": "string"
        },
        "discountAmount": {
          "type": "number",
          "format": "double"
        },
        "frequency": {
          "description": "Categorizes the price component frequency as one time or recurring.",
          "type": "string"
        },
        "promotionId": {
          "type": "string"
        },
        "expirationDate": {
          "description": "Expiration date",
          "type": "string",
          "format": "date"
        }
      }
    },
    "ReturnPricePointCriteria": {
      "type": "object",
      "properties": {
        "allowedOrderTypes": {
          "description": "Upgrade, New Activation, etc..",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowedOrderSubTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "additionalRequiredOffers": {
          "description": "Other offers that must be purchased in the same transaction for this price point.  Example:   An EIP offer or equipment lease offer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnAdditionalRequiredOffers"
          }
        },
        "offerCategory": {
          "description": "The category of plan offer that a line of service must have in order to qualify for this multi-line price point.",
          "type": "string"
        },
        "offerSubCategory1": {
          "description": "The second-level category of plan offer that a line of service must have in order to qualify for this multi-line price point.",
          "type": "string"
        },
        "beginningLineOfServiceNumber": {
          "description": "For network service offers that have tiered pricing, the beginning line number for this price point.  For example if a service costs $10 for the first 2 lines, the beginning value is 1 and the ending value is 2.",
          "type": "integer",
          "format": "int32"
        },
        "endingLineOfServiceNumber": {
          "description": "For network service offers that have tiered pricing, the ending line number for this price point.  For example if a service costs $10 for the first 2 lines, the beginning value is 1 and the ending value is 2.",
          "type": "integer",
          "format": "int32"
        },
        "financingProgramType": {
          "description": "Financing program type, such as loan or lease.  Same as the productSubType in offer.",
          "type": "string"
        },
        "creditRiskProfileId": {
          "description": "Unique identifier generated from risk system which is derived from multple business inputs -creditscore, tenure and payment history etc.",
          "type": "string"
        }
      }
    },
    "ReturnPricePointCriteria_1": {
      "type": "object",
      "properties": {
        "allowedOrderTypes": {
          "description": "Upgrade, New Activation, etc..",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowedOrderSubTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "additionalRequiredOffers": {
          "description": "Other offers that must be purchased in the same transaction for this price point.  Example:   An EIP offer or equipment lease offer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnAdditionalRequiredOffers_1"
          }
        },
        "offerCategory": {
          "description": "The category of plan offer that a line of service must have in order to qualify for this multi-line price point.",
          "type": "string"
        },
        "offerSubCategory1": {
          "description": "The second-level category of plan offer that a line of service must have in order to qualify for this multi-line price point.",
          "type": "string"
        },
        "beginningLineOfServiceNumber": {
          "description": "For network service offers that have tiered pricing, the beginning line number for this price point.  For example if a service costs $10 for the first 2 lines, the beginning value is 1 and the ending value is 2.",
          "type": "integer",
          "format": "int32"
        },
        "endingLineOfServiceNumber": {
          "description": "For network service offers that have tiered pricing, the ending line number for this price point.  For example if a service costs $10 for the first 2 lines, the beginning value is 1 and the ending value is 2.",
          "type": "integer",
          "format": "int32"
        },
        "financingProgramType": {
          "description": "Financing program type, such as loan or lease.  Same as the productSubType in offer.",
          "type": "string"
        },
        "creditRiskProfileId": {
          "description": "Unique identifier generated from risk system which is derived from multple business inputs -creditscore, tenure and payment history etc.",
          "type": "string"
        }
      }
    },
    "ReturnPricePointCriteria_2": {
      "type": "object",
      "properties": {
        "allowedOrderTypes": {
          "description": "Upgrade, New Activation, etc..",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowedOrderSubTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "additionalRequiredOffers": {
          "description": "Other offers that must be purchased in the same transaction for this price point.  Example:   An EIP offer or equipment lease offer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnAdditionalRequiredOffers_2"
          }
        },
        "offerCategory": {
          "description": "The category of plan offer that a line of service must have in order to qualify for this multi-line price point.",
          "type": "string"
        },
        "offerSubCategory1": {
          "description": "The second-level category of plan offer that a line of service must have in order to qualify for this multi-line price point.",
          "type": "string"
        },
        "beginningLineOfServiceNumber": {
          "description": "For network service offers that have tiered pricing, the beginning line number for this price point.  For example if a service costs $10 for the first 2 lines, the beginning value is 1 and the ending value is 2.",
          "type": "integer",
          "format": "int32"
        },
        "endingLineOfServiceNumber": {
          "description": "For network service offers that have tiered pricing, the ending line number for this price point.  For example if a service costs $10 for the first 2 lines, the beginning value is 1 and the ending value is 2.",
          "type": "integer",
          "format": "int32"
        },
        "financingProgramType": {
          "description": "Financing program type, such as loan or lease.  Same as the productSubType in offer.",
          "type": "string"
        },
        "creditRiskProfileId": {
          "description": "Unique identifier generated from risk system which is derived from multple business inputs -creditscore, tenure and payment history etc.",
          "type": "string"
        }
      }
    },
    "ReturnPrices": {
      "type": "object",
      "properties": {
        "priceListLineId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "offeringPriceType": {
          "description": "Categorization of the price point.",
          "type": "string"
        },
        "oneTimeCharges": {
          "description": "One-time charges/discounts for the price point are listed here.  Examples: charges for an on-demand data pass or equipment purchase.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnOneTimeCharges"
          }
        },
        "recurringChargeDetail": {
          "description": "For type of recurring charge, the schedule of amounts and discounts of the price point are listed here.  Examples:  monthly MRC charges, or equipment lease/finance.",
          "type": "object",
          "$ref": "#/definitions/ReturnRecurringChargeDetail"
        },
        "pricePointCriteria": {
          "type": "object",
          "$ref": "#/definitions/ReturnPricePointCriteria"
        },
        "canModifyPrice": {
          "description": "When fales, the price can never be overridden even by representatives with the appropriate authority.",
          "type": "boolean"
        },
        "taxInclusiveIndicator": {
          "description": "When true indicates the price reflects the total after tax.",
          "type": "boolean"
        },
        "specifications": {
          "description": "Named value pair",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnSpecifications_1"
          }
        },
        "futureDatedPaymentIndicator": {
          "description": "To indicate if the payment can be made in the future.",
          "type": "boolean"
        }
      }
    },
    "ReturnPrices_1": {
      "type": "object",
      "properties": {
        "priceListLineId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "offeringPriceType": {
          "description": "Categorization of the price point.",
          "type": "string"
        },
        "oneTimeCharges": {
          "description": "One-time charges/discounts for the price point are listed here.  Examples: charges for an on-demand data pass or equipment purchase.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnOneTimeCharges_1"
          }
        },
        "recurringChargeDetail": {
          "description": "For type of recurring charge, the schedule of amounts and discounts of the price point are listed here.  Examples:  monthly MRC charges, or equipment lease/finance.",
          "type": "object",
          "$ref": "#/definitions/ReturnRecurringChargeDetail_1"
        },
        "pricePointCriteria": {
          "type": "object",
          "$ref": "#/definitions/ReturnPricePointCriteria_1"
        },
        "canModifyPrice": {
          "description": "When fales, the price can never be overridden even by representatives with the appropriate authority.",
          "type": "boolean"
        },
        "taxInclusiveIndicator": {
          "description": "When true indicates the price reflects the total after tax.",
          "type": "boolean"
        },
        "specifications": {
          "description": "Named value pair",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnSpecifications_2"
          }
        },
        "futureDatedPaymentIndicator": {
          "description": "To indicate if the payment can be made in the future.",
          "type": "boolean"
        }
      }
    },
    "ReturnPromotionalBenefits": {
      "type": "object",
      "properties": {
        "benefitCategory": {
          "description": "Benefit category,  such as discount, free feature etc.",
          "type": "string"
        },
        "numberOfOccurrences": {
          "description": "Number of times this promotional benefit can be claimed by customer.",
          "type": "integer",
          "format": "int32"
        },
        "unlimitedOccurrenceIndicator": {
          "description": "Indicates that promotional benefit can be availed unlimited number of times.",
          "type": "boolean"
        },
        "scope": {
          "description": "Defines if the occurrence of the promotion apply to line, account, or customer",
          "type": "string"
        },
        "currentOccurrence": {
          "description": "Specify the number of times a specific customer has already received the promotional benefit.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ReturnPromotionEffectivePeriod": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ReturnPromotionEffectivePeriod_1": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ReturnPromotionEffectivePeriod_2": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ReturnPromotionEffectivePeriod_3": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ReturnPromotions": {
      "type": "object",
      "properties": {
        "promotionId": {
          "description": "The unique id of the promotion.",
          "type": "string"
        },
        "shortDescription": {
          "description": "Short description",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "promotionEffectivePeriod": {
          "description": "The time period where the Promotion is effective.",
          "type": "object",
          "$ref": "#/definitions/ReturnPromotionEffectivePeriod"
        },
        "name": {
          "description": "Commonly used name of the Promotion, as defined in the Product Catalog.",
          "type": "string"
        },
        "link": {
          "description": "Link to the promotion object.",
          "type": "string"
        },
        "code": {
          "description": "Code for this promotion. It is different from promotion ID.",
          "type": "string"
        },
        "type": {
          "description": "Defines whether the promotion is manually or automatically added to a cart/order.",
          "type": "string"
        },
        "displayOrder": {
          "description": "Order or sequence to display",
          "type": "integer",
          "format": "int32"
        },
        "oneTimeOnlyIndicator": {
          "description": "Indicates whether this promotion may be applied more than once for the same customer. True if it may only be used once.",
          "type": "boolean"
        },
        "legalDisclosure": {
          "description": "Disclaimers or any other textual information that must be displayed to customers for legal reasons.",
          "type": "string"
        },
        "serializedCouponAllowedIndicator": {
          "description": "True when a customer can use a serialized coupon code to fulfill eligibilty requirements for the promotion.",
          "type": "boolean"
        },
        "realizationMethod": {
          "description": "The way that the promotion is delivered to the customer.",
          "type": "string"
        },
        "realizationSubMethod": {
          "description": "The detailed catagory on how the promotion is delivered to the customer.",
          "type": "string"
        },
        "promotionalBenefits": {
          "description": "Describes the consideration given to the customer with the promotion.  For example a discount or free product.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnPromotionalBenefits"
          }
        },
        "discount": {
          "description": "Discount of the promotion",
          "type": "object",
          "$ref": "#/definitions/ReturnDiscount"
        },
        "conflictingPromotions": {
          "description": "Conflicting promotions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnConflictingPromotions"
          }
        },
        "eligibleAccessories": {
          "description": "Eligible accessories to receive the promotion",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnEligibleAccessories"
          }
        },
        "eligibleDevices": {
          "description": "Eligible devices for the promotion",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnEligibleDevices"
          }
        }
      }
    },
    "ReturnPromotions_1": {
      "type": "object",
      "properties": {
        "actionCode": {
          "type": "string"
        },
        "promotionId": {
          "description": "The unique id of the promotion.",
          "type": "string"
        },
        "shortDescription": {
          "description": "Short description",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "promotionEffectivePeriod": {
          "description": "The time period where the Promotion is effective.",
          "type": "object",
          "$ref": "#/definitions/ReturnPromotionEffectivePeriod_2"
        },
        "customerSpecificDetails": {
          "description": "Named value pairs specific to the customer",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnCustomerSpecificDetails"
          }
        }
      }
    },
    "ReturnRecurringChargeDetail": {
      "type": "object",
      "properties": {
        "periodType": {
          "description": "Monthly, daily, etc...",
          "type": "string"
        },
        "recurringCharges": {
          "description": "List of recurring charge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnRecurringCharges"
          }
        }
      }
    },
    "ReturnRecurringChargeDetail_1": {
      "type": "object",
      "properties": {
        "periodType": {
          "description": "Monthly, daily, etc...",
          "type": "string"
        },
        "recurringCharges": {
          "description": "List of recurring charge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnRecurringCharges_1"
          }
        }
      }
    },
    "ReturnRecurringChargeDetail_2": {
      "type": "object",
      "properties": {
        "periodType": {
          "description": "Monthly, daily, etc...",
          "type": "string"
        },
        "recurringCharges": {
          "description": "List of recurring charge",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnRecurringCharges_2"
          }
        }
      }
    },
    "ReturnRecurringCharges": {
      "type": "object",
      "properties": {
        "startingPeriodNumber": {
          "type": "integer",
          "format": "int32"
        },
        "endingPeriodNumber": {
          "type": "integer",
          "format": "int32"
        },
        "amount": {
          "description": "The price to be charged in dollars, inclusive of all discount(s).  periodicAmount = basisPeriodicAmount minus discountAmount(s)",
          "type": "number",
          "format": "double"
        },
        "basisAmount": {
          "description": "The price to be charged in dollars, before any discount(s).",
          "type": "number",
          "format": "double"
        },
        "discountAmount": {
          "description": "Total amount of discounts, in dollars, that is included in the periodicAmount.",
          "type": "number",
          "format": "double"
        },
        "productChargeIncurredType": {
          "description": "Specifies the timing for when the first charge is incurred for the product: immediate, on usage, or on demand.",
          "type": "string"
        },
        "proratedAmount": {
          "description": "This is the cost that the customer would need to pay in order to add this feature to their current account effective immediately. it is prorated from the current date until the end of the current cycle.",
          "type": "number",
          "format": "double"
        },
        "priceComponents": {
          "description": "The details of charges and deductions that comprise the recurring charge.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnPriceComponents_1"
          }
        },
        "adjustedNumberOfInstallaments": {
          "description": "Number of payment installments adjusted by client.",
          "type": "integer",
          "format": "int32"
        },
        "originalNumberOfInstallaments": {
          "description": "Number of payment installments before it is adjusted.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ReturnRecurringCharges_1": {
      "type": "object",
      "properties": {
        "startingPeriodNumber": {
          "type": "integer",
          "format": "int32"
        },
        "endingPeriodNumber": {
          "type": "integer",
          "format": "int32"
        },
        "amount": {
          "description": "The price to be charged in dollars, inclusive of all discount(s).  periodicAmount = basisPeriodicAmount minus discountAmount(s)",
          "type": "number",
          "format": "double"
        },
        "basisAmount": {
          "description": "The price to be charged in dollars, before any discount(s).",
          "type": "number",
          "format": "double"
        },
        "discountAmount": {
          "description": "Total amount of discounts, in dollars, that is included in the periodicAmount.",
          "type": "number",
          "format": "double"
        },
        "productChargeIncurredType": {
          "description": "Specifies the timing for when the first charge is incurred for the product: immediate, on usage, or on demand.",
          "type": "string"
        },
        "proratedAmount": {
          "description": "This is the cost that the customer would need to pay in order to add this feature to their current account effective immediately. it is prorated from the current date until the end of the current cycle.",
          "type": "number",
          "format": "double"
        },
        "priceComponents": {
          "description": "The details of charges and deductions that comprise the recurring charge.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnPriceComponents_3"
          }
        },
        "adjustedNumberOfInstallaments": {
          "description": "Number of payment installments adjusted by client.",
          "type": "integer",
          "format": "int32"
        },
        "originalNumberOfInstallaments": {
          "description": "Number of payment installments before it is adjusted.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ReturnRecurringCharges_2": {
      "type": "object",
      "properties": {
        "startingPeriodNumber": {
          "type": "integer",
          "format": "int32"
        },
        "endingPeriodNumber": {
          "type": "integer",
          "format": "int32"
        },
        "amount": {
          "description": "The price to be charged in dollars, inclusive of all discount(s).  periodicAmount = basisPeriodicAmount minus discountAmount(s)",
          "type": "number",
          "format": "double"
        },
        "basisAmount": {
          "description": "The price to be charged in dollars, before any discount(s).",
          "type": "number",
          "format": "double"
        },
        "discountAmount": {
          "description": "Total amount of discounts, in dollars, that is included in the periodicAmount.",
          "type": "number",
          "format": "double"
        },
        "productChargeIncurredType": {
          "description": "Specifies the timing for when the first charge is incurred for the product: immediate, on usage, or on demand.",
          "type": "string"
        },
        "proratedAmount": {
          "description": "This is the cost that the customer would need to pay in order to add this feature to their current account effective immediately. it is prorated from the current date until the end of the current cycle.",
          "type": "number",
          "format": "double"
        },
        "priceComponents": {
          "description": "The details of charges and deductions that comprise the recurring charge.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnPriceComponents_5"
          }
        },
        "adjustedNumberOfInstallaments": {
          "description": "Number of payment installments adjusted by client.",
          "type": "integer",
          "format": "int32"
        },
        "originalNumberOfInstallaments": {
          "description": "Number of payment installments before it is adjusted.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ReturnRequiredOffers": {
      "type": "object",
      "properties": {
        "relationshipType": {
          "description": "The type of relationship between the two offers.",
          "type": "string"
        },
        "link": {
          "description": "A link to the offer that is related to this one.",
          "type": "string"
        },
        "relatedOfferId": {
          "description": "The id of the offer that is related to this one.",
          "type": "string"
        },
        "relatedOfferName": {
          "description": "The name of the offer that is related to this one.",
          "type": "string"
        },
        "displayPriority": {
          "description": "Display priority or sequence",
          "type": "integer",
          "format": "int32"
        },
        "minimumNumberOfLines": {
          "description": "Minimum number of lines needed for eligibility.",
          "type": "integer",
          "format": "int32"
        },
        "maximumNumberOfLines": {
          "description": "Maximum number of lines allowed to be eligible.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ReturnShippingAddress": {
      "type": "object",
      "properties": {
        "addressId": {
          "description": "Identifier of address.",
          "type": "string"
        },
        "purposes": {
          "description": "The purpose or usage context for which the address should be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addressLine1": {
          "description": "The first line of the address, required.",
          "type": "string"
        },
        "addressLine2": {
          "description": "The second line of the address, optional.",
          "type": "string"
        },
        "addressLine3": {
          "description": "The third line of the address, optional.",
          "type": "string"
        },
        "cityName": {
          "description": "The name of the city in the mailing address. For military or diplomatic addresses should contain FPO, APO, or DPO.",
          "type": "string"
        },
        "stateCode": {
          "description": "The two letter state code.",
          "type": "string"
        },
        "zip": {
          "description": "The 5 digit zip or postal delivery code.",
          "type": "string"
        },
        "zipExt": {
          "description": "The zip or postal delivery extension.",
          "type": "string"
        },
        "countryCode": {
          "description": "Country code",
          "type": "string"
        },
        "geoCode": {
          "description": "A unique code that represents a geospatial coordinate measurement of an exact geographic location and time at, below, or above the surface of the earth",
          "type": "string"
        },
        "addressFormatType": {
          "type": "string"
        },
        "default": {
          "description": "Flags the address to be used for default communications.",
          "type": "string"
        },
        "validationStatus": {
          "description": "Specifies whether the address is VALIDATED, NONVALIDATED, or UNDELIVERABLE.",
          "type": "string"
        },
        "overwritten": {
          "description": "Flags whether the provided address has been overwritten by the system.",
          "type": "boolean"
        },
        "classification": {
          "description": "Classification of the address",
          "type": "string"
        },
        "label": {
          "description": "Address label",
          "type": "string"
        },
        "addressLine4": {
          "description": "The fourth free form line, expressed as text, of an address",
          "type": "string"
        },
        "stateName": {
          "description": "Name of the state",
          "type": "string"
        },
        "provinceName": {
          "description": "Name of the province",
          "type": "string"
        },
        "provinceCode": {
          "description": "Province code",
          "type": "string"
        },
        "countyName": {
          "description": "Name of the county",
          "type": "string"
        },
        "countyCode": {
          "description": "County code",
          "type": "string"
        },
        "attention": {
          "description": "Attention of the address",
          "type": "string"
        },
        "careOf": {
          "description": "The name, expressed as text, of a person or organization at this address to whom incoming mail is marked with words such as care of or C/O",
          "type": "string"
        },
        "postalCode": {
          "description": "A code specifying the postal code of the address",
          "type": "string"
        },
        "uncertaintyIndicator": {
          "description": "To indicate if the address is uncertain or not",
          "type": "boolean"
        },
        "geographicCoordinate": {
          "description": "The latitude and longitude of the geographic location that corresponds to the address.",
          "type": "object",
          "$ref": "#/definitions/ReturnGeographicCoordinate"
        },
        "urbanization": {
          "description": "Urbanization name or code",
          "type": "string"
        }
      }
    },
    "ReturnSpecifications": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "ReturnSpecifications_1": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "ReturnSpecifications_2": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "ReturnSpecifications_3": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "rank": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ReturnSpecifications_4": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "ReturnSpecifications_5": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "ReturnSpecifications_6": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "ReturnTacCodes": {
      "type": "object",
      "properties": {
        "tacCode": {
          "description": "The Type Allocation Code (TAC) is the initial eight-digit portion of the 15-digit IMEI and 16-digit IMEISV codes used to uniquely identify wireless devices.",
          "type": "string"
        },
        "skus": {
          "description": "Unique identifier of the sku that are associated with the tac.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ReturnTaxCollection": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "$ref": "#/definitions/Metadata"
        },
        "pagination": {
          "type": "object",
          "$ref": "#/definitions/Pagination"
        },
        "taxes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Taxes"
          }
        },
        "totalTax": {
          "description": "Aggregate of all taxes.",
          "type": "number",
          "format": "double"
        },
        "totalTaxDescription": {
          "description": "Text describing the tax to be presented with the tax amount on documents, screens, and forms.",
          "type": "string"
        }
      }
    },
    "SalesInfo": {
      "type": "object",
      "properties": {
        "createdBy": {
          "description": "The identity of the representative who created the Cart",
          "type": "string"
        },
        "lastModifiedBy": {
          "description": "The identity of the representative who last modified the Cart",
          "type": "string"
        },
        "checkoutBy": {
          "description": "The identity of the representative who converted the Cart to an Order",
          "type": "string"
        },
        "estimatedCommission": {
          "type": "number",
          "format": "double"
        },
        "storeId": {
          "type": "string"
        },
        "salesChannel": {
          "description": "Describes how the sale was received.",
          "type": "string"
        },
        "salesSubChannel": {
          "description": "Specifies how the sale was received within the channel.",
          "type": "string"
        },
        "salesSubChannelCategory": {
          "description": "Categorizes how the sale was received within the subchannel.",
          "type": "string"
        },
        "fraudCheckStatus": {
          "description": "Status of the shopping cart in fraud check.",
          "type": "string"
        },
        "fraudCheckMessage": {
          "description": "Message produced by fraud check.",
          "type": "string"
        },
        "ipAddress": {
          "description": "IP address where the order originated.",
          "type": "string"
        },
        "deviceFingerprintId": {
          "description": "Device fingerprint id where the order originated.",
          "type": "string"
        },
        "jurisdictionCode": {
          "description": "Code used to identify the jurisdiction that the tax was calculated for, a.k.a. taxAreaId.",
          "type": "string"
        },
        "emailAddress": {
          "description": "Email Address",
          "type": "string"
        },
        "storeAddress": {
          "description": "Address of the store",
          "type": "object",
          "$ref": "#/definitions/StoreAddress"
        },
        "contactNumber": {
          "description": "Contact phone number",
          "type": "string"
        },
        "originalDealerCode": {
          "description": "Code of dealer who initiated transaction.",
          "type": "string"
        },
        "checkOutDealerCode": {
          "description": "Code of dealer who finish teh check out transaction.",
          "type": "string"
        },
        "storeName": {
          "description": "Name of the store",
          "type": "string"
        },
        "salesChannelWebsite": {
          "description": "Sales channel Website URL",
          "type": "string"
        },
        "operatorId": {
          "description": "Identifier of user/operator",
          "type": "string"
        }
      }
    },
    "searchCriteria": {
      "type": "object",
      "properties": {
        "phoneNumber": {
          "type": "object",
          "$ref": "#/definitions/phoneNumber"
        },
        "accountNumber": {
          "type": "object",
          "$ref": "#/definitions/accountNumber"
        },
        "emailAddress": {
          "type": "string"
        }
      }
    },
    "ServiceCollection": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "$ref": "#/definitions/MetaDataFragment"
        },
        "pagination": {
          "type": "object",
          "$ref": "#/definitions/PaginationFragment"
        },
        "services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServicesServices"
          }
        }
      }
    },
    "ServiceDetailFeatures": {
      "type": "object",
      "properties": {
        "featureId": {
          "description": "Unique identifier of the feature.",
          "type": "string"
        },
        "featureName": {
          "description": "Name of the feature.",
          "type": "string"
        },
        "featureStatus": {
          "description": "Status of the feature.",
          "type": "string"
        },
        "recurringCharge": {
          "description": "The recurring charge amount the customer is charged for this feature.",
          "type": "number",
          "format": "double"
        }
      }
    },
    "ServiceProducts": {
      "type": "object",
      "properties": {
        "productId": {
          "description": "Uniquely identifies a known product.",
          "type": "string"
        },
        "productName": {
          "description": "The common name of the product, as defined in the product catalog.",
          "type": "string"
        },
        "productKeywords": {
          "description": "Words used in searches for the product.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "description": "Description of the product",
          "type": "string"
        },
        "shortDescription": {
          "description": "Short description of the product",
          "type": "string"
        },
        "longDescription": {
          "description": "Long description of the product",
          "type": "string"
        },
        "serviceProvider": {
          "description": "Service provider for the device",
          "type": "string"
        }
      }
    },
    "Services": {
      "type": "object",
      "properties": {
        "offerId": {
          "description": "Uniquely identifies a product offering in the sales catalog.",
          "type": "string"
        },
        "offerType": {
          "description": "Primary categorization of Product Offering.",
          "type": "string"
        },
        "offerSubType": {
          "description": "Secondary categorization of Product Offering.",
          "type": "string"
        },
        "productType": {
          "description": "The category of product included in the offer: Plan, Service, Device, Accessory, or Financial.",
          "type": "string"
        },
        "productSubTypes": {
          "description": "Secondary categorizations of the type of product included in the offer.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "offeringStatus": {
          "description": "Status of the product offering in the sales catalog.",
          "type": "string"
        },
        "offeringStatusPeriod": {
          "description": "The time period where the offeringStatus is valid.",
          "type": "object",
          "$ref": "#/definitions/BatchOrdersOfferingStatusPeriod_1"
        },
        "businessUnit": {
          "description": "The different T-Mobile business units require complete separation of assets. Separate companies that comprise TMUS corporation.  The system restricts a Customer to one Business Unit.  In other words, a Customer in one Business Unit is not visible in any of the other  Business Units of the corporation. For example, a Metro PCS customers billing address cannot be looked up by a Magenta representative.  There is no capability to override this in the system.",
          "type": "string"
        },
        "billingMethod": {
          "description": "The Billing Method specifies the billing experience that the customer has qualified for and requested. A change of the billing method implies the need to create a new billing arrangement.",
          "type": "string"
        },
        "brand": {
          "description": "The business name under which a TMUS product is sold.  A Customer can have accounts in any Brand, within the same Business Unit. For example, a T-Mobile customer may also have a branded account with a national retailer.",
          "type": "string"
        },
        "unitPrice": {
          "description": "Full list price per unit as set by T-Mobile",
          "type": "number",
          "format": "double"
        },
        "offerCategory": {
          "description": "Top-level display categorization for product offers.",
          "type": "string"
        },
        "offerSubCategory1": {
          "description": "Second-level display categorization for product offers.",
          "type": "string"
        },
        "offerSubCategory2": {
          "description": "Third-level display categorization for product offers.",
          "type": "string"
        },
        "offerName": {
          "description": "The commonly used name of the Offer, as defined in the Product Catalog.",
          "type": "string"
        },
        "offerDescription": {
          "description": "The description of the offer, as defined in the product catalog.",
          "type": "string"
        },
        "offerShortDescription": {
          "description": "The brief description of the offer, as defined in the product catalog.",
          "type": "string"
        },
        "offerLongDescription": {
          "description": "The verbose description of the offer, as defined in the product catalog.",
          "type": "string"
        },
        "displayOrder": {
          "description": "The sequence in which the offer is displayed.",
          "type": "integer",
          "format": "int32"
        },
        "billingTypes": {
          "description": "The type of billing account this offer is available to.  Could be prepaid and/or postpaid.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "legalDisclosure": {
          "description": "Disclaimers or any other textual information that must be displayed to customers for legal reasons.",
          "type": "string"
        },
        "specifications": {
          "description": "Named value pairs",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersSpecifications_8"
          }
        },
        "offerLevel": {
          "description": "Level in the customer hierarchy to which the offer should be applied.",
          "type": "string"
        },
        "includedServiceCapacities": {
          "description": "The amounts and types of service that are included in the price of the service offer.  For example 6GB of high-speed data service.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersIncludedServiceCapacities"
          }
        },
        "supportsDataStash": {
          "description": "True if the rate plan supports Data Stash",
          "type": "boolean"
        },
        "serviceStartTime": {
          "description": "Date and time when the service was started for the customer.",
          "type": "string",
          "format": "date-time"
        },
        "serviceEndTime": {
          "description": "Date and time when the service was ended for the customer.",
          "type": "string",
          "format": "date-time"
        },
        "serviceStatus": {
          "description": "Status of the service for the customer.",
          "type": "string"
        },
        "recurringCharge": {
          "description": "The recurring charge amount the customer is charged for this service.",
          "type": "number",
          "format": "double"
        },
        "oneTimeCharge": {
          "description": "The one time charge the customer is charged for this service.",
          "type": "number",
          "format": "double"
        },
        "features": {
          "description": "Low-level features that are included in all service products that the customer has purchased.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Features"
          }
        },
        "serviceProducts": {
          "description": "The products that are included in the service offer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceProducts"
          }
        }
      }
    },
    "ServiceServiceProducts": {
      "type": "object",
      "properties": {
        "productId": {
          "description": "Uniquely identifies a known product.",
          "type": "string"
        },
        "productName": {
          "description": "The common name of the product, as defined in the product catalog.",
          "type": "string"
        },
        "productKeywords": {
          "description": "Words used in searches for the product.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "description": "Description of the product",
          "type": "string"
        },
        "shortDescription": {
          "description": "Short description of the product",
          "type": "string"
        },
        "longDescription": {
          "description": "Long description of the product",
          "type": "string"
        },
        "serviceProvider": {
          "description": "Service provider for the device",
          "type": "string"
        }
      }
    },
    "ServicesServices": {
      "type": "object",
      "properties": {
        "offerId": {
          "description": "Uniquely identifies a product offering in the sales catalog.",
          "type": "string"
        },
        "offerType": {
          "description": "Primary categorization of Product Offering.",
          "type": "string"
        },
        "offerSubType": {
          "description": "Secondary categorization of Product Offering.",
          "type": "string"
        },
        "productType": {
          "description": "The category of product included in the offer: Plan, Service, Device, Accessory, or Financial.",
          "type": "string"
        },
        "productSubTypes": {
          "description": "Secondary categorizations of the type of product included in the offer.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "offeringStatus": {
          "description": "Status of the product offering in the sales catalog.",
          "type": "string"
        },
        "offeringStatusPeriod": {
          "description": "The time period where the offeringStatus is valid.",
          "type": "object",
          "$ref": "#/definitions/OfferingStatusPeriod"
        },
        "businessUnit": {
          "description": "The different T-Mobile business units require complete separation of assets. Separate companies that comprise TMUS corporation.  The system restricts a Customer to one Business Unit.  In other words, a Customer in one Business Unit is not visible in any of the other  Business Units of the corporation. For example, a Metro PCS customers billing address cannot be looked up by a Magenta representative.  There is no capability to override this in the system.",
          "type": "string"
        },
        "billingMethod": {
          "description": "The Billing Method specifies the billing experience that the customer has qualified for and requested. A change of the billing method implies the need to create a new billing arrangement.",
          "type": "string"
        },
        "brand": {
          "description": "The business name under which a TMUS product is sold.  A Customer can have accounts in any Brand, within the same Business Unit. For example, a T-Mobile customer may also have a branded account with a national retailer.",
          "type": "string"
        },
        "unitPrice": {
          "description": "Full list price per unit as set by T-Mobile",
          "type": "number",
          "format": "double"
        },
        "offerCategory": {
          "description": "Top-level display categorization for product offers.",
          "type": "string"
        },
        "offerSubCategory1": {
          "description": "Second-level display categorization for product offers.",
          "type": "string"
        },
        "offerSubCategory2": {
          "description": "Third-level display categorization for product offers.",
          "type": "string"
        },
        "offerName": {
          "description": "The commonly used name of the Offer, as defined in the Product Catalog.",
          "type": "string"
        },
        "offerDescription": {
          "description": "The description of the offer, as defined in the product catalog.",
          "type": "string"
        },
        "offerShortDescription": {
          "description": "The brief description of the offer, as defined in the product catalog.",
          "type": "string"
        },
        "offerLongDescription": {
          "description": "The verbose description of the offer, as defined in the product catalog.",
          "type": "string"
        },
        "displayOrder": {
          "description": "The sequence in which the offer is displayed.",
          "type": "integer",
          "format": "int32"
        },
        "billingTypes": {
          "description": "The type of billing account this offer is available to.  Could be prepaid and/or postpaid.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "legalDisclosure": {
          "description": "Disclaimers or any other textual information that must be displayed to customers for legal reasons.",
          "type": "string"
        },
        "specifications": {
          "description": "Named value pairs",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OfferSummaryCommonSpecifications"
          }
        },
        "offerLevel": {
          "description": "Level in the customer hierarchy to which the offer should be applied.",
          "type": "string"
        },
        "includedServiceCapacities": {
          "description": "The amounts and types of service that are included in the price of the service offer.  For example 6GB of high-speed data service.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IncludedServiceCapacities"
          }
        },
        "supportsDataStash": {
          "description": "True if the rate plan supports Data Stash",
          "type": "boolean"
        },
        "serviceStartTime": {
          "description": "Date and time when the service was started for the customer.",
          "type": "string",
          "format": "date-time"
        },
        "serviceEndTime": {
          "description": "Date and time when the service was ended for the customer.",
          "type": "string",
          "format": "date-time"
        },
        "serviceStatus": {
          "description": "Status of the service for the customer.",
          "type": "string"
        },
        "recurringCharge": {
          "description": "The recurring charge amount the customer is charged for this service.",
          "type": "number",
          "format": "double"
        },
        "oneTimeCharge": {
          "description": "The one time charge the customer is charged for this service.",
          "type": "number",
          "format": "double"
        },
        "features": {
          "description": "Low-level features that are included in all service products that the customer has purchased.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceDetailFeatures"
          }
        },
        "serviceProducts": {
          "description": "The products that are included in the service offer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceServiceProducts"
          }
        }
      }
    },
    "ShipFrom": {
      "type": "object",
      "properties": {
        "fullName": {
          "description": "The full name of the person, including first, middle, and family names.",
          "type": "string"
        },
        "firstName": {
          "description": "The given name or first name of the person",
          "type": "string"
        },
        "middleName": {
          "description": "The middle name or middle initial of the person.",
          "type": "string"
        },
        "familyName": {
          "description": "The family name or surname or last name of the person.",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        },
        "suffix": {
          "type": "string"
        },
        "addressId": {
          "description": "Identifier of address.",
          "type": "string"
        },
        "purposes": {
          "description": "The purpose or usage context for which the address should be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addressLine1": {
          "description": "The first line of the address, required.",
          "type": "string"
        },
        "addressLine2": {
          "description": "The second line of the address, optional.",
          "type": "string"
        },
        "addressLine3": {
          "description": "The third line of the address, optional.",
          "type": "string"
        },
        "cityName": {
          "description": "The name of the city in the mailing address. For military or diplomatic addresses should contain FPO, APO, or DPO.",
          "type": "string"
        },
        "stateCode": {
          "description": "The two letter state code.",
          "type": "string"
        },
        "zip": {
          "description": "The 5 digit zip or postal delivery code.",
          "type": "string"
        },
        "zipExt": {
          "description": "The zip or postal delivery extension.",
          "type": "string"
        },
        "countryCode": {
          "description": "Country code",
          "type": "string"
        },
        "geoCode": {
          "description": "A unique code that represents a geospatial coordinate measurement of an exact geographic location and time at, below, or above the surface of the earth",
          "type": "string"
        },
        "addressFormatType": {
          "type": "string"
        }
      }
    },
    "ShippingAddress": {
      "type": "object",
      "properties": {
        "addressId": {
          "description": "Identifier of address.",
          "type": "string"
        },
        "purposes": {
          "description": "The purpose or usage context for which the address should be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addressLine1": {
          "description": "The first line of the address, required.",
          "type": "string"
        },
        "addressLine2": {
          "description": "The second line of the address, optional.",
          "type": "string"
        },
        "addressLine3": {
          "description": "The third line of the address, optional.",
          "type": "string"
        },
        "cityName": {
          "description": "The name of the city in the mailing address. For military or diplomatic addresses should contain FPO, APO, or DPO.",
          "type": "string"
        },
        "stateCode": {
          "description": "The two letter state code.",
          "type": "string"
        },
        "zip": {
          "description": "The 5 digit zip or postal delivery code.",
          "type": "string"
        },
        "zipExt": {
          "description": "The zip or postal delivery extension.",
          "type": "string"
        },
        "countryCode": {
          "description": "Country code",
          "type": "string"
        },
        "geoCode": {
          "description": "A unique code that represents a geospatial coordinate measurement of an exact geographic location and time at, below, or above the surface of the earth",
          "type": "string"
        },
        "addressFormatType": {
          "type": "string"
        },
        "default": {
          "description": "Flags the address to be used for default communications.",
          "type": "string"
        },
        "validationStatus": {
          "description": "Specifies whether the address is VALIDATED, NONVALIDATED, or UNDELIVERABLE.",
          "type": "string"
        },
        "overwritten": {
          "description": "Flags whether the provided address has been overwritten by the system.",
          "type": "boolean"
        },
        "classification": {
          "description": "Classification of the address",
          "type": "string"
        },
        "label": {
          "description": "Address label",
          "type": "string"
        },
        "addressLine4": {
          "description": "The fourth free form line, expressed as text, of an address",
          "type": "string"
        },
        "stateName": {
          "description": "Name of the state",
          "type": "string"
        },
        "provinceName": {
          "description": "Name of the province",
          "type": "string"
        },
        "provinceCode": {
          "description": "Province code",
          "type": "string"
        },
        "countyName": {
          "description": "Name of the county",
          "type": "string"
        },
        "countyCode": {
          "description": "County code",
          "type": "string"
        },
        "attention": {
          "description": "Attention of the address",
          "type": "string"
        },
        "careOf": {
          "description": "The name, expressed as text, of a person or organization at this address to whom incoming mail is marked with words such as care of or C/O",
          "type": "string"
        },
        "postalCode": {
          "description": "A code specifying the postal code of the address",
          "type": "string"
        },
        "uncertaintyIndicator": {
          "description": "To indicate if the address is uncertain or not",
          "type": "boolean"
        },
        "geographicCoordinate": {
          "description": "The latitude and longitude of the geographic location that corresponds to the address.",
          "type": "object",
          "$ref": "#/definitions/GeographicCoordinate"
        },
        "urbanization": {
          "description": "Urbanization name or code",
          "type": "string"
        }
      }
    },
    "ShippingDetail": {
      "type": "object",
      "properties": {
        "shippingId": {
          "description": "Uniquely identifies a shipping details record.",
          "type": "string"
        },
        "trackingNumber": {
          "description": "Tracking number provided by the freight carrier.",
          "type": "string"
        },
        "shippingDate": {
          "description": "Date of the shipment.",
          "type": "string",
          "format": "date"
        },
        "trackingUrl": {
          "description": "URL provided by the freight carrier to track the progress of the shipment.",
          "type": "string"
        },
        "freightCarrier": {
          "description": "Name of the freight carrier.",
          "type": "string"
        },
        "description": {
          "description": "Brief description of the shipping option, eg: UPS Ground (5-7 business days)",
          "type": "string"
        },
        "serviceLevelCode": {
          "description": "Shipping carrier priority code such as 2nd day, next day, priority, etc.",
          "type": "string"
        },
        "shippingCharge": {
          "description": "Charge for the shipping option.",
          "type": "number",
          "format": "double"
        },
        "waiverIndicator": {
          "description": "To indicate if shipping charges can be waived by client, or if shaiiping charge is waived in actual order.",
          "type": "boolean"
        },
        "taxExemptionIndicator": {
          "description": "To indicate if tax can be exempted for the shipping charges when overall tax is calculated, or to indicate if shipping tax is exempted in actual order.",
          "type": "boolean"
        },
        "shippingDiscountAmount": {
          "description": "Discount amount for shipping.",
          "type": "number",
          "format": "double"
        },
        "shippingDiscountPercent": {
          "description": "Discount by percentage for shipping",
          "type": "number",
          "format": "double"
        },
        "shipTo": {
          "description": "Shipping to contact information",
          "type": "object",
          "$ref": "#/definitions/ShipTo"
        },
        "shipFrom": {
          "description": "Shipping from contact information",
          "type": "object",
          "$ref": "#/definitions/ShipFrom"
        },
        "estimatedDelivery": {
          "description": "Estimated delivery date.",
          "type": "object",
          "$ref": "#/definitions/EstimatedDelivery"
        },
        "expectedDelivery": {
          "description": "The date when the customer expect for delivery, updated from the shipper.",
          "type": "object",
          "$ref": "#/definitions/ExpectedDelivery"
        },
        "requestedDelivery": {
          "description": "Requested delivery date from customer",
          "type": "object",
          "$ref": "#/definitions/RequestedDelivery"
        },
        "shippingLabelUrl": {
          "description": "URL that directs to the actual shipping lable.",
          "type": "string"
        },
        "estimatedShipment": {
          "description": "Estimated shipment date",
          "type": "object",
          "$ref": "#/definitions/EstimatedShipment"
        }
      }
    },
    "ShippingDetailEstimatedDelivery": {
      "type": "object",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "ShippingDetailEstimatedShipment": {
      "type": "object",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "ShippingDetailExpectedDelivery": {
      "type": "object",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "ShippingDetailRequestedDelivery": {
      "type": "object",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "ShippingDetails": {
      "type": "object",
      "properties": {
        "shippingId": {
          "description": "Uniquely identifies a shipping details record.",
          "type": "string"
        },
        "trackingNumber": {
          "description": "Tracking number provided by the freight carrier.",
          "type": "string"
        },
        "shippingDate": {
          "description": "Date of the shipment.",
          "type": "string",
          "format": "date"
        },
        "trackingUrl": {
          "description": "URL provided by the freight carrier to track the progress of the shipment.",
          "type": "string"
        },
        "freightCarrier": {
          "description": "Name of the freight carrier.",
          "type": "string"
        },
        "description": {
          "description": "Brief description of the shipping option, eg: UPS Ground (5-7 business days)",
          "type": "string"
        },
        "serviceLevelCode": {
          "description": "Shipping carrier priority code such as 2nd day, next day, priority, etc.",
          "type": "string"
        },
        "shippingCharge": {
          "description": "Charge for the shipping option.",
          "type": "number",
          "format": "double"
        },
        "waiverIndicator": {
          "description": "To indicate if shipping charges can be waived by client, or if shaiiping charge is waived in actual order.",
          "type": "boolean"
        },
        "taxExemptionIndicator": {
          "description": "To indicate if tax can be exempted for the shipping charges when overall tax is calculated, or to indicate if shipping tax is exempted in actual order.",
          "type": "boolean"
        },
        "shippingDiscountAmount": {
          "description": "Discount amount for shipping.",
          "type": "number",
          "format": "double"
        },
        "shippingDiscountPercent": {
          "description": "Discount by percentage for shipping",
          "type": "number",
          "format": "double"
        },
        "shipTo": {
          "description": "Shipping to contact information",
          "type": "object",
          "$ref": "#/definitions/ShippingDetailShipTo"
        },
        "shipFrom": {
          "description": "Shipping from contact information",
          "type": "object",
          "$ref": "#/definitions/ShippingDetailShipFrom"
        },
        "estimatedDelivery": {
          "description": "Estimated delivery date.",
          "type": "object",
          "$ref": "#/definitions/ShippingDetailEstimatedDelivery"
        },
        "expectedDelivery": {
          "description": "The date when the customer expect for delivery, updated from the shipper.",
          "type": "object",
          "$ref": "#/definitions/ShippingDetailExpectedDelivery"
        },
        "requestedDelivery": {
          "description": "Requested delivery date from customer",
          "type": "object",
          "$ref": "#/definitions/ShippingDetailRequestedDelivery"
        },
        "shippingLabelUrl": {
          "description": "URL that directs to the actual shipping lable.",
          "type": "string"
        },
        "estimatedShipment": {
          "description": "Estimated shipment date",
          "type": "object",
          "$ref": "#/definitions/ShippingDetailEstimatedShipment"
        }
      }
    },
    "ShippingDetailShipFrom": {
      "type": "object",
      "properties": {
        "fullName": {
          "description": "The full name of the person, including first, middle, and family names.",
          "type": "string"
        },
        "firstName": {
          "description": "The given name or first name of the person",
          "type": "string"
        },
        "middleName": {
          "description": "The middle name or middle initial of the person.",
          "type": "string"
        },
        "familyName": {
          "description": "The family name or surname or last name of the person.",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        },
        "suffix": {
          "type": "string"
        },
        "addressId": {
          "description": "Identifier of address.",
          "type": "string"
        },
        "purposes": {
          "description": "The purpose or usage context for which the address should be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addressLine1": {
          "description": "The first line of the address, required.",
          "type": "string"
        },
        "addressLine2": {
          "description": "The second line of the address, optional.",
          "type": "string"
        },
        "addressLine3": {
          "description": "The third line of the address, optional.",
          "type": "string"
        },
        "cityName": {
          "description": "The name of the city in the mailing address. For military or diplomatic addresses should contain FPO, APO, or DPO.",
          "type": "string"
        },
        "stateCode": {
          "description": "The two letter state code.",
          "type": "string"
        },
        "zip": {
          "description": "The 5 digit zip or postal delivery code.",
          "type": "string"
        },
        "zipExt": {
          "description": "The zip or postal delivery extension.",
          "type": "string"
        },
        "countryCode": {
          "description": "Country code",
          "type": "string"
        },
        "geoCode": {
          "description": "A unique code that represents a geospatial coordinate measurement of an exact geographic location and time at, below, or above the surface of the earth",
          "type": "string"
        },
        "addressFormatType": {
          "type": "string"
        }
      }
    },
    "ShippingDetailShipTo": {
      "type": "object",
      "properties": {
        "fullName": {
          "description": "The full name of the person, including first, middle, and family names.",
          "type": "string"
        },
        "firstName": {
          "description": "The given name or first name of the person",
          "type": "string"
        },
        "middleName": {
          "description": "The middle name or middle initial of the person.",
          "type": "string"
        },
        "familyName": {
          "description": "The family name or surname or last name of the person.",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        },
        "suffix": {
          "type": "string"
        },
        "addressId": {
          "description": "Identifier of address.",
          "type": "string"
        },
        "purposes": {
          "description": "The purpose or usage context for which the address should be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addressLine1": {
          "description": "The first line of the address, required.",
          "type": "string"
        },
        "addressLine2": {
          "description": "The second line of the address, optional.",
          "type": "string"
        },
        "addressLine3": {
          "description": "The third line of the address, optional.",
          "type": "string"
        },
        "cityName": {
          "description": "The name of the city in the mailing address. For military or diplomatic addresses should contain FPO, APO, or DPO.",
          "type": "string"
        },
        "stateCode": {
          "description": "The two letter state code.",
          "type": "string"
        },
        "zip": {
          "description": "The 5 digit zip or postal delivery code.",
          "type": "string"
        },
        "zipExt": {
          "description": "The zip or postal delivery extension.",
          "type": "string"
        },
        "countryCode": {
          "description": "Country code",
          "type": "string"
        },
        "geoCode": {
          "description": "A unique code that represents a geospatial coordinate measurement of an exact geographic location and time at, below, or above the surface of the earth",
          "type": "string"
        },
        "addressFormatType": {
          "type": "string"
        }
      }
    },
    "ShipTo": {
      "type": "object",
      "properties": {
        "fullName": {
          "description": "The full name of the person, including first, middle, and family names.",
          "type": "string"
        },
        "firstName": {
          "description": "The given name or first name of the person",
          "type": "string"
        },
        "middleName": {
          "description": "The middle name or middle initial of the person.",
          "type": "string"
        },
        "familyName": {
          "description": "The family name or surname or last name of the person.",
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        },
        "suffix": {
          "type": "string"
        },
        "addressId": {
          "description": "Identifier of address.",
          "type": "string"
        },
        "purposes": {
          "description": "The purpose or usage context for which the address should be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addressLine1": {
          "description": "The first line of the address, required.",
          "type": "string"
        },
        "addressLine2": {
          "description": "The second line of the address, optional.",
          "type": "string"
        },
        "addressLine3": {
          "description": "The third line of the address, optional.",
          "type": "string"
        },
        "cityName": {
          "description": "The name of the city in the mailing address. For military or diplomatic addresses should contain FPO, APO, or DPO.",
          "type": "string"
        },
        "stateCode": {
          "description": "The two letter state code.",
          "type": "string"
        },
        "zip": {
          "description": "The 5 digit zip or postal delivery code.",
          "type": "string"
        },
        "zipExt": {
          "description": "The zip or postal delivery extension.",
          "type": "string"
        },
        "countryCode": {
          "description": "Country code",
          "type": "string"
        },
        "geoCode": {
          "description": "A unique code that represents a geospatial coordinate measurement of an exact geographic location and time at, below, or above the surface of the earth",
          "type": "string"
        },
        "addressFormatType": {
          "type": "string"
        }
      }
    },
    "SpecificationGroups": {
      "type": "object",
      "properties": {
        "groupName": {
          "type": "string"
        },
        "specifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchOrdersSpecifications_7"
          }
        }
      }
    },
    "SpecificationGroupSpecifications": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "Specifications": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "rank": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "statuses": {
      "type": "object",
      "required": [
        "orderid"
      ],
      "properties": {
        "orderid": {
          "type": "string"
        },
        "possibleStatusCodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PossibleStatusCodes"
          }
        }
      }
    },
    "StoreAddress": {
      "type": "object",
      "properties": {
        "addressId": {
          "description": "Identifier of address.",
          "type": "string"
        },
        "purposes": {
          "description": "The purpose or usage context for which the address should be used.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addressLine1": {
          "description": "The first line of the address, required.",
          "type": "string"
        },
        "addressLine2": {
          "description": "The second line of the address, optional.",
          "type": "string"
        },
        "addressLine3": {
          "description": "The third line of the address, optional.",
          "type": "string"
        },
        "cityName": {
          "description": "The name of the city in the mailing address. For military or diplomatic addresses should contain FPO, APO, or DPO.",
          "type": "string"
        },
        "stateCode": {
          "description": "The two letter state code.",
          "type": "string"
        },
        "zip": {
          "description": "The 5 digit zip or postal delivery code.",
          "type": "string"
        },
        "zipExt": {
          "description": "The zip or postal delivery extension.",
          "type": "string"
        },
        "countryCode": {
          "description": "Country code",
          "type": "string"
        },
        "geoCode": {
          "description": "A unique code that represents a geospatial coordinate measurement of an exact geographic location and time at, below, or above the surface of the earth",
          "type": "string"
        },
        "addressFormatType": {
          "type": "string"
        }
      }
    },
    "SwipeData": {
      "type": "object",
      "properties": {
        "macAddress": {
          "description": "A media access control address (MAC address) is a unique identifier assigned to network interfaces for communications on the physical network segment.",
          "type": "string"
        },
        "encryptionTarget": {
          "description": "The type of data that is being encrypted.",
          "type": "string"
        },
        "encryptedContent": {
          "description": "The track data or card number provided in an encrypted block.",
          "type": "string"
        },
        "keySequenceNumber": {
          "description": "Encripted key sequence number",
          "type": "string"
        },
        "track1Data": {
          "description": "This field contains the unaltered track 1 data from the magnetic stripe of the card.",
          "type": "string"
        },
        "track2Data": {
          "description": "This field contains the unaltered track 2 data from the magnetic stripe of the card.",
          "type": "string"
        },
        "securityLevel": {
          "description": "This field indicates the security level used on a TransArmor transaction.",
          "type": "string"
        },
        "token": {
          "description": "This field contains the Multi-pay token which can be used to replace the PAN. The Multi-pay token is the same length as the card number and contains the same last four digits. Multi-pay tokens can be used to initiate subsequent transactions that would normally be submitted using a PAN (e.g. recurring transactions).",
          "type": "string"
        },
        "tokenType": {
          "description": "This field indicates the Multi-pay token type identifier used in a transaction.",
          "type": "string"
        }
      }
    },
    "TacCodes": {
      "type": "object",
      "properties": {
        "tacCode": {
          "description": "The Type Allocation Code (TAC) is the initial eight-digit portion of the 15-digit IMEI and 16-digit IMEISV codes used to uniquely identify wireless devices.",
          "type": "string"
        },
        "skus": {
          "description": "Unique identifier of the sku that are associated with the tac.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TaxCollection": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "$ref": "#/definitions/MetaDataFragment"
        },
        "pagination": {
          "type": "object",
          "$ref": "#/definitions/PaginationFragment"
        },
        "taxes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxesTaxes"
          }
        },
        "totalTax": {
          "description": "Aggregate of all taxes.",
          "type": "number",
          "format": "double"
        },
        "totalTaxDescription": {
          "description": "Text describing the tax to be presented with the tax amount on documents, screens, and forms.",
          "type": "string"
        }
      }
    },
    "Taxes": {
      "type": "object",
      "properties": {
        "taxId": {
          "description": "Uniquely identifies the tax record.",
          "type": "string"
        },
        "code": {
          "description": "Tax Code",
          "type": "string"
        },
        "jurisdiction": {
          "description": "Name of the jurisdiction used to calculate the tax",
          "type": "string"
        },
        "amount": {
          "description": "Tax amount",
          "type": "number",
          "format": "double"
        },
        "typeCode": {
          "description": "Identifies the type of Tax. Could be SALES, VAT, USE, RESORT, PROPERTY, INCOME, SERVICE, E911,or Flat Rate.",
          "type": "string"
        },
        "taxExemption": {
          "description": "Indicates whether the customer is tax exempt and identifies the pertinent exemtption.",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "taxRate": {
          "description": "Tax rate",
          "type": "number",
          "format": "double"
        },
        "recurringIndicator": {
          "description": "Indicates if the tax is recurring or not",
          "type": "string"
        },
        "name": {
          "description": "Name of the tax",
          "type": "string"
        },
        "group": {
          "description": "The group of the tax that is belong to.",
          "type": "string"
        }
      }
    },
    "TaxesTaxes": {
      "type": "object",
      "properties": {
        "taxId": {
          "description": "Uniquely identifies the tax record.",
          "type": "string"
        },
        "code": {
          "description": "Tax Code",
          "type": "string"
        },
        "jurisdiction": {
          "description": "Name of the jurisdiction used to calculate the tax",
          "type": "string"
        },
        "amount": {
          "description": "Tax amount",
          "type": "number",
          "format": "double"
        },
        "typeCode": {
          "description": "Identifies the type of Tax. Could be SALES, VAT, USE, RESORT, PROPERTY, INCOME, SERVICE, E911,or Flat Rate.",
          "type": "string"
        },
        "taxExemption": {
          "description": "Indicates whether the customer is tax exempt and identifies the pertinent exemtption.",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "taxRate": {
          "description": "Tax rate",
          "type": "number",
          "format": "double"
        },
        "recurringIndicator": {
          "description": "Indicates if the tax is recurring or not",
          "type": "string"
        },
        "name": {
          "description": "Name of the tax",
          "type": "string"
        },
        "group": {
          "description": "The group of the tax that is belong to.",
          "type": "string"
        }
      }
    },
    "UsageBuckets": {
      "type": "object",
      "properties": {
        "bucketId": {
          "description": "Identifier of the bucket",
          "type": "string"
        },
        "bucketType": {
          "description": "Type of bucket, such as data, text, voice",
          "type": "string"
        },
        "bucketDescription": {
          "description": "Description of the bucket",
          "type": "string"
        },
        "limitAmount": {
          "description": "The limited amount which can be different from allocated amount.",
          "type": "number",
          "format": "double"
        },
        "unlimitedIndicator": {
          "description": "To indicate if the amount is unlimited",
          "type": "boolean"
        },
        "effectiveDate": {
          "description": "Effective date",
          "type": "object",
          "$ref": "#/definitions/BucketEffectiveDate"
        },
        "usedAmount": {
          "description": "Amount of quantity used in this transaction.",
          "type": "number",
          "format": "double"
        },
        "remainingAmount": {
          "description": "Amount remaining",
          "type": "number",
          "format": "double"
        },
        "allocatedAmount": {
          "description": "The amount available during the period for the bucket",
          "type": "number",
          "format": "double"
        },
        "measurementUnit": {
          "description": "Measurement unit used",
          "type": "string"
        },
        "name": {
          "description": "Name of the bucket",
          "type": "string"
        },
        "lastActivityDate": {
          "description": "Last activity date",
          "type": "string",
          "format": "date"
        },
        "daysUntilExpiration": {
          "description": "Number of days until expiration",
          "type": "integer",
          "format": "int32"
        },
        "statusCode": {
          "description": "Status code",
          "type": "string"
        },
        "subStatusCode": {
          "description": "Sub Status Code",
          "type": "string"
        },
        "reasonCode": {
          "description": "Status reason code",
          "type": "string"
        },
        "reasonDescription": {
          "description": "Status reason description",
          "type": "string"
        },
        "specifications": {
          "description": "Named value pairs",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BucketSpecifications"
          }
        }
      }
    },
    "UsageCollection": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "$ref": "#/definitions/MetaDataFragment"
        },
        "pagination": {
          "type": "object",
          "$ref": "#/definitions/PaginationFragment"
        },
        "usages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UsagesUsages"
          }
        }
      }
    },
    "Usages": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Name on the usage unit",
          "type": "string"
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        },
        "allocated": {
          "description": "The amount available during the period",
          "type": "number",
          "format": "double"
        },
        "consumed": {
          "description": "The amount consumed during the period",
          "type": "number",
          "format": "double"
        },
        "remaining": {
          "description": "The amount remaining in the period",
          "type": "number",
          "format": "double"
        },
        "overage": {
          "description": "The amount of overage in the period",
          "type": "number",
          "format": "double"
        },
        "measurementUnit": {
          "description": "The unit of measure measuring product usage, such as MB or minutes.",
          "type": "string"
        },
        "usageType": {
          "type": "string"
        },
        "usageSubType": {
          "type": "string"
        },
        "forfeited": {
          "type": "number",
          "format": "double"
        },
        "forfeitReason": {
          "type": "string"
        },
        "expirationTime": {
          "type": "string",
          "format": "date-time"
        },
        "asOfDate": {
          "description": "The date when the usage data is collected.",
          "type": "string",
          "format": "date"
        },
        "throttleThreshold": {
          "description": "Throttle limit or threshold",
          "type": "number",
          "format": "double"
        },
        "throttledIndicator": {
          "description": "To indicate if the throttle limit is reached or not.",
          "type": "boolean"
        },
        "normalDataSpeed": {
          "description": "Normal data speed",
          "type": "number",
          "format": "double"
        },
        "throttleDataSpeed": {
          "description": "Throttle data speed",
          "type": "number",
          "format": "double"
        },
        "buckets": {
          "description": "List of bucket data",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Buckets"
          }
        },
        "unusableSinceDate": {
          "description": "The date when usage is not usable",
          "type": "string",
          "format": "date"
        },
        "daysUntilForfeiture": {
          "description": "Number of days until when the usage is not recoverable",
          "type": "integer",
          "format": "int32"
        },
        "statusCode": {
          "description": "Status code",
          "type": "string"
        },
        "subStatusCode": {
          "description": "Sub Status Code",
          "type": "string"
        },
        "reasonCode": {
          "description": "Status reason code",
          "type": "string"
        },
        "reasonDescription": {
          "description": "Status reason description",
          "type": "string"
        }
      }
    },
    "UsagesUsages": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Name on the usage unit",
          "type": "string"
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        },
        "allocated": {
          "description": "The amount available during the period",
          "type": "number",
          "format": "double"
        },
        "consumed": {
          "description": "The amount consumed during the period",
          "type": "number",
          "format": "double"
        },
        "remaining": {
          "description": "The amount remaining in the period",
          "type": "number",
          "format": "double"
        },
        "overage": {
          "description": "The amount of overage in the period",
          "type": "number",
          "format": "double"
        },
        "measurementUnit": {
          "description": "The unit of measure measuring product usage, such as MB or minutes.",
          "type": "string"
        },
        "usageType": {
          "type": "string"
        },
        "usageSubType": {
          "type": "string"
        },
        "forfeited": {
          "type": "number",
          "format": "double"
        },
        "forfeitReason": {
          "type": "string"
        },
        "expirationTime": {
          "type": "string",
          "format": "date-time"
        },
        "asOfDate": {
          "description": "The date when the usage data is collected.",
          "type": "string",
          "format": "date"
        },
        "throttleThreshold": {
          "description": "Throttle limit or threshold",
          "type": "number",
          "format": "double"
        },
        "throttledIndicator": {
          "description": "To indicate if the throttle limit is reached or not.",
          "type": "boolean"
        },
        "normalDataSpeed": {
          "description": "Normal data speed",
          "type": "number",
          "format": "double"
        },
        "throttleDataSpeed": {
          "description": "Throttle data speed",
          "type": "number",
          "format": "double"
        },
        "buckets": {
          "description": "List of bucket data",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UsageBuckets"
          }
        },
        "unusableSinceDate": {
          "description": "The date when usage is not usable",
          "type": "string",
          "format": "date"
        },
        "daysUntilForfeiture": {
          "description": "Number of days until when the usage is not recoverable",
          "type": "integer",
          "format": "int32"
        },
        "statusCode": {
          "description": "Status code",
          "type": "string"
        },
        "subStatusCode": {
          "description": "Sub Status Code",
          "type": "string"
        },
        "reasonCode": {
          "description": "Status reason code",
          "type": "string"
        },
        "reasonDescription": {
          "description": "Status reason description",
          "type": "string"
        }
      }
    },
    "Validations": {
      "type": "object",
      "properties": {
        "orderLineId": {
          "description": "Identifier of order line",
          "type": "string"
        },
        "level": {
          "description": "Validation level",
          "type": "string"
        },
        "code": {
          "description": "Validation code",
          "type": "string"
        },
        "category": {
          "description": "Validation category",
          "type": "string"
        },
        "message": {
          "description": "Validation message",
          "type": "string"
        },
        "relationshipType": {
          "type": "string"
        },
        "offerId": {
          "description": "Unique identifier of the related offer item.",
          "type": "string"
        },
        "offerDescription": {
          "description": "Description of the related  offer item.",
          "type": "string"
        },
        "promotionId": {
          "description": "The unique id of the promotion.",
          "type": "string"
        },
        "shortDescription": {
          "description": "Short description",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "promotionEffectivePeriod": {
          "description": "The time period where the Promotion is effective.",
          "type": "object",
          "$ref": "#/definitions/ReturnPromotionEffectivePeriod_3"
        },
        "productConflicts": {
          "description": "Conflict product or offer",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductConflicts"
          }
        }
      }
    },
    "Variants": {
      "type": "object",
      "properties": {
        "sku": {
          "description": "Stock keeping unit (SKU).  Uniquely identifies the product in the inventory system.",
          "type": "string"
        },
        "productCondition": {
          "description": "Describes the general condition of the variant.  For example new or refurbished.",
          "type": "string"
        },
        "memory": {
          "description": "Memory size of the sku.",
          "type": "string"
        },
        "color": {
          "description": "Official name of the variant color as marketed by the manufacturer.",
          "type": "string"
        },
        "searchableColor": {
          "description": "Common color names of the variant, for searching.",
          "type": "string"
        },
        "msrp": {
          "description": "Manufacturer suggested retail price.   Provided by the device manufacturer.",
          "type": "number",
          "format": "double"
        },
        "name": {
          "description": "Name of the offer variant.",
          "type": "string"
        },
        "preOrderAvailableTime": {
          "description": "The time when the offer variant is available for pre orders.",
          "type": "string",
          "format": "date-time"
        },
        "comingSoonDate": {
          "description": "The date when T-Mobile will begin accepting requests to notify customers of the availability of the offer variant.",
          "type": "string",
          "format": "date"
        },
        "variantOfferStatus": {
          "description": "Status of the variant in the sales catalog.  Example ForSale, Grandfathered, Retired.",
          "type": "string"
        },
        "inventoryStatus": {
          "description": "Status of the variant in inventory.  Example, in stock, backordered.",
          "type": "string"
        },
        "variantDisplayOrder": {
          "description": "The order that the variant is displayed, relative to other variants of the same offer.",
          "type": "integer",
          "format": "int32"
        },
        "saleStartTime": {
          "description": "The time when the offer variant goes on sale.",
          "type": "string",
          "format": "date-time"
        },
        "saleEndTime": {
          "description": "The time when the offer variant is no longer for sale.",
          "type": "string",
          "format": "date-time"
        },
        "offerVariantId": {
          "description": "Uniquely identifies a offer variant in the sales catalog.",
          "type": "string"
        },
        "defaultDownPayment": {
          "description": "Default down payment amount",
          "type": "number",
          "format": "double"
        },
        "prices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturnPrices_1"
          }
        },
        "financeEligibleIndicator": {
          "description": "If true, the variant can be financed.",
          "type": "boolean"
        },
        "canBeReturnedIndicator": {
          "description": "Indicates if it can be returned or not",
          "type": "boolean"
        }
      }
    },
    "voidEligibility": {
      "type": "object",
      "required": [
        "orderId"
      ],
      "properties": {
        "orderId": {
          "type": "object",
          "$ref": "#/definitions/OrderId"
        }
      }
    },
    "VoucherRedemption": {
      "type": "object",
      "properties": {
        "serialNumber": {
          "description": "The serial number uniquely identifies the Voucher document.",
          "type": "string"
        },
        "issuerId": {
          "description": "Identifies the issuer of the Voucher document.",
          "type": "string"
        },
        "pin": {
          "description": "Personal identification number for the Voucher.",
          "type": "string"
        },
        "voucherRedemptionType": {
          "description": "Categorizes the type of voucher redemption: refill or activation.",
          "type": "string"
        }
      }
    },
    "WarrantyExtendedCoveragePeriod": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "WarrantyManufacturerCoveragePeriod": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    }
  },
  "parameters": {
    "AuthorizationParam": {
      "name": "Authorization",
      "in": "header",
      "required": true,
      "type": "string"
    },
    "Content-typeParam": {
      "name": "Content-type",
      "in": "header",
      "required": true,
      "type": "string"
    },
    "AcceptParam": {
      "name": "Accept",
      "in": "header",
      "required": false,
      "type": "string"
    },
    "applicationuseridParam": {
      "name": "applicationuserid",
      "in": "header",
      "required": false,
      "type": "string"
    },
    "sessionidParam": {
      "name": "sessionid",
      "in": "header",
      "required": false,
      "type": "string"
    },
    "interactionidParam": {
      "name": "interactionid",
      "in": "header",
      "required": false,
      "type": "string"
    },
    "activityidParam": {
      "name": "activityid",
      "in": "header",
      "required": true,
      "type": "string"
    },
    "workflowidParam": {
      "name": "workflowid",
      "in": "header",
      "required": false,
      "type": "string"
    },
    "timestampParam": {
      "name": "timestamp",
      "in": "header",
      "required": false,
      "type": "string",
      "format": "date-time"
    },
    "storeidParam": {
      "name": "storeid",
      "in": "header",
      "required": false,
      "type": "string"
    },
    "terminalidParam": {
      "name": "terminalid",
      "in": "header",
      "required": false,
      "type": "string"
    },
    "tillidParam": {
      "name": "tillid",
      "in": "header",
      "required": false,
      "type": "string"
    },
    "dealercodeParam": {
      "name": "dealercode",
      "in": "header",
      "required": false,
      "type": "integer",
      "format": "int32"
    },
    "segmentationidParam": {
      "name": "segmentationid",
      "in": "header",
      "required": false,
      "type": "string"
    },
    "authcustomeridParam": {
      "name": "authcustomerid",
      "in": "header",
      "required": false,
      "type": "string"
    },
    "authfinancialaccountidParam": {
      "name": "authfinancialaccountid",
      "in": "header",
      "required": false,
      "type": "string"
    },
    "authlineofserviceidParam": {
      "name": "authlineofserviceid",
      "in": "header",
      "required": false,
      "type": "string"
    },
    "Access-Control-Request-HeadersParam": {
      "name": "Access-Control-Request-Headers",
      "in": "header",
      "required": false,
      "type": "string"
    },
    "Access-Control-Request-MethodParam": {
      "name": "Access-Control-Request-Method",
      "in": "header",
      "required": false,
      "type": "string"
    },
    "If-MatchParam": {
      "name": "If-Match",
      "in": "header",
      "required": false,
      "type": "string"
    },
    "If-Modified-SinceParam": {
      "name": "If-Modified-Since",
      "in": "header",
      "required": false,
      "type": "string"
    },
    "If-None-MatchParam": {
      "name": "If-None-Match",
      "in": "header",
      "required": false,
      "type": "string"
    },
    "OriginParam": {
      "name": "Origin",
      "in": "header",
      "required": false,
      "type": "string"
    }
  }
}